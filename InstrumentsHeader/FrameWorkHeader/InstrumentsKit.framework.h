//
//  InstrumentsKit.framework.h
//  MacDemo
//
//  Created by szzc on 2016/11/25.
//  Copyright © 2016年 szzc. All rights reserved.
//

#ifndef InstrumentsKit_framework_h
#define InstrumentsKit_framework_h

#import "InstrumentsKit.Protocal.h"

//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct DTRenderableContentResponse {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableSet {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct XRGraphPoint {
    unsigned long long _field1;
    float _field2;
    void *_field3;
};

struct XRIntKeyedDictionary {
    Class _field1;
};

struct XRPathAttribute {
    id _field1;
    id _field2;
    double _field3;
    double *_field4;
    double _field5;
    double _field6;
};

struct XRSnapToFitUndoInfo {
    char isValid;
    unsigned long long scale;
    unsigned long long offset;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct _CSTypeRef {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>;

struct __hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>;

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_node<unsigned long long, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<IconLookup_t, NSImage *, std::__1::hash<IconLookup_t>, std::__1::equal_to<IconLookup_t>, std::__1::allocator<std::__1::pair<const IconLookup_t, NSImage *>>> {
    struct __hash_table<std::__1::__hash_value_type<IconLookup_t, NSImage *>, std::__1::__unordered_map_hasher<IconLookup_t, std::__1::__hash_value_type<IconLookup_t, NSImage *>, std::__1::hash<IconLookup_t>, true>, std::__1::__unordered_map_equal<IconLookup_t, std::__1::__hash_value_type<IconLookup_t, NSImage *>, std::__1::equal_to<IconLookup_t>, true>, std::__1::allocator<std::__1::__hash_value_type<IconLookup_t, NSImage *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<IconLookup_t, NSImage *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<IconLookup_t, std::__1::__hash_value_type<IconLookup_t, NSImage *>, std::__1::hash<IconLookup_t>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<IconLookup_t, std::__1::__hash_value_type<IconLookup_t, NSImage *>, std::__1::equal_to<IconLookup_t>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>, std::__1::hash<NSString *__unsafe_unretained>, std::__1::equal_to<NSString *__unsafe_unretained>, std::__1::allocator<std::__1::pair<NSString *const __unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, std::__1::__unordered_map_hasher<NSString *__unsafe_unretained, std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, std::__1::hash<NSString *__unsafe_unretained>, true>, std::__1::__unordered_map_equal<NSString *__unsafe_unretained, std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, std::__1::equal_to<NSString *__unsafe_unretained>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *__unsafe_unretained, std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, std::__1::hash<NSString *__unsafe_unretained>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *__unsafe_unretained, std::__1::__hash_value_type<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>, std::__1::equal_to<NSString *__unsafe_unretained>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, XRBookmark, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, XRBookmark>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, XRBookmark>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRBookmark>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRBookmark>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, XRBookmark>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, XRBookmark>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRBookmark>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRBookmark>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<XRBookmark, std::__1::allocator<XRBookmark>> {
    union XRBookmark *__begin_;
    union XRBookmark *__end_;
    struct __compressed_pair<XRBookmark *, std::__1::allocator<XRBookmark>> {
        union XRBookmark *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    int type;
    int subtype;
} CDStruct_3570f18b;

// Template types
typedef struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_node<unsigned long long, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_96bcc9b8;

typedef struct vector<XRBookmark, std::__1::allocator<XRBookmark>> {
    union XRBookmark *__begin_;
    union XRBookmark *__end_;
    struct __compressed_pair<XRBookmark *, std::__1::allocator<XRBookmark>> {
        union XRBookmark *__first_;
    } __end_cap_;
} vector_59b01178;

#pragma mark Named Unions

union XRBookmark {
    struct {
        unsigned int _private:62;
        unsigned int userInfo:2;
    } content;
    unsigned long long opaque64BitValue;
};

union _flagTableFilter_u {
    unsigned int _field1;
    struct _flagTableFilter {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :21;
    } _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks/InstrumentsKit.framework/Versions/A/InstrumentsKit
// UUID: 6779816C-3312-3C8A-A1C3-66082B194CC6
//
//                           Arch: x86_64
//                Current version: 61529.0.0
//          Compatibility version: 1.0.0
//                 Source version: 61529.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.12.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks
//                       Run path: @loader_path/../../../../../../../SharedFrameworks
//                               = /Applications/Xcode.app/Contents/SharedFrameworks
//

@interface XRNonInteractiveModeViewController : NSViewController
{
    NSProgress *_progress;
    NSTimer *_updatePollTimer;
}

- (void).cxx_destruct;
- (void)_poll:(id)arg1;
- (void)setProgress:(id)arg1;
- (void)viewDidDisappear;
- (void)viewWillAppear;
- (void)dealloc;

@end

@interface XRDetailViewFatalErrorViewController : NSViewController
{
    NSString *_reasonString;
    NSTextField *_reasonField;
}

@property __weak NSTextField *reasonField; // @synthesize reasonField=_reasonField;
@property(copy, nonatomic) NSString *reasonString; // @synthesize reasonString=_reasonString;
- (void).cxx_destruct;
- (void)viewWillAppear;
- (void)viewDidLoad;
- (id)init;

@end

@interface XRCPUTimelineAccessibilityElement : XRAccessibilityElement <NSAccessibilityTable>
{
    XRCPUStrategyUIController *_UIController;
    NSMutableArray *_rows;
}

- (void).cxx_destruct;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityParent;
- (id)accessibilityRows;
- (id)accessibilityLabel;
- (id)accessibilityChildren;
- (void)rebuild;
- (id)initWithCPUStrategyUIController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTrackViewItemViewController : XRTouchBarItemViewController <DTTimelineGraphDelegate, XRSupportsPFTWindowController, XRLazyKVOResponder>
{
    BOOL _movingLeftHandle;
    BOOL _movingRightHandle;
    BOOL _viewportHasBeenDragged;
    DTTimelineGraph *_graph;
    XRLazyKVOAdapter *_observationAdapter;
    NSImageView *_leftHandle;
    NSImageView *_rightHandle;
    NSImageView *_handleMiddle;
    DVTBorderedView *_leftOutsideViewportView;
    DVTBorderedView *_rightOutsideViewportView;
    NSLayoutConstraint *_leftHandleConstraint;
    NSLayoutConstraint *_rightHandleConstraint;
    NSPressGestureRecognizer *_pressGestureRecognizer;
    double _viewportCenterOffset;
}

@property(nonatomic) BOOL viewportHasBeenDragged; // @synthesize viewportHasBeenDragged=_viewportHasBeenDragged;
@property(nonatomic) double viewportCenterOffset; // @synthesize viewportCenterOffset=_viewportCenterOffset;
@property(nonatomic) BOOL movingRightHandle; // @synthesize movingRightHandle=_movingRightHandle;
@property(nonatomic) BOOL movingLeftHandle; // @synthesize movingLeftHandle=_movingLeftHandle;
@property(retain, nonatomic) NSPressGestureRecognizer *pressGestureRecognizer; // @synthesize pressGestureRecognizer=_pressGestureRecognizer;
@property(retain, nonatomic) NSLayoutConstraint *rightHandleConstraint; // @synthesize rightHandleConstraint=_rightHandleConstraint;
@property(retain, nonatomic) NSLayoutConstraint *leftHandleConstraint; // @synthesize leftHandleConstraint=_leftHandleConstraint;
@property(retain, nonatomic) DVTBorderedView *rightOutsideViewportView; // @synthesize rightOutsideViewportView=_rightOutsideViewportView;
@property(retain, nonatomic) DVTBorderedView *leftOutsideViewportView; // @synthesize leftOutsideViewportView=_leftOutsideViewportView;
@property(retain, nonatomic) NSImageView *handleMiddle; // @synthesize handleMiddle=_handleMiddle;
@property(retain, nonatomic) NSImageView *rightHandle; // @synthesize rightHandle=_rightHandle;
@property(retain, nonatomic) NSImageView *leftHandle; // @synthesize leftHandle=_leftHandle;
@property(retain, nonatomic) XRLazyKVOAdapter *observationAdapter; // @synthesize observationAdapter=_observationAdapter;
@property(retain, nonatomic) DTTimelineGraph *graph; // @synthesize graph=_graph;
- (void).cxx_destruct;
- (void)_rescaleGraph;
- (void)_syncTimeline;
- (void)_rebuildTimeline;
- (void)_addHandleToContainerView:(id)arg1;
- (id)_imageViewWithImageNamed:(id)arg1 containerView:(id)arg2;
- (id)_buildView;
- (void)_centerViewportOnPoint:(struct CGPoint)arg1 offset:(double)arg2;
- (void)_matchMainGraphToHandles;
- (void)_moveLeftHandleToPoint:(struct CGPoint)arg1;
- (void)_moveRightHandleToPoint:(struct CGPoint)arg1;
- (double)_viewportCenter;
- (BOOL)_pointHitsLeftHandle:(struct CGPoint)arg1;
- (BOOL)_pointHitsRightHandle:(struct CGPoint)arg1;
- (BOOL)_pointHitsWithinViewport:(struct CGPoint)arg1;
- (void)handlePressGesture:(id)arg1;
- (void)_coreSpaceNotification:(id)arg1;
- (void)handleLazyKVOUpdate:(id)arg1;
- (void)inputHandlerForGraph:(id)arg1 requestsHeight:(double)arg2 forPlane:(id)arg3;
- (void)inputHandlerForGraph:(id)arg1 requestsCollapsingGroupPlane:(id)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestsExpandingGroupPlane:(id)arg2;
- (void)inputHandlerRequestsToClearInspectionInfoForGraph:(id)arg1;
- (void)inputHandlerForGraph:(id)arg1 requestsNanosecondsPerPoint:(unsigned long long)arg2;
- (void)inputHandlerRequestsToClearCurrentInspectionTimeForGraph:(id)arg1;
- (void)inputHandlerForGraph:(id)arg1 requestsCurrentInspectionTime:(unsigned long long)arg2;
- (void)inputHandlerRequestsToClearSelectedTimeRangeForGraph:(id)arg1;
- (void)inputHandlerDidFinishSelectionForGraph:(id)arg1;
- (void)inputHandlerForGraph:(id)arg1 requestsSelectedTimeRange:(struct XRTimeRange)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestYOffset:(double)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestsNanosecondOffset:(long long)arg2;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) PFTWindowController *pftWindowController; // @dynamic pftWindowController;
@property(readonly) Class superclass;

@end

@interface XRTargetChooserPathControl : NSPathControl <XRAccessiblePathCellDelegate>
{
    NSMutableDictionary *_deviceToComponentCellMap;
    XRDevice *_device;
    BOOL _allowNilDevice;
}

+ (Class)cellClass;
+ (unsigned long long)defaultFocusRingType;
@property(readonly, nonatomic) BOOL allowNilDevice; // @synthesize allowNilDevice=_allowNilDevice;
- (void).cxx_destruct;
- (id)pathCell:(id)arg1 accessibilityDescriptionForPathComponentCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)accessibilityPopUpMenuParent:(id)arg1;
- (struct CGSize)sizeWanted;
- (id)menuForEvent:(id)arg1;
- (BOOL)isOpaque;
- (void)setMenu:(id)arg1;
- (void)setFont:(id)arg1;
@property(nonatomic) int gradientStyle;
- (void)setEnabled:(BOOL)arg1;
- (void)reconfigureWithContext:(id)arg1 controlSize:(unsigned long long)arg2 allowNilDevice:(BOOL)arg3;
- (BOOL)_isTargetSelectable:(id)arg1;
- (BOOL)_shouldShowProcesses:(id)arg1;
- (BOOL)_isDeviceSelectable:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRFlagsNavigatorControl : NSSegmentedControl <NSMenuDelegate>
{
    BOOL _isSetup;
    XRManagedObjectList *_flags;
    BOOL _observingFlags;
    NSMenu *_previousMenu;
    NSMenu *_nextMenu;
}

- (void).cxx_destruct;
- (void)_flagChosen:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)_segmentClicked:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setFlags:(id)arg1;
- (void)_updateControl;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 flags:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTimelineItemAccessibilityElement : XRAccessibilityElement <NSAccessibilityRow>
{
    XRInstrument *_instrument;
    NSAccessibilityElement *_parent;
    XRInstrumentsStrategyUIController *_UIController;
    long long _index;
    NSAccessibilityElement *_statusMessage;
    XRInstrumentStrategyTopLevelItem *_topLevelItem;
    NSAccessibilityElement *_displayName;
}

+ (id)elementsFromTopLevelItem:(id)arg1 instrument:(id)arg2 index:(long long)arg3 parent:(id)arg4 controller:(id)arg5;
@property(readonly, nonatomic) __weak XRInstrument *instrument; // @synthesize instrument=_instrument;
@property(retain, nonatomic) NSAccessibilityElement *displayName; // @synthesize displayName=_displayName;
@property(readonly, nonatomic) __weak XRInstrumentStrategyTopLevelItem *topLevelItem; // @synthesize topLevelItem=_topLevelItem;
- (void).cxx_destruct;
- (id)accessibilityChildren;
- (struct CGPoint)accessibilityActivationPoint;
- (void)setAccessibilityDisclosed:(BOOL)arg1;
- (BOOL)isAccessibilityDisclosed;
- (id)accessibilityLabel;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityParent;
- (id)accessibilitySubrole;
- (long long)accessibilityDisclosureLevel;
- (long long)accessibilityIndex;
- (id)initWithTopLevelItem:(id)arg1 instrument:(id)arg2 index:(long long)arg3 parent:(id)arg4 controller:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTimelineInstrumentNoRunsAccessibilityElement : XRTimelineItemAccessibilityElement
{
}

- (id)accessibilityChildren;

@end

@interface XRTimelineRunAccessibilityElement : XRTimelineItemAccessibilityElement
{
    DTTimelinePlane *_plane;
    BOOL _firstItem;
    XRTimelineRunTableAccessibilityElement *_table;
}

- (void).cxx_destruct;
- (id)accessibilityChildren;
- (id)accessibilityLabel;
- (struct CGRect)accessibilityFrame;
- (BOOL)isAccessibilitySelectorAllowed:(SEL)arg1;
- (long long)accessibilityDisclosureLevel;
- (id)initWithTopLevelItem:(id)arg1 instrument:(id)arg2 index:(long long)arg3 parent:(id)arg4 controller:(id)arg5 plane:(id)arg6 firstItem:(BOOL)arg7;

@end

@interface XRTimelineRunTableAccessibilityElement : XRAccessibilityElement <NSAccessibilityTable>
{
    DTTimelineGroupPlane *_groupPlane;
    NSAccessibilityElement *_parent;
    NSMutableArray *_rows;
}

- (void).cxx_destruct;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityParent;
- (id)accessibilityLabel;
- (id)accessibilityRows;
- (id)accessibilityChildren;
- (id)initWithGroupPlane:(id)arg1 parent:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTimelineRunTableRowAccessilblityElement : XRAccessibilityElement <NSAccessibilityRow>
{
    DTTimelinePlane *_plane;
    long long _index;
    NSMutableArray *_children;
    NSAccessibilityElement *_parent;
}

- (void).cxx_destruct;
- (id)accessibilityChildren;
- (id)accessibilityParent;
- (struct CGRect)accessibilityFrame;
- (long long)accessibilityIndex;
- (void)rebuild;
- (id)initWithPlane:(id)arg1 index:(long long)arg2 parent:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTimelineRunLabelAccessibilityElement : XRAccessibilityElement
{
    DTTimelinePlane *_plane;
}

- (void).cxx_destruct;
- (struct CGRect)accessibilityFrame;
- (id)initWithPlane:(id)arg1;

@end

@interface XRProgressView : PFTNibView
{
    XRProgressViewIndicator *_progressIndicator;
    NSTextField *_title;
    NSButton *_cancelButton;
    XRWorkTracker *_workTracker;
    BOOL _closeAsModalWindow;
    BOOL _closeAsynchronously;
}

+ (id)startProgressWithWorkTracker:(id)arg1;
+ (id)panelWithWorkTracker:(id)arg1;
+ (id)windowWithWorkTracker:(id)arg1;
@property(nonatomic) BOOL closeAsynchronously; // @synthesize closeAsynchronously=_closeAsynchronously;
- (void).cxx_destruct;
- (BOOL)closeAsModalWindow;
- (void)setCloseAsModalWindow:(BOOL)arg1;
- (void)setFutureValue:(unsigned long long)arg1;
- (void)cancelWork:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithWorkTracker:(id)arg1;

@end

@interface XRProgressViewIndicator : NSProgressIndicator
{
    double _futureValue;
    double _futureMarkValue;
    NSLock *_futureValueLock;
}

- (void).cxx_destruct;
- (void)setFutureValue:(double)arg1;
- (void)_animationIdler:(id)arg1;

@end

@interface XRPlaceholderView : NSView
{
    NSView *_contentView;
}

@property(nonatomic) __weak NSView *contentView; // @synthesize contentView=_contentView;
- (void).cxx_destruct;

@end

@interface XRRecordingOptionsViewController : NSViewController
{
    XRTrace *_trace;
    DVTBorderedView *_borderView;
    NSTextField *_timeLimitTextField;
    NSTextField *_windowLimitTextField;
    NSButton *_deferredModeCheckbox;
    NSButton *_closeButton;
    XRRecordingOptions *_recordingOptions;
}

@property(retain, nonatomic) XRRecordingOptions *recordingOptions; // @synthesize recordingOptions=_recordingOptions;
@property __weak NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property __weak NSButton *deferredModeCheckbox; // @synthesize deferredModeCheckbox=_deferredModeCheckbox;
@property __weak NSTextField *windowLimitTextField; // @synthesize windowLimitTextField=_windowLimitTextField;
@property __weak NSTextField *timeLimitTextField; // @synthesize timeLimitTextField=_timeLimitTextField;
@property __weak DVTBorderedView *borderView; // @synthesize borderView=_borderView;
@property(nonatomic) __weak XRTrace *trace; // @synthesize trace=_trace;
- (void).cxx_destruct;
- (void)_dismiss;
- (void)ok:(id)arg1;
- (void)windowLimitChanged:(id)arg1;
- (void)timeLimitChanged:(id)arg1;
- (void)deferredClicked:(id)arg1;
- (void)_updateUIControls;
- (void)viewDidLoad;
- (id)init;

@end

@interface XRThreadsTimelineAccessibilityElement : XRAccessibilityElement <NSAccessibilityTable>
{
    XRThreadsStrategyUIController *_UIController;
    NSMutableArray *_rows;
}

- (void).cxx_destruct;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityParent;
- (id)accessibilityRows;
- (id)accessibilityLabel;
- (id)accessibilityChildren;
- (void)rebuild;
- (id)initWithThreadsStrategyUIController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSourceListView : NSOutlineView
{
}

- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (id)selectedSourceListCellAttributesWithDefaults:(id)arg1;
- (id)_groupCellAttributesWithDefaults:(id)arg1 highlighted:(BOOL)arg2;
- (id)_titleFont;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;

@end

@interface XRTouchBarController : NSObject <NSTouchBarDelegate>
{
    NSWindowController *_windowController;
    XRInstrumentListPopoverController *_popoverController;
}

@property(retain, nonatomic) XRInstrumentListPopoverController *popoverController; // @synthesize popoverController=_popoverController;
@property(readonly, nonatomic) __weak NSWindowController *windowController; // @synthesize windowController=_windowController;
- (void).cxx_destruct;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)initWithWindowController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreBackingDetailView : NSView
{
    NSView *_embeddedSubview;
    NSBitmapImageRep *_frozenOutImage;
    struct CGRect _frozenImageRect;
    CIFilter *_outFilter;
    BOOL _frozen;
    BOOL _busy;
}

- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)setBusy:(BOOL)arg1;
- (void)embedSubview:(id)arg1;
- (void)freezeAndRemoveEmbeddedView;

@end

@interface XRDefaultHostingStrategyUIController : XRStrategyUIController <XRLazyKVOResponder>
{
    XRLazyKVOAdapter *_defaultStratAdapter;
    XRInstrumentsStrategyUIController *_defaultStrategyUI;
}

@property(retain, nonatomic) XRInstrumentsStrategyUIController *defaultStrategyUI; // @synthesize defaultStrategyUI=_defaultStrategyUI;
- (void).cxx_destruct;
- (void)inspectionClickAtTime:(unsigned long long)arg1 planes:(id)arg2;
- (void)_setModelSelection:(id)arg1;
- (void)_selectBottomPinnedPlane;
- (void)handleLazyKVOUpdate:(id)arg1;
- (BOOL)_isInstrumentTrackSelected;
- (void)didSetInspectionTime:(unsigned long long)arg1;
- (void)didChangeUpdateFilterForRunNumber:(long long)arg1;
- (id)selectionIcon;
- (void)_resolutionDidChange;
- (void)expireLoanedDetailArea;
- (void)lendDetailAreaToView:(id)arg1 context:(id)arg2;
- (void)setExtendedDetailModel:(id)arg1;
- (void)setDetailHostView:(id)arg1;
- (void)_handleConsolidatedModelRefresh;
- (void)_rebuildInstrumentSelectionMenu;
- (void)_resetBottomPlane;
- (void)setModel:(id)arg1;
- (id)selectionDetailsFilteredDataSource;
- (id)selectionDetailContext;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreConnectionIntervalDecoratorHandler : NSObject <XRAnalysisCoreQueryHandler>
{
    struct _opaque_pthread_mutex_t _lock;
    struct DTTimelineDecorationContainer *_container;
    XRAnalysisCoreConnectionIntervalModel *_model;
    unsigned char _timeColumnID;
    unsigned char _durationColumnID;
    unsigned char _uuidColumnID;
    unsigned char _filterColumnID;
    XRAnalysisCoreUIPlanEngineeringTypeOverride *_engineeringTypeOverride;
    set_96bcc9b8 *_highlightUUIDs;
}

- (void).cxx_destruct;
- (void)reduceFromLocalResults:(id)arg1;
- (void)runWorkgroup:(unsigned short)arg1 of:(unsigned int)arg2 withLocalResults:(id)arg3 context:(id)arg4 rowIterator:(struct XRAnalysisCoreReadCursor *)arg5;
- (void)dealloc;
- (id)initWithContainer:(struct DTTimelineDecorationContainer *)arg1 columnMap:(id)arg2 model:(id)arg3 engineeringTypeOverride:(id)arg4 highlightUUIDs:(set_96bcc9b8 *)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreConnectionIntervalDecorator : DTTimelineDecorator
{
    unsigned int _tableID;
    unsigned char _uuidColumnID;
    unsigned char _sourceUUIDColumnID;
    unsigned char _sinkUUIDColumnID;
    unsigned char _metadataColumnID;
    unsigned char _filterColumnID;
    unsigned char _colorColumnID;
    XRTheme *_theme;
    set_96bcc9b8 _highlightUUIDs;
    struct _opaque_pthread_rwlock_t _imageRdWrLock;
    struct unordered_map<NSString *__unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>, std::__1::hash<NSString *__unsafe_unretained>, std::__1::equal_to<NSString *__unsafe_unretained>, std::__1::allocator<std::__1::pair<NSString *const __unsafe_unretained, std::__1::vector<NSImage *, std::__1::allocator<NSImage *>>>>> _imageCache;
    XRTrace *_trace;
    long long _runNumber;
    XRAnalysisCoreConnectionIntervalModel *_model;
    unsigned long long _filterValue;
}

@property(nonatomic) unsigned long long filterValue; // @synthesize filterValue=_filterValue;
@property(retain, nonatomic) XRAnalysisCoreConnectionIntervalModel *model; // @synthesize model=_model;
@property(nonatomic) long long runNumber; // @synthesize runNumber=_runNumber;
@property(nonatomic) unsigned int tableID; // @synthesize tableID=_tableID;
@property(nonatomic) __weak XRTrace *trace; // @synthesize trace=_trace;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)decorateInspectionRanges:(id)arg1;
- (void)decorateContainer:(struct DTTimelineDecorationContainer *)arg1 qualityOfService:(unsigned int)arg2 priority:(int)arg3 group:(id)arg4;
- (void)clearAllHighlights;
- (void)applyHighlightsForUUIDs:(const unsigned long long *)arg1 count:(unsigned int)arg2;
- (void)setDefaultsForPlane:(id)arg1;
- (void)_getImage:(id *)arg1 forType:(unsigned char)arg2 andImage:(id *)arg3 forType:(unsigned char)arg4 withColorNamed:(id)arg5;
- (void)dealloc;
- (id)initWithTableID:(unsigned int)arg1;

@end

@interface XRSourceListCell : NSTextFieldCell
{
    NSImage *_image;
    double _imageAreaWidth;
    BOOL _drawImage;
    double _xHeight;
    int _background;
}

- (void).cxx_destruct;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (int)background;
- (void)setBackground:(int)arg1;
- (void)setFont:(id)arg1;
- (void)setImageAreaWidth:(double)arg1;
- (double)imageAreaWidth;
- (void)setImage:(id)arg1;
- (BOOL)drawsImage;
- (void)setDrawsImage:(BOOL)arg1;
- (id)image;
- (BOOL)isEditable;
- (BOOL)isSelectable;
- (BOOL)isEnabled;
- (BOOL)isHighlighted;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initImageCell:(id)arg1;
- (id)init;
- (id)initTextCell:(id)arg1;
- (void)_sharedOutlineViewCellInit;

@end

@interface XRFileSystemBrowserPreviewViewController : NSViewController
{
    id <XRFileSystem> _fileSystem;
}

@property(retain) id <XRFileSystem> fileSystem; // @synthesize fileSystem=_fileSystem;
- (void).cxx_destruct;
@property(readonly) NSImage *representedItemIcon;
@property(readonly) NSString *representedItemFilename;

@end

@interface XRActivityTextLayer : DVTTextLayer
{
    NSDictionary *_textAttributes;
}

@property(copy, nonatomic) NSDictionary *textAttributes; // @synthesize textAttributes=_textAttributes;
- (void).cxx_destruct;
- (void)setString:(id)arg1;
@property(readonly) NSDictionary *currentTextAttributes;
- (id)effectiveAttributes;

@end

@interface XRShowHideDetailToolbarItem : XRToolbarItem
{
}

- (void)_segmentedControlClicked:(id)arg1;
- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (id)_createSegmentedControl;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface XRLibraryPopoverViewController : DVTViewController <NSPopoverDelegate>
{
    NSPopover *_popover;
    DVTReplacementView *_replacementView;
    NSView *_relativeView;
}

@property(nonatomic) __weak NSView *relativeView; // @synthesize relativeView=_relativeView;
@property __weak DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
@property(retain) NSPopover *popover; // @synthesize popover=_popover;
- (void).cxx_destruct;
- (void)popoverDidShow:(id)arg1;
- (void)togglePopover:(id)arg1;
- (void)hidePopover;
- (void)displayPopoverRelativeToView:(id)arg1;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRFlagDecorator : DTTimelineDecorator
{
    XRFlagController *_controller;
}

- (void).cxx_destruct;
- (BOOL)mustDecorateOnMainThread;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)initWithController:(id)arg1;

@end

@interface XRAnalysisCoreDetailViewController : NSViewController <XRLazyKVOResponder, XRAnalysisCoreCallTreeViewControllerDelegate, XRAnalysisCoreTableViewControllerDelegate, XRAnalysisCoreViewSubcontroller>
{
    XRAnalysisCoreDetailNode *_displayedNode;
    XRAnalysisCoreDetailNode *_firstNode;
    NSMutableDictionary *_displayedStateByNodeName;
    NSArray *_currentContextChangeOps;
    NSTimer *_animationDelayTimer;
    XREngineeringTypeFormatter *_myEngFormatter;
    BOOL _viewsInTransition;
    BOOL _instrumentInvalid;
    XRLazyKVOAdapter *_kvoAdapter;
    XRModalViewController *_modalController;
    XRDetailViewFatalErrorViewController *_fatalErrorViewController;
    XRAnalysisCoreTableViewController *_tabularViewController;
    XRAnalysisCoreProjectionViewController *_projectionViewController;
    XRAnalysisCoreCallTreeViewController *_callTreeViewController;
    id <XRAnalysisCoreDetailViewControllerDelegate> _delegate;
    XRAnalysisCoreUIPlan *_plan;
    PFTTraceDocument *_traceDocument;
    long long _runNumber;
    XRInstrument *_instrument;
    XRStrategyContextObject *_strategyContext;
    NSScrollView *_tableScrollView;
}

@property(retain) NSScrollView *tableScrollView; // @synthesize tableScrollView=_tableScrollView;
@property(retain, nonatomic) XRStrategyContextObject *strategyContext; // @synthesize strategyContext=_strategyContext;
@property(nonatomic) __weak XRInstrument *instrument; // @synthesize instrument=_instrument;
@property(nonatomic) long long runNumber; // @synthesize runNumber=_runNumber;
@property(nonatomic) __weak PFTTraceDocument *traceDocument; // @synthesize traceDocument=_traceDocument;
@property(retain, nonatomic) XRAnalysisCoreUIPlan *plan; // @synthesize plan=_plan;
@property(nonatomic) __weak id <XRAnalysisCoreDetailViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (id)selectedSearchContext;
- (id)searchContexts;
- (void)refineQueryBasedOnUIState:(id)arg1;
- (void)callTreeViewControllerDidUpdateContext:(id)arg1;
- (void)callTreeViewControllerWillUpdateContext:(id)arg1;
- (id)currentCallTreeFilter;
- (void)restoreDisplayStateFromTemplate:(id)arg1;
- (id)savedDisplayStateForTemplates;
- (void)focus:(id)arg1;
- (unsigned int)_tableIDForSpec:(id)arg1 runNumber:(long long)arg2;
- (void)clearCurrentDataContext;
- (id)currentDataContext;
- (id)_currentOutlineExtendedDetailMetaUI;
- (void)handleLazyKVOUpdate:(id)arg1;
- (id)currentRecordSettingsDetailMetaUI;
- (id)currentDisplaySettingsDetailMetaUI;
- (id)currentExtendedDetailMetaUI;
- (void)instrumentDidChangeTableRequirements;
- (void)instrumentDidChangeSwitches;
- (void)tableViewController:(id)arg1 selectedAndEventAtTime:(unsigned long long)arg2;
- (void)documentSetInspectionTime:(unsigned long long)arg1;
- (void)documentDidUpdateFilter;
- (void)displayContext:(id)arg1;
- (unsigned long long)_validateNodeForCurrentImplementation:(id)arg1;
- (void)_afterRebuildingUIPerformBlock:(CDUnknownBlockType)arg1;
- (id)siblingsForContext:(id)arg1;
- (id)contextRepresentation;
- (id)viewForContext:(id)arg1;
- (id)uuid;
- (void)_detailFadeOut:(id)arg1;
- (void)_setCurrentViewChangeOps:(id)arg1;
- (void)eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
- (void)viewDidAppear;
- (void)loadView;
- (void)dealloc;
- (void)instrumentWillBecomeInvalid;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreDetailNode : NSObject <NSSecureCoding>
{
    XRAnalysisCoreDetailNode *_firstSibling;
    int _viewKind;
    NSString *_label;
    XRAnalysisCoreDetailNode *_parent;
    XRAnalysisCoreDetailNode *_nextSibling;
    XRAnalysisCoreTableQuery *_focusQuery;
    NSString *_planTemplateName;
}

+ (BOOL)supportsSecureCoding;
@property(nonatomic) int viewKind; // @synthesize viewKind=_viewKind;
@property(retain, nonatomic) NSString *planTemplateName; // @synthesize planTemplateName=_planTemplateName;
@property(retain, nonatomic) XRAnalysisCoreTableQuery *focusQuery; // @synthesize focusQuery=_focusQuery;
@property(readonly, nonatomic) XRAnalysisCoreDetailNode *nextSibling; // @synthesize nextSibling=_nextSibling;
@property(readonly, nonatomic) XRAnalysisCoreDetailNode *parent; // @synthesize parent=_parent;
@property(readonly, nonatomic) NSString *label; // @synthesize label=_label;
- (void).cxx_destruct;
- (void)assignNewRoot:(id)arg1;
- (id)root;
@property(readonly, nonatomic, getter=isSelectable) BOOL selectable;
@property(readonly, nonatomic) XRAnalysisCoreDetailNode *firstSibling;
- (id)insertSiblingWithLabel:(id)arg1 parent:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithLabel:(id)arg1 firstSibling:(id)arg2 nextSibling:(id)arg3;
- (id)initWithLabel:(id)arg1 parent:(id)arg2;
- (id)initWithLabel:(id)arg1 viewKind:(int)arg2;
- (id)initWithLabel:(id)arg1;
- (id)initWithLabel:(id)arg1 parent:(id)arg2 firstSibling:(id)arg3 nextSibling:(id)arg4 focusQuery:(id)arg5 planTemplateName:(id)arg6 viewKind:(int)arg7;

@end

@interface XRInstrumentMenuController : NSObject <NSMenuDelegate>
{
    BOOL _isInvalid;
    NSMenu *_menu;
    PFTDocumentController *_controller;
}

@property(nonatomic) __weak PFTDocumentController *controller; // @synthesize controller=_controller;
@property(nonatomic) __weak NSMenu *menu; // @synthesize menu=_menu;
- (void).cxx_destruct;
- (BOOL)validateMenuItem:(id)arg1;
- (void)setControllerNeedsUpdate;
- (void)_invokeRefreshMenuItems;
- (void)_metaUIInvokeAction:(id)arg1;
- (void)_handleInstrumentStateChange:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTextEntryPanel : PFTNibView
{
    NSTextField *_titleField;
    NSTextField *_entryField;
}

- (void).cxx_destruct;
- (void)keyDown:(id)arg1;
- (void)setTextValue:(id)arg1;
- (id)textValue;
- (void)cancel:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)okAction:(id)arg1;

@end

@interface XRSnapToFitItemViewController : XRTouchBarItemViewController <XRLazyKVOResponder, XRSupportsPFTWindowController>
{
    XRLazyKVOAdapter *_observationAdapter;
    struct XRSnapToFitUndoInfo _undoInfo;
}

@property(nonatomic) struct XRSnapToFitUndoInfo undoInfo; // @synthesize undoInfo=_undoInfo;
@property(readonly, nonatomic) XRLazyKVOAdapter *observationAdapter; // @synthesize observationAdapter=_observationAdapter;
- (void).cxx_destruct;
- (void)_resetUndoInfo;
- (void)_snapToFit:(id)arg1;
- (id)_snapToFitButton;
- (id)_buildSnapToFitButton;
- (void)_updateButtonAndUndoState;
- (void)handleLazyKVOUpdate:(id)arg1;
- (void)dealloc;
- (void)loadView;
- (id)initWithWindowController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) PFTWindowController *pftWindowController; // @dynamic pftWindowController;
@property(readonly) Class superclass;

@end

@interface XRAnnotationContext : DVTAnnotationContext
{
    NSObject<XRAnnotationSource> *_annotationSource;
}

@property(retain, nonatomic) NSObject<XRAnnotationSource> *annotationSource; // @synthesize annotationSource=_annotationSource;
- (void).cxx_destruct;
- (id)initWithAnnotationSource:(id)arg1;

@end

@interface XRAnnotationProvider : DVTAnnotationProvider
{
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
- (void)clearAnnotations;
- (void)addAnnotationAtLine:(unsigned long long)arg1 withText:(id)arg2;
- (id)initWithContext:(id)arg1;

@end

@interface XRAnnotation : NSObject
{
    XRSourceTabView *_accessoryView;
    struct CGSize _minAccessoryViewSize;
    NSColor *_color;
    NSMutableArray *_commentArray;
    int _type;
    BOOL _showInspector;
    NSString *_snippet;
    DVTTextStorage *_textStorage;
    struct _NSRange _paragraphRange;
}

@property(nonatomic) struct _NSRange paragraphRange; // @synthesize paragraphRange=_paragraphRange;
@property(retain, nonatomic) DVTTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(retain, nonatomic) XRSourceTabView *accessoryView; // @synthesize accessoryView=_accessoryView;
- (void).cxx_destruct;
- (id)description;
- (id)snippet;
- (void)setSnippet:(id)arg1;
- (long long)compareImportance:(id)arg1;
- (double)importance;
- (BOOL)showsInspector;
- (void)setShowsInspector:(BOOL)arg1;
@property(readonly, nonatomic) NSArray *dataItems; // @dynamic dataItems;
- (void)merge:(id)arg1;
- (BOOL)canMerge:(id)arg1;
- (id)xxxbottomBorderColor;
- (id)xxxbackgroundColor;
- (id)paragraphBorderHighlightColor;
- (id)paragraphHighlightColor;
- (void)drawParagraphHighlightWithFrame:(struct CGRect)arg1;
- (struct CGSize)calculateAnnotationViewSizeForBounds:(struct CGRect)arg1;
- (id)createAnnotationViewForTextView:(id)arg1 withFrame:(struct CGRect)arg2;
- (id)commentArray;
@property(readonly, nonatomic) NSString *comment;
- (void)refreshValueAsValue:(int)arg1;
- (id)initWithComments:(id)arg1;
- (id)initWithComment:(id)arg1;

@end

@interface XRActionContext : NSObject <NSMutableCopying, NSCopying>
{
    PFTTraceDocument *_document;
    long long _runNumber;
    NSString *_instrumentUUID;
    struct XRTimeRange _timeRange;
}

@property(nonatomic) struct XRTimeRange timeRange; // @synthesize timeRange=_timeRange;
@property(copy, nonatomic) NSString *instrumentUUID; // @synthesize instrumentUUID=_instrumentUUID;
@property(nonatomic) long long runNumber; // @synthesize runNumber=_runNumber;
@property(nonatomic) __weak PFTTraceDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface XRTouchBarItemViewController : NSViewController
{
    NSWindowController *_windowController;
}

@property(readonly, nonatomic) __weak NSWindowController *windowController; // @synthesize windowController=_windowController;
- (void).cxx_destruct;
- (id)initWithWindowController:(id)arg1;
@property(readonly, nonatomic) PFTWindowController *pftWindowController;
@property(readonly, nonatomic) XRTemplateChooserWindowController *templateChooserWindowController;

@end

@interface XRContextPathControl : PFTPathControl <XRAccessiblePathCellDelegate>
{
    XRContext *_currentContext;
    NSMutableSet *_observedContainers;
}

- (void).cxx_destruct;
- (id)pathCell:(id)arg1 accessibilityDescriptionForPathComponentCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)cells:(id)arg1 appendCellsForTarget:(id)arg2 fromRoot:(id)arg3;
- (void)update;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_contextMenuClicked:(id)arg1;
- (void)_contextClicked:(id)arg1;
- (void)_contextSelectedByUser:(id)arg1 cell:(id)arg2 title:(id)arg3;
- (void)_discloseDetailForContext:(id)arg1;
- (void)_displayContext:(id)arg1;
- (void)setContext:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRFlagViewer : NSWindowController <NSWindowDelegate, NSOutlineViewDelegate>
{
    XRFlagController *_flagController;
    NSArray *_searchMenuItemsArray;
    NSArray *_flagColumnArray;
    NSArray *_flagColumnMenuItemsArray;
    BOOL _flagTableDeferReload;
    BOOL _ignoreColumnMoves;
    NSMutableArray *_flagColumnsToSearch;
    NSMutableArray *_searchedFlags;
    NSOutlineView *_flagOutline;
    NSMenu *_tableColumnMenu;
    NSMenu *_displayStateMenu;
    DVTSearchField *_flagTableSearchField;
    NSMenu *_searchColumnMenu;
}

+ (id)sharedInstance;
+ (union _flagTableFilter_u)defaultFlagFilter;
+ (union _flagTableFilter_u)flagFilterForDocument:(id)arg1 runNumber:(long long)arg2;
+ (void)setFlagFilter:(union _flagTableFilter_u)arg1 forDocument:(id)arg2 runNumber:(long long)arg3;
@property(retain, nonatomic) NSMenu *searchColumnMenu; // @synthesize searchColumnMenu=_searchColumnMenu;
@property(nonatomic) __weak DVTSearchField *flagTableSearchField; // @synthesize flagTableSearchField=_flagTableSearchField;
@property(retain, nonatomic) NSMenu *displayStateMenu; // @synthesize displayStateMenu=_displayStateMenu;
@property(retain, nonatomic) NSMenu *tableColumnMenu; // @synthesize tableColumnMenu=_tableColumnMenu;
@property(nonatomic) __weak NSOutlineView *flagOutline; // @synthesize flagOutline=_flagOutline;
- (void).cxx_destruct;
- (void)flagModifiedResponse:(id)arg1;
- (void)setSearchCategoryFrom:(id)arg1;
- (void)searchFlagTableAction:(id)arg1;
- (void)inspectFlagAction:(id)arg1;
- (void)columnVisibleAction:(id)arg1;
- (void)displayFilterAction:(id)arg1;
- (void)flagMenuAction:(id)arg1;
- (void)flagRangeAction:(id)arg1;
- (void)reloadFlagTable;
- (void)dealloc;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)updateRunNumber:(id)arg1;
@property(readonly, nonatomic) PFTTraceDocument *traceDocument;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)setDocument:(id)arg1;
- (void)close;
- (BOOL)shouldCloseDocument;
- (void)refreshDisplayStateFilterMenuWith:(union _flagTableFilter_u)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)_processNewSignalFlags:(id)arg1;
- (void)windowDidLoad;
- (void)updateSearchCategoryMenu;
- (void)updateColumnHidingMenu;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRFloatValueAnimation : NSAnimation
{
    double _fromPosition;
    double _toPosition;
    double _position;
}

@property double position; // @synthesize position=_position;
@property double toPosition; // @synthesize toPosition=_toPosition;
@property double fromPosition; // @synthesize fromPosition=_fromPosition;
- (void)setCurrentProgress:(float)arg1;

@end

@interface PFTPathComponentCell : NSPathComponentCell
{
    double _fixedWidth;
}

@property double fixedWidth; // @synthesize fixedWidth=_fixedWidth;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)_iconSize;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawNavigationBarBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)attributedStringValue;

@end

@interface PFTPathCell : NSPathCell <XRPathCellAccessible>
{
}

+ (Class)pathComponentCellClass;
- (id)trackingMenu;
- (void)handleClickInComponentCell:(id)arg1 atPoint:(struct CGPoint)arg2 inRect:(struct CGRect)arg3 ofView:(id)arg4 event:(id)arg5;
- (BOOL)_showMenuForComponentCell:(id)arg1 inRect:(struct CGRect)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTPathControl : NSPathControl
{
    BOOL _drawLeftFlatCap;
}

+ (Class)cellClass;
@property BOOL drawLeftFlatCap; // @synthesize drawLeftFlatCap=_drawLeftFlatCap;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)awakeFromNib;
- (BOOL)isFlipped;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRCompressedStackFrameCell : NSCell
{
    NSColor *_color;
}

+ (double)suggestedCellHeight;
+ (id)sharedInstance;
@property(copy) NSColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithColor:(id)arg1;

@end

@interface XRVerticallyCenteredTextFieldCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;

@end

@interface XRSourceCommentAnnotationContext : DVTAnnotationContext
{
    XRTextView *_textView;
}

@property(retain, nonatomic) XRTextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (id)initWithTextView:(id)arg1;

@end

@interface XRPreferences : NSPreferences
{
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)initialize;
- (BOOL)windowShouldClose:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (BOOL)usesButtons;
- (void)dealloc;
- (id)init;

@end

@interface _XRSegmentedCell : NSSegmentedCell
{
    NSImageCell *_arrowImageCell;
    BOOL _useMenuDelay;
    BOOL _useMenuDelayForSelectedSegment;
    BOOL _useRadioDrawingStyle;
    NSPointerArray *_segmentImages;
    BOOL _useAnyDrawingStyle;
}

@property BOOL useAnyDrawingStyle; // @synthesize useAnyDrawingStyle=_useAnyDrawingStyle;
@property BOOL useRadioDrawingStyle; // @synthesize useRadioDrawingStyle=_useRadioDrawingStyle;
@property BOOL useMenuDelayForSelectedSegment; // @synthesize useMenuDelayForSelectedSegment=_useMenuDelayForSelectedSegment;
@property BOOL useMenuDelay; // @synthesize useMenuDelay=_useMenuDelay;
- (void).cxx_destruct;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawSegment:(long long)arg1 inFrame:(struct CGRect)arg2 withView:(id)arg3;
- (void)_drawMenuIndicatorForFrame:(struct CGRect)arg1 activeStyle:(BOOL)arg2 withView:(id)arg3;
- (unsigned long long)_applicableTrackingModeForSegment:(long long)arg1;
- (void)setControlSize:(unsigned long long)arg1;
- (void)setImage:(id)arg1 forSegment:(long long)arg2;
- (id)_adjustImage:(id)arg1 forControlSize:(unsigned long long)arg2;
- (void)setSegmentCount:(long long)arg1;
- (id)_segmentImages;
- (double)_menuDelayTimeForSegment:(long long)arg1;
- (id)init;

@end

@interface XRToolbarSegmentedControl : DVTSegmentedControl
{
    NSMutableArray *_disabledImages;
    NSMutableArray *_alternateDisabledImages;
}

+ (id)_cachedInactiveAlternateImageFromImage:(id)arg1;
+ (id)_cachedInactiveImageFromImage:(id)arg1;
+ (id)_deriveInactiveImageFromImage:(id)arg1;
+ (double)borderedSegmentedControlSegmentWidth;
+ (id)toolbarSegmentedControlWithTrackingMode:(unsigned long long)arg1 images:(id)arg2 alternateImages:(id)arg3;
- (void).cxx_destruct;
- (id)alternateImageForSegment:(long long)arg1;
- (id)imageForSegment:(long long)arg1;
- (id)_alternateDisabledImages;
- (id)_disabledImages;

@end

@interface XRSeparatorToolbarItem : XRToolbarItem
{
}

- (void)connectToContext:(id)arg1;

@end

@interface XRColoredBackgroundTextCell : NSTextFieldCell
{
    NSString *_defaultsIdentifier;
    CDUnknownBlockType _providerBlock;
}

+ (id)cellWithDefaultsIdentifier:(id)arg1 preferenceTitle:(id)arg2;
- (void).cxx_destruct;
- (void)_toggleColorBackground:(id)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setBackgroundColorProviderBlock:(CDUnknownBlockType)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDefaultsIdentifier:(id)arg1 preferenceTitle:(id)arg2;

@end

@interface XRLibraryColoredBackgroundTextCell : XRColoredBackgroundTextCell
{
}

- (id)initWithDefaultsIdentifier:(id)arg1 preferenceTitle:(id)arg2;

@end

@interface XRRecordStopToolbarItem : XRToolbarItem
{
}

- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (id)_create1010AndLaterControl;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface XRInspectorView : NSView
{
    BOOL _observingWindowChanges;
    NSLayoutConstraint *_maxHeightConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *maxHeightConstraint; // @synthesize maxHeightConstraint=_maxHeightConstraint;
- (void).cxx_destruct;
- (void)_setMaxHeightForWindow:(id)arg1;
- (void)windowDidChangeScreenHandler:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)dealloc;

@end

@interface XRInstrumentListPopoverController : NSObject <XRLazyKVOResponder, XRInstrumentListItemViewControllerDelegate>
{
    NSPopoverTouchBarItem *_popoverItem;
    NSString *_identifier;
    PFTWindowController *_windowController;
    id <NSTouchBarDelegate> _touchBarDelegate;
    NSButton *_popoverButton;
    XRLazyKVOAdapter *_observationAdapter;
}

@property(readonly, nonatomic) XRLazyKVOAdapter *observationAdapter; // @synthesize observationAdapter=_observationAdapter;
@property(readonly, nonatomic) NSButton *popoverButton; // @synthesize popoverButton=_popoverButton;
@property(readonly, nonatomic) __weak id <NSTouchBarDelegate> touchBarDelegate; // @synthesize touchBarDelegate=_touchBarDelegate;
@property(readonly, nonatomic) __weak PFTWindowController *windowController; // @synthesize windowController=_windowController;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)_updatePopoverButton;
- (void)viewControllerDidChangeInstrumentSelection:(id)arg1;
- (void)handleLazyKVOUpdate:(id)arg1;
@property(readonly, nonatomic) NSPopoverTouchBarItem *popoverItem; // @synthesize popoverItem=_popoverItem;
- (id)initWithWindowController:(id)arg1 identifier:(id)arg2 touchBarDelegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSummaryDetailView : NSCollectionView
{
    PFTInstrumentList *_instrumentList;
    NSMutableArray *_summaries;
    NSArrayController *_summariesArrayController;
    NSView *_highlightedView;
}

@property(retain) NSMutableArray *summaries; // @synthesize summaries=_summaries;
- (void).cxx_destruct;
- (id)highlightedView;
- (void)setHighlightedView:(id)arg1;
- (id)description;
- (id)newItemForRepresentedObject:(id)arg1;
- (void)reloadData;
- (id)initWithDataSource:(id)arg1 keyPath:(id)arg2;

@end

@interface XRTemplateChooserWindow : NSWindow
{
}

- (void)performClose:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;

@end

@interface XRTemplateChooserLozengeView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface XRTemplateChooserCollectionView : NSCollectionView <NSAccessibilityGroup>
{
}

- (void)setAccessibilitySelectedChildren:(id)arg1;
- (id)accessibilitySelectedChildren;
- (id)accessibilityChildren;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertNewline:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTemplateChooserWindowController : NSWindowController <XRDeviceObserver, NSPathControlDelegate, NSTableViewDataSource, NSTableViewDelegate, NSTextFieldDelegate, NSWindowDelegate, NSCollectionViewDelegate>
{
    XRTemplateChooserTargetedObject *_itemContext;
    NSString *_filterString;
    NSMutableArray *_categories;
    NSMutableArray *_currentCategory;
    NSMutableArray *_currentTextFilteredCategory;
    id _eventMonitor;
    BOOL _canChangeDeviceAndProcess;
    BOOL _validTemplateSelection;
    NSString *_selectedTemplatePath;
    NSDictionary *_plistData;
    XRRecentArrayStoredPrefs *_recentTemplatesArray;
    long long _selectedCategory;
    NSView *_mainView;
    NSView *_targetSearchContainer;
    XRTargetChooserPathControl *_targetChooserPathControl;
    NSButton *_chooseButton;
    NSButton *_profileButton;
    NSButton *_cancelButton;
    NSButton *_openExistingButton;
    DVTScopeBarButton *_standardButton;
    DVTScopeBarButton *_recentButton;
    DVTScopeBarButton *_customButton;
    DVTSearchField *_searchField;
    NSCollectionView *_templateCollectionView;
    NSImageView *_selectedTemplateImage;
    NSTextField *_selectedTemplateName;
    NSTextField *_selectedTemplateDescription;
    DVTBorderedView *_mainBorderedView;
    DVTBorderedView *_scopeFilterBorderedView;
    DVTBorderedView *_selectedTemplateBorderedView;
    NSScrollView *_templateCollectionScrollView;
    XRTemplateCollectionViewItem *_templateCollectionViewItem;
    XRTemplateItemView *_templateItemView;
}

@property XRTemplateItemView *templateItemView; // @synthesize templateItemView=_templateItemView;
@property XRTemplateCollectionViewItem *templateCollectionViewItem; // @synthesize templateCollectionViewItem=_templateCollectionViewItem;
@property NSScrollView *templateCollectionScrollView; // @synthesize templateCollectionScrollView=_templateCollectionScrollView;
@property DVTBorderedView *selectedTemplateBorderedView; // @synthesize selectedTemplateBorderedView=_selectedTemplateBorderedView;
@property DVTBorderedView *scopeFilterBorderedView; // @synthesize scopeFilterBorderedView=_scopeFilterBorderedView;
@property DVTBorderedView *mainBorderedView; // @synthesize mainBorderedView=_mainBorderedView;
@property NSTextField *selectedTemplateDescription; // @synthesize selectedTemplateDescription=_selectedTemplateDescription;
@property NSTextField *selectedTemplateName; // @synthesize selectedTemplateName=_selectedTemplateName;
@property NSImageView *selectedTemplateImage; // @synthesize selectedTemplateImage=_selectedTemplateImage;
@property NSCollectionView *templateCollectionView; // @synthesize templateCollectionView=_templateCollectionView;
@property DVTSearchField *searchField; // @synthesize searchField=_searchField;
@property DVTScopeBarButton *customButton; // @synthesize customButton=_customButton;
@property DVTScopeBarButton *recentButton; // @synthesize recentButton=_recentButton;
@property DVTScopeBarButton *standardButton; // @synthesize standardButton=_standardButton;
@property NSButton *openExistingButton; // @synthesize openExistingButton=_openExistingButton;
@property NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain) NSButton *profileButton; // @synthesize profileButton=_profileButton;
@property(retain) NSButton *chooseButton; // @synthesize chooseButton=_chooseButton;
@property XRTargetChooserPathControl *targetChooserPathControl; // @synthesize targetChooserPathControl=_targetChooserPathControl;
@property NSView *targetSearchContainer; // @synthesize targetSearchContainer=_targetSearchContainer;
@property NSView *mainView; // @synthesize mainView=_mainView;
@property long long selectedCategory; // @synthesize selectedCategory=_selectedCategory;
- (void).cxx_destruct;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)templateDoubleClicked:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)controlTextDidChange:(id)arg1;
- (void)customButtonClicked:(id)arg1;
- (void)standardButtonClicked:(id)arg1;
- (void)recentButtonClicked:(id)arg1;
- (void)_updateFilterButtons;
- (void)_filterTemplates;
- (void)chooseOrProfileClicked:(id)arg1;
- (void)cancelClicked:(id)arg1;
- (void)deleteTemplate:(id)arg1;
- (void)openExistingClicked:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_updateChooseProfileButtons;
- (void)_updateSelectedTemplate;
- (void)_templateWasDeletedFromPathNotification:(id)arg1;
- (void)_templateWasAddedToDiskPathNotification:(id)arg1;
- (void)_refreshTemplates;
- (void)_loadTemplates;
- (void)_reconfigurePathControl;
- (void)_setupPathControl;
- (void)windowDidLoad;
- (void)handleDeviceNotification:(id)arg1;
- (long long)_defaultIntegerForKey:(id)arg1 missingValue:(long long)arg2;
- (void)_configureWindow;
- (void)windowWillClose:(id)arg1;
- (void)close;
- (id)windowNibName;
- (id)initWithWindowNibName:(id)arg1 plistData:(id)arg2 device:(id)arg3 process:(id)arg4;
- (id)initWithWindow:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRToolbar : NSToolbar
{
}

- (BOOL)_allowsSizeMode:(unsigned long long)arg1;
- (BOOL)_allowsDisplayMode:(unsigned long long)arg1;
- (BOOL)isFullScreen;
- (id)_customMetrics;
- (void)validateVisibleItems;

@end

@interface XRZoomToolbarItem : XRToolbarItem
{
    id _trackView;
}

@property(retain) id trackView; // @synthesize trackView=_trackView;
- (void).cxx_destruct;
- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface XRSummaryDetailItemView : NSView
{
    DTGraph *_graph;
    NSTrackingArea *_trackingArea;
    BOOL _mouseInside;
    BOOL _mouseDown;
}

- (void).cxx_destruct;
- (void)performAction;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (BOOL)isHighlighted;
- (void)setFrameSize:(struct CGSize)arg1;
- (id)graph;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 graphClass:(Class)arg2;
- (void)_setupBarChart:(Class)arg1;

@end

@interface XRAnalysisCoreTrackConfigurator : NSObject
{
    NSMutableDictionary *_existanceProjectorsByRunNumber;
    XRTrace *_trace;
    XRInstrument *_instrument;
    XRIntKeyedDictionary *_plansByRunNumber;
}

@property(retain, nonatomic) XRIntKeyedDictionary *plansByRunNumber; // @synthesize plansByRunNumber=_plansByRunNumber;
@property(retain, nonatomic) XRInstrument *instrument; // @synthesize instrument=_instrument;
@property(retain, nonatomic) XRTrace *trace; // @synthesize trace=_trace;
- (void).cxx_destruct;
- (id)_refreshExistenceProjectorsForRunNumber:(long long)arg1;
- (unsigned int)_tableIDForSpec:(id)arg1 runNumber:(long long)arg2;
- (void)_configureGroupByTrack:(id)arg1 plan:(id)arg2 graphSpec:(id)arg3 treatment:(id)arg4 core:(id)arg5 graphIndex:(float *)arg6;
- (BOOL)shouldUpdateBrushLayoutForRun:(long long)arg1;
- (void)configureTrack:(id)arg1;
- (id)init;

@end

@interface XRExistanceProjectorForTableColumn : NSObject
{
    unsigned char _columnID;
    unsigned char _subColumnID;
    unsigned int _tableID;
    XRAnalysisCoreProjector *_projector;
    unsigned long long _lastCount;
    NSMutableDictionary *_subProjections;
}

@property(readonly, retain, nonatomic) NSMutableDictionary *subProjections; // @synthesize subProjections=_subProjections;
@property(readonly, nonatomic) unsigned char subColumnID; // @synthesize subColumnID=_subColumnID;
@property(nonatomic) unsigned long long lastCount; // @synthesize lastCount=_lastCount;
@property(readonly, retain, nonatomic) XRAnalysisCoreProjector *projector; // @synthesize projector=_projector;
@property(nonatomic) unsigned char columnID; // @synthesize columnID=_columnID;
@property(nonatomic) unsigned int tableID; // @synthesize tableID=_tableID;
- (void).cxx_destruct;
- (BOOL)hasSubColumn;
- (id)initWithProjector:(id)arg1 tableID:(unsigned int)arg2 columnID:(unsigned char)arg3 subColumnID:(unsigned char)arg4;
- (id)initWithProjector:(id)arg1 tableID:(unsigned int)arg2 columnID:(unsigned char)arg3;

@end

@interface XRExistanceProjectorsForTable : NSObject
{
    XRIntKeyedDictionary *_projectorsByTableColumn;
}

@property(retain, nonatomic) XRIntKeyedDictionary *projectorsByTableColumn; // @synthesize projectorsByTableColumn=_projectorsByTableColumn;
- (void).cxx_destruct;
- (id)init;

@end

@interface XRExistenceProjectorsForRun : NSObject
{
    XRIntKeyedDictionary *_tableProjectors;
}

@property(retain, nonatomic) XRIntKeyedDictionary *tableProjectors; // @synthesize tableProjectors=_tableProjectors;
- (void).cxx_destruct;
- (id)init;

@end

@interface XRTableHeaderMenuView : NSTableHeaderView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;
- (id)init;

@end

@interface XRStrategiesToolbarItem : XRToolbarItem
{
}

- (void)_segmentedControlClicked:(id)arg1;
- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (id)_create1010AndLaterControl;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface XRInfiniteLineBox : NSView
{
    NSColor *_lineColor;
    double _fadeLength;
}

@property double fadeLength; // @synthesize fadeLength=_fadeLength;
@property(retain) NSColor *lineColor; // @synthesize lineColor=_lineColor;
- (void).cxx_destruct;
- (double)_fadeLengthAsPercentOfLength;
@property(readonly) unsigned long long orientation;
- (void)drawRect:(struct CGRect)arg1;
- (void)_ide_infiniteLineBoxCommonInit;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRAnalysisCoreStandardController : NSObject <XRInstrumentViewController>
{
    XRAnalysisCoreDetailViewController *_detailController;
    NSMutableArray *_subcontrollers;
    PFTTraceDocument *_document;
    XRAnalysisCoreTrackConfigurator *_trackConfigurator;
    NSOperation *_tableReqChangeOp;
    XRInstrument *_instrument;
    XRInstrumentStatus *_status;
}

@property(retain, nonatomic) XRInstrumentStatus *status; // @synthesize status=_status;
@property(readonly, nonatomic) __weak XRInstrument *instrument; // @synthesize instrument=_instrument;
- (void).cxx_destruct;
- (id)detailFilteredDataSource;
- (void)restoreDisplayStateFromTemplate:(id)arg1;
- (id)saveDisplayStateForTemplates;
- (void)refineSourceAnnotationQuery:(id)arg1;
- (id)currentRecordSettingsDetailMetaUI;
- (id)currentDisplaySettingsDetailMetaUI;
- (id)currentExtendedDetailMetaUI;
- (id)currentCallTreeFilter;
- (void)instrumentDidChangeSwitches;
- (void)requestDocumentInspectFlag:(id)arg1;
- (BOOL)requestDocumentSetInspectionTime:(unsigned long long)arg1;
- (void)documentSetInspectionTime:(unsigned long long)arg1;
- (void)documentDidUpdateBaseFilterForRunNumber:(long long)arg1;
- (struct XRTimeRange)documentsSelectedTimeRange;
- (void)eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
- (void)instrumentChangedTableRequirements;
- (void)_refreshPlan;
- (id)plan;
- (void)instrumentWillBecomeInvalid;
- (id)init;
- (id)initWithInstrument:(id)arg1 document:(id)arg2;
- (void)currentBrushBecameStale;
- (void)didRecordDataInTimeRange:(struct XRTimeRange)arg1;
- (BOOL)resolution:(unsigned long long)arg1 differsFrom:(unsigned long long)arg2 runNumber:(long long)arg3 strategy:(struct NSString *)arg4;
- (void)configureTrack:(id)arg1;
- (void)configureTrackOverlay:(id)arg1;
- (id)detailContextContainer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSummaryViewController : NSViewController
{
    BOOL _ui_summary_supported;
    BOOL _summariesAreUpToDate;
    BOOL _summaryModelsAreDisposed;
    NSMutableDictionary *_pendingSummaryUpdates;
    NSMutableArray *_summaryModels;
    NSArray *_byTopicHighlights;
    unsigned long long _byTopicHighlightsSelection;
    NSMapTable *_kvoAdapterByInstrument;
    PFTTraceDocument *_document;
    XRSummaryDetailView *_summaryView;
}

@property(nonatomic) __weak XRSummaryDetailView *summaryView; // @synthesize summaryView=_summaryView;
@property(retain, nonatomic) PFTTraceDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (id)dataElementsForContext:(id)arg1;
- (void)setSelectedByTopicHighlights:(id)arg1;
- (id)selectedByTopicHighlights;
- (id)byTopicHighlights;
- (BOOL)needsSummaryView;
- (void)setSummaryObservationEnabled:(BOOL)arg1;
- (void)setSummaryObservationEnabled:(BOOL)arg1 forInstrument:(id)arg2;
- (void)_abandonDocument:(id)arg1 forDocument:(id)arg2;
- (id)summaryModels;
- (void)refreshSummariesForInstrument:(id)arg1;
- (void)refreshSummaries;
- (void)_refreshSummariesForInstrumentOnTimer:(id)arg1;
- (void)_invalidateSummaryModels;
- (void)_disposeOfSummaries;
- (void)_refreshSummariesForInstrument:(id)arg1;
- (void)_clearSummaryTimerForInstrument:(id)arg1;
- (void)reloadSummaryView;
- (void)viewDidLoad;
- (id)init;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface XREngineeringTypeFormatter : NSFormatter
{
    NSNumberFormatter *_countFormatter;
    NSNumberFormatter *_intIDFormatter;
    NSNumberFormatter *_fpsFormatter;
    NSNumberFormatter *_fixedDecimalFormatter;
    XRThreadSet *_threadSet;
    XRProcessSet *_procSet;
    long long _runNumber;
    BOOL _includeProcessNameWithThread;
}

+ (id)stringForValue:(id)arg1 threadSet:(id)arg2 processSet:(id)arg3 runNumber:(long long)arg4;
@property(nonatomic) BOOL includeProcessNameWithThread; // @synthesize includeProcessNameWithThread=_includeProcessNameWithThread;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)attributedStringForNarrativeSubvalue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;
- (id)init;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2;

@end

@interface XRWeightFormatter : XREngineeringTypeFormatter
{
    long long _weightIdx;
    unsigned short _impliedType;
    XRAnalysisCoreValue *_resuableVal;
    BOOL _includePercentageOfTotal;
    BOOL _useSelfColumn;
}

@property(nonatomic) BOOL useSelfColumn; // @synthesize useSelfColumn=_useSelfColumn;
@property(nonatomic) BOOL includePercentageOfTotal; // @synthesize includePercentageOfTotal=_includePercentageOfTotal;
- (void).cxx_destruct;
- (id)stringForObjectValue:(id)arg1;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 impliedEngineeringTypeID:(unsigned short)arg3 weightIdx:(long long)arg4;

@end

@interface XRDecoratorState : NSObject
{
    NSColor *_fillColor;
    NSColor *_strokeColor;
    NSGradient *_gradient;
    NSImage *_gradientImageSlice;
    struct CGImage *_gradientCGImageSlice;
    double _gradientSliceHeight;
    double _gradientAngle;
    double _lineWidth;
    unsigned long long _hash;
    struct CGAffineTransform _transform;
    BOOL _hasTransform;
}

- (void).cxx_destruct;
- (struct CGAffineTransform)transform;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (void)drawGradientInRect:(struct CGRect)arg1 context:(struct CGContext *)arg2;
- (id)gradient;
- (id)strokeColor;
- (id)fillColor;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setInContext:(struct CGContext *)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithGradient:(id)arg1 gradientAngle:(double)arg2;
- (id)initWithFillColor:(id)arg1 strokeColor:(id)arg2 lineWidth:(double)arg3;
- (id)initWithFillColor:(id)arg1 strokeColor:(id)arg2 gradient:(id)arg3 gradientAngle:(double)arg4 lineWidth:(double)arg5;

@end

@interface XRAnalysisCoreTableViewColumnList : NSObject
{
    NSMutableArray *_contents;
    NSMutableDictionary *_itemsByIdent;
    NSMutableArray *_narrativeColumnItems;
    NSTableColumn *_timeColumn;
}

@property(readonly, nonatomic) NSArray *narrativeColumnItems; // @synthesize narrativeColumnItems=_narrativeColumnItems;
@property(readonly, nonatomic) NSTableColumn *timeColumn; // @synthesize timeColumn=_timeColumn;
@property(readonly, nonatomic) NSArray *contents; // @synthesize contents=_contents;
- (void).cxx_destruct;
- (id)itemWithColumnIdentifier:(id)arg1;
- (void)addItem:(id)arg1;
- (id)init;

@end

@interface XRAnalysisCoreTableViewColumnListItem : NSObject
{
    unsigned char _tableColID;
    unsigned char _implClassID;
    unsigned char _topologyFieldID;
    unsigned short _engineeringTypeID;
    NSTableColumn *_column;
    XRAnalysisCoreColumnSpec *_colSpec;
}

@property(nonatomic) unsigned char topologyFieldID; // @synthesize topologyFieldID=_topologyFieldID;
@property(nonatomic) unsigned char implClassID; // @synthesize implClassID=_implClassID;
@property(nonatomic) unsigned short engineeringTypeID; // @synthesize engineeringTypeID=_engineeringTypeID;
@property(nonatomic) unsigned char tableColID; // @synthesize tableColID=_tableColID;
@property(retain, nonatomic) XRAnalysisCoreColumnSpec *colSpec; // @synthesize colSpec=_colSpec;
@property(retain, nonatomic) NSTableColumn *column; // @synthesize column=_column;
- (void).cxx_destruct;

@end

@interface XRAnalysisCoreProjectionBasedDecorator : XRAnalysisCoreStandardDecorator
{
    XRAnalysisCoreProjector *_projector;
}

- (void).cxx_destruct;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)fillContainer:(struct DTTimelineDecorationContainer *)arg1 fromProjector:(id)arg2;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3 projector:(id)arg4;

@end

@interface XRAboutWindowController : NSWindowController <NSWindowRestoration>
{
    NSTextField *_appNameLabel;
    NSTextField *_copyrightMultilineLabel;
    NSTextField *_versionAndBuildLabel;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)sharedAboutWindowController;
- (void).cxx_destruct;
- (void)openAboutWindow:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (id)_versionString;
- (id)_copyrightAndTrademarkString;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreStandardHistogramRollUp : NSObject <XRAnalysisCoreRollUpFunction>
{
    unsigned char _colID;
    XRAnalysisCoreImplValue *_reusedImpl;
    unsigned long long _bucketWidth;
}

@property(nonatomic) unsigned long long bucketWidth; // @synthesize bucketWidth=_bucketWidth;
- (void).cxx_destruct;
- (void)rollUp:(const struct XRAnalysisCoreReadCursor *)arg1 to:(id *)arg2 core:(id)arg3;
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (id)displayableFunctionName;
- (id)initWithBucketWidth:(unsigned long long)arg1 timeColumnID:(unsigned char)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRStrategiesToolbarViewController : NSViewController
{
    XRStrategyUIController *_currentUIController;
    NSArray *_availableStrategyUIControllers;
    NSStackView *_stackView;
    NSSegmentedControl *_strategyPicker;
    NSView *_separatorView;
}

@property(retain, nonatomic) NSView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) NSSegmentedControl *strategyPicker; // @synthesize strategyPicker=_strategyPicker;
@property(nonatomic) __weak NSStackView *stackView; // @synthesize stackView=_stackView;
@property(retain, nonatomic) NSArray *availableStrategyUIControllers; // @synthesize availableStrategyUIControllers=_availableStrategyUIControllers;
@property(retain, nonatomic) XRStrategyUIController *currentUIController; // @synthesize currentUIController=_currentUIController;
- (void).cxx_destruct;
- (void)_rebuildUI;

@end

@interface XRSaveTemplateInfoViewController : NSViewController <XRImagePickerDelegate>
{
    NSString *_templateIconURL;
    XRImagePickerView *_imagePickerView;
    NSTextView *_description;
}

- (void).cxx_destruct;
- (void)imagePicker:(id)arg1 imageSelectedFromURL:(id)arg2;
- (void)imagePicker:(id)arg1 selectedImageAtIndex:(long long)arg2;
- (id)imagesForImagePicker:(id)arg1;
- (id)templateDescription;
- (void)setTemplateDescription:(id)arg1;
- (id)templateIconURL;
- (void)setTemplateIconURL:(id)arg1;
- (void)viewDidLoad;

@end

@interface XRAnalysisCoreNarrativeCellView : XRAnalysisCoreValueCellView
{
}

@end

@interface XRCallTreeCompareBarViewController : NSViewController <PFTDetailViewAccessory>
{
    NSPopUpButton *_mergeActionPopup;
    NSPopUpButton *_mergeTargetRunPopup;
    id <SymbolAwareRun> _mergeRun;
    XRInstrument *_instrument;
    XRCallTreeDetailView *_callTreeView;
}

- (void).cxx_destruct;
- (void)saveClicked:(id)arg1;
- (void)doneClicked:(id)arg1;
- (void)setMainView:(id)arg1;
- (int)_factor;
- (void)selectedNewMergeTarget:(id)arg1;
- (void)_refreshRunTargetsPopup;
- (void)_enumerateValidComparisonRuns:(CDUnknownBlockType)arg1;
- (void)awakeFromNib;
- (id)initWithInstrument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTargetChooserPathCell : NSPathCell <XRPathCellAccessible>
{
    struct CGSize _cachedSizeWanted;
    NSMenu *_trackingMenu;
    NSPathComponentCell *_clickedPathComponentCell;
    int _gradientStyle;
    int _borderSides;
}

+ (Class)pathComponentCellClass;
@property int borderSides; // @synthesize borderSides=_borderSides;
@property(nonatomic) int gradientStyle; // @synthesize gradientStyle=_gradientStyle;
@property(retain) NSPathComponentCell *clickedPathComponentCell; // @synthesize clickedPathComponentCell=_clickedPathComponentCell;
- (void).cxx_destruct;
- (id)trackingMenu;
- (void)handleClickInComponentCell:(id)arg1 atPoint:(struct CGPoint)arg2 inRect:(struct CGRect)arg3 ofView:(id)arg4 event:(id)arg5;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)sizeWantedForFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)cancelMenuTracking;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)_handleClickInComponentCell:(id)arg1 atPoint:(struct CGPoint)arg2 inRect:(struct CGRect)arg3 ofView:(id)arg4 event:(id)arg5;
- (void)_popUpMenuForComponentCell:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)setFont:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRLibraryViewController : DVTLibraryController
{
}

- (void)_syncAsset:(id)arg1 withInstrumentType:(id)arg2;
- (id)_createLibraryAssetForInstrumentType:(id)arg1;
- (void)_addInstrumentType:(id)arg1;
- (void)_removeInstrumentType:(id)arg1;
- (void)_populateLibrary;
- (BOOL)removeAssets:(id)arg1 error:(id *)arg2;
- (BOOL)canRemoveAsset:(id)arg1;
- (void)instrumentRemoved:(id)arg1;
- (void)instrumentAdded:(id)arg1;
- (id)searchStringsForAsset:(id)arg1;
- (BOOL)delegateFirstResponder;
- (void)libraryTileView:(id)arg1 wasDoubleClicked:(id)arg2;
- (BOOL)canOpenDetailPopUp;
- (BOOL)depositAssets:(id)arg1;
- (void)populatePasteboard:(id)arg1 withAssets:(id)arg2;
- (void)libraryDidLoad;
- (void)dealloc;

@end

@interface XRSearchBarViewController : NSViewController <NSSearchFieldDelegate, XRSearchTarget, NSTextFieldDelegate, PFTDetailViewAccessory>
{
    DVTSearchField *_searchField;
    NSButton *_ignoreCaseButton;
    NSButton *_autoExpandButton;
    NSSegmentedControl *_directionalButtons;
    NSButton *_doneButton;
    NSTableView *_defaultView;
    id <XRSearchTarget> _searchTarget;
    BOOL _targetIsViewBased;
    BOOL _targetSupportsObjectValueForRow;
    BOOL _targetOutlineSupportsHighlights;
    BOOL _targetTableSupportsHighlights;
    NSString *_selectedCategory;
    BOOL _matchSymbols;
    BOOL _matchLibraries;
    XRInstrument *_instrument;
}

+ (BOOL)ignoreCaseDuringFind;
+ (BOOL)autoExpandNodesDuringFind;
+ (void)initialize;
@property(readonly, retain, nonatomic) XRInstrument *instrument; // @synthesize instrument=_instrument;
- (void).cxx_destruct;
- (BOOL)searchBackward:(id)arg1;
- (BOOL)searchForward:(id)arg1 skipCurrent:(BOOL)arg2;
- (BOOL)_searchBackwardOutline:(id)arg1 row:(long long)arg2 options:(unsigned long long)arg3;
- (BOOL)_searchBackwardOutline:(id)arg1 item:(id)arg2 options:(unsigned long long)arg3 resultPath:(id)arg4 selectedItem:(id)arg5 stop:(char *)arg6;
- (id)_pathToRootFromItem:(id)arg1;
- (id)_pathFromRootToItem:(id)arg1;
- (BOOL)_searchForwardOutline:(id)arg1 row:(long long)arg2 options:(unsigned long long)arg3 skipCurrent:(BOOL)arg4;
- (void)_expandPath:(id)arg1 priorItem:(id)arg2 searchForward:(BOOL)arg3;
- (BOOL)_forwardCheckOutlineView:(id)arg1 matchingChildForItem:(id)arg2 forString:(id)arg3 options:(unsigned long long)arg4 resultPath:(id)arg5 skipCurrent:(BOOL)arg6;
- (int)_checkNodeInOutlineView:(id)arg1 matchingChildForItem:(id)arg2 forString:(id)arg3 options:(unsigned long long)arg4;
- (BOOL)_isItem:(id)arg1 highlightedInOutlineView:(id)arg2;
- (unsigned long long)stringArray:(id)arg1 containsPartialMatch:(id)arg2;
- (BOOL)_searchBackwardTable:(id)arg1 row:(long long)arg2 options:(unsigned long long)arg3;
- (BOOL)_searchForwardTable:(id)arg1 row:(long long)arg2 options:(unsigned long long)arg3 skipCurrent:(BOOL)arg4;
- (void)_selectRow:(long long)arg1;
- (void)_checkNeedDisplayLoopForOldRow:(long long)arg1 newRow:(long long)arg2 searchForward:(BOOL)arg3;
- (BOOL)_doesRow:(long long)arg1 matchSearchTerm:(id)arg2 forColumns:(id)arg3 options:(unsigned long long)arg4 useBindings:(char *)arg5;
- (id)_stringForColumn:(long long)arg1 row:(long long)arg2;
- (id)searchCategories;
- (id)_columnsToSearch;
- (id)_searchableColumns;
- (void)setMainView:(id)arg1;
- (id)searchTarget;
- (void)setSearchTarget:(id)arg1;
- (void)viewDidLoad;
- (void)viewDidAppear;
- (void)awakeFromNib;
- (void)_searchCategorySelected:(id)arg1;
- (void)_rebuildSearchMenu;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)performFindPanelAction:(id)arg1;
- (BOOL)_performCurrentEvent;
- (void)doneClicked:(id)arg1;
- (void)searchButtonsClicked:(id)arg1;
- (void)searchFieldAction:(id)arg1;
- (void)dealloc;
- (id)initWithInstrument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRFlippedClipView : NSClipView
{
}

- (BOOL)isFlipped;

@end

@interface XRAnalysisCoreHistogramDecorator : XRAnalysisCoreProjectionBasedDecorator
{
    XRAnalysisCoreHistogramTreatment *_treatment;
}

- (void).cxx_destruct;
- (id)decorateInspectionRanges:(id)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)fillContainer:(struct DTTimelineDecorationContainer *)arg1 fromProjector:(id)arg2;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3 projector:(id)arg4;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3 projector:(id)arg4 treatment:(id)arg5;

@end

@interface XRDataElementSummaryViewController : NSViewController
{
    int _style;
    PFTDataElement *_element;
    NSTextField *_titleField;
    DVTGradientImageButton *_configurationButton;
    NSView *_dataView;
    NSLayoutConstraint *_dataTopConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *dataTopConstraint; // @synthesize dataTopConstraint=_dataTopConstraint;
@property(nonatomic) __weak NSView *dataView; // @synthesize dataView=_dataView;
@property(nonatomic) __weak DVTGradientImageButton *configurationButton; // @synthesize configurationButton=_configurationButton;
@property(nonatomic) __weak NSTextField *titleField; // @synthesize titleField=_titleField;
@property(readonly, nonatomic) PFTDataElement *element; // @synthesize element=_element;
- (void).cxx_destruct;
- (void)viewWillAppear;
- (void)viewDidAppear;
- (void)reloadData;
- (void)awakeFromNib;
- (id)initWithDataElement:(id)arg1 style:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreQueryBasedDecorator : XRAnalysisCoreStandardDecorator
{
    XRAnalysisCoreValueTreatment *_treatment;
    unsigned int _tableID;
    unsigned char _timeColumnID;
    unsigned char _durationColumnID;
    unsigned char _valueColumnID;
    unsigned char _valueLabelColumnID;
    unsigned char _colorColumnID;
    unsigned char _visualConnectionUUIDLabelColumnID;
    unsigned char _valueColumnImpType;
    unsigned short _valueEngineeringType;
    unsigned short _valueLabelEngineeringType;
    unsigned char _colorColumnImpType;
    unsigned short _colorEngineeringType;
    NSArray *_selectionCriteria;
    NSDictionary *_selectionColumnIDs;
    unsigned long long _highlightType;
    union XRBookmark _highlightBookmark;
    vector_59b01178 _highlightBookmarks;
    NSString *_groupByValue;
    NSString *_groupByColumnName;
    NSString *_valueQualifierValue;
    NSString *_valueQualifierColumnName;
}

@property(readonly) unsigned char visualConnectionUUIDLabelColumnID; // @synthesize visualConnectionUUIDLabelColumnID=_visualConnectionUUIDLabelColumnID;
@property(readonly) unsigned char valueColumnID; // @synthesize valueColumnID=_valueColumnID;
@property(readonly) unsigned char durationColumnID; // @synthesize durationColumnID=_durationColumnID;
@property(readonly) unsigned char timeColumnID; // @synthesize timeColumnID=_timeColumnID;
@property(copy, nonatomic) NSString *valueQualifierColumnName; // @synthesize valueQualifierColumnName=_valueQualifierColumnName;
@property(copy, nonatomic) NSString *valueQualifierValue; // @synthesize valueQualifierValue=_valueQualifierValue;
@property(copy, nonatomic) NSString *groupByColumnName; // @synthesize groupByColumnName=_groupByColumnName;
@property(copy, nonatomic) NSString *groupByValue; // @synthesize groupByValue=_groupByValue;
- (id).cxx_construct;
- (void).cxx_destruct;
- (const vector_59b01178 *)highlightBookmarks;
- (void)setHighlightBookmarks:(const vector_59b01178 *)arg1;
- (union XRBookmark)highlightBookmark;
- (void)setHighlightBookmark:(union XRBookmark)arg1;
- (unsigned long long)highlightType;
- (void)clearAllHighlights;
- (unsigned long long)decoratorKind;
- (void)decorateInspectionRanges:(id)arg1 qualityOfService:(unsigned int)arg2 priority:(int)arg3 group:(id)arg4;
- (void)decorateContainer:(struct DTTimelineDecorationContainer *)arg1 qualityOfService:(unsigned int)arg2 priority:(int)arg3 group:(id)arg4;
- (unsigned int)tableID;
- (id)representativeQueryFromCore:(id)arg1;
- (void)decorateInspectionRanges:(id)arg1 fromCore:(id)arg2 qualityOfService:(unsigned int)arg3 priority:(int)arg4 group:(id)arg5;
- (void)fillContainer:(struct DTTimelineDecorationContainer *)arg1 fromCore:(id)arg2 qualityOfService:(unsigned int)arg3 priority:(int)arg4 group:(id)arg5;
- (id)_createColumnSelectionValueSets:(id)arg1 schema:(id)arg2;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3 treatment:(id)arg4 tableID:(unsigned int)arg5 timeColumnID:(unsigned char)arg6 durationColumnID:(unsigned char)arg7 valueColumnID:(unsigned char)arg8 valueLabelColumnID:(unsigned char)arg9 colorColumnID:(unsigned char)arg10 visualConnectionUUIDLabelColumnID:(unsigned char)arg11 selectionCriteria:(id)arg12 selectionColumnIDs:(id)arg13;

@end

@interface XRRecordPauseItemViewController : XRTouchBarItemViewController <XRLazyKVOResponder, XRSupportsPFTWindowController>
{
    XRLazyKVOAdapter *_observationAdapter;
}

+ (id)_redFunctionRowAppearance;
+ (id)_functionRowAppearance;
+ (id)_stopButtonImage;
+ (id)_recordButtonImage;
+ (id)_buttonImageNamed:(id)arg1;
@property(readonly, nonatomic) XRLazyKVOAdapter *observationAdapter; // @synthesize observationAdapter=_observationAdapter;
- (void).cxx_destruct;
- (void)_toggleRecording:(id)arg1;
- (id)_recordButton;
- (id)_buildRecordButton;
- (void)handleLazyKVOUpdate:(id)arg1;
- (void)dealloc;
- (void)loadView;
- (id)initWithWindowController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) PFTWindowController *pftWindowController; // @dynamic pftWindowController;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRStrategyUIController : NSResponder <XRAnalysisCoreDetailViewControllerDelegate, XRLazyKVOResponder, NSDraggingDestination>
{
    PFTTraceDocument *_traceDocument;
    BOOL _needsRefresh;
    BOOL _checkedForCommonDetailView;
    struct XRTimeRange _lastSeenSelectedTimeRange;
    unsigned long long _lastSeenInspectionTime;
    XRStrategyUIInspector *_activeInspector;
    unsigned long long _inspectionType;
    XRLazyKVOAdapter *_kvoAdapter;
    XRTimeFlag *_draggingFlag;
    NSView *_lentView;
    XRContext *_lentContext;
    XRAnalysisCoreDetailViewController *__commonDetailViewController;
    XRStrategyUIHighlightingController *_highlightingController;
    DTTimelineGraph *_timelineGraph;
    PFTDetailTypeHostView *_detailHostView;
    PFTSelectedEventDataElementList *_extendedDetailModel;
    unsigned long long _resolution;
    XRStrategyUIControllerState *_state;
}

+ (id)_createDetailViewController;
+ (id)_defaultState;
@property(copy, nonatomic) XRStrategyUIControllerState *state; // @synthesize state=_state;
@property(nonatomic) unsigned long long resolution; // @synthesize resolution=_resolution;
@property(readonly, nonatomic) XRStrategyUIInspector *activeInspector; // @synthesize activeInspector=_activeInspector;
@property(nonatomic) __weak PFTSelectedEventDataElementList *extendedDetailModel; // @synthesize extendedDetailModel=_extendedDetailModel;
@property(nonatomic) __weak PFTDetailTypeHostView *detailHostView; // @synthesize detailHostView=_detailHostView;
@property(nonatomic) __weak DTTimelineGraph *timelineGraph; // @synthesize timelineGraph=_timelineGraph;
- (void).cxx_destruct;
- (void)detailViewController:(id)arg1 didUpdateExtendedDetail:(id)arg2;
- (id)_currentSelectionContext:(id)arg1 container:(id)arg2;
- (void)_takeControlOfDetailView;
- (id)_commonDetailViewController;
- (BOOL)_wantsPeriodicDraggingUpdates;
- (void)_draggingEnded:(id)arg1;
- (void)_concludeDragOperation:(id)arg1;
- (BOOL)_performDragOperation:(id)arg1;
- (BOOL)_prepareForDragOperation:(id)arg1;
- (void)_draggingExited:(id)arg1;
- (unsigned long long)_draggingUpdated:(id)arg1;
- (unsigned long long)_draggingEntered:(id)arg1;
- (void)_setDeckUnits:(long long)arg1 forRepresentedObject:(id)arg2;
- (void)_collapseRepresentedObject:(id)arg1;
- (void)_expandRepresentedObject:(id)arg1;
- (void)_resetBottomPlane;
- (void)_replaceOldState:(id)arg1 withState:(id)arg2;
- (void)_bindingProblemSolved;
- (BOOL)_resolution:(unsigned long long)arg1 differsFrom:(unsigned long long)arg2;
- (void)_resolutionDidChange;
- (void)_populateExtendedDetailModel;
- (BOOL)_supportsSelection;
- (void)_addFilterToNavigator:(id)arg1 planes:(id)arg2;
- (void)_selectionDetailContextChanged;
- (void)_brushStylesChanged;
- (id)_planeForRoute:(id)arg1 representedObject:(id)arg2;
- (id)_planForRunNumber:(long long)arg1;
- (void)_finalShutdownHandler;
- (void)_eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
- (void)_inspectionTimeIs:(unsigned long long)arg1;
- (void)_documentUpdateFilterForRunNumber:(long long)arg1;
- (id)_currentSelectionFilteredDataSource;
- (id)_currentSelectionIcon;
- (void)_handleConsolidatedModelRefresh;
- (void)_refreshModelCB;
- (void)didSetInspectionTime:(unsigned long long)arg1;
- (void)didChangeUpdateFilterForRunNumber:(long long)arg1;
- (id)strategyControllerIdentifierRequired;
- (id)strategyRootContext;
- (id)selectionIcon;
- (id)selectionDetailsFilteredDataSource;
- (id)selectionDetailContext;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)selectNextEvent:(id)arg1;
- (void)selectPreviousEvent:(id)arg1;
- (void)selectNextInstrument:(id)arg1;
- (void)selectPreviousInstrument:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)shutdown;
- (id)dataElementsForModalEditor;
- (void)resetDetailHostView;
- (void)expireLoanedDetailArea;
- (void)lendDetailAreaToView:(id)arg1 context:(id)arg2;
- (void)setDeckUnits:(long long)arg1 forPlane:(id)arg2;
- (void)runStarted;
- (void)collapsePlane:(id)arg1;
- (void)expandPlane:(id)arg1;
- (void)closeActiveInspector;
- (void)highlightWalkClickAtTime:(unsigned long long)arg1 planes:(id)arg2;
- (void)_updateOverlayPlaneAfterModelChange;
- (id)planesForOverlayToMonitor;
- (void)_createConnectionsIntervalDecoratorForRunNumber:(long long)arg1;
- (void)_clearConnectionsDecorator;
- (void)inspectionClickAtTime:(unsigned long long)arg1 planes:(id)arg2;
- (void)endFlagDragAtTime:(unsigned long long)arg1;
- (void)dragFlagToTime:(unsigned long long)arg1;
- (BOOL)beginFlagDragAtTime:(unsigned long long)arg1;
- (void)flagInspectionStartingAtFlag:(id)arg1;
- (void)flagInspectionClickAtTime:(unsigned long long)arg1;
- (void)_inspectFlag:(id)arg1 time:(unsigned long long)arg2;
- (void)_startNewWalkSession:(id)arg1 afterOperation:(id)arg2;
- (void)_startNewNavigationSession:(id)arg1 afterOperation:(id)arg2;
- (void)_placeInspector:(id)arg1 options:(unsigned long long)arg2;
- (void)eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
- (void)_scrollSelectionIntoView;
- (id)selectedRunPlan;
- (id)strategyControllerForRunIdentifier:(int)arg1;
- (void)selectSummaryFilter:(id)arg1;
- (id)legend;
- (id)styleViews;
- (id)filterViews;
- (id)displayName;
- (id)model;
- (void)handleLazyKVOUpdate:(id)arg1;
- (id)_planesWithValue:(id)arg1 forKey:(id)arg2;
- (void)timelineGraphDidLayoutWithState:(id)arg1;
- (void)_restoreHighlightState;
- (BOOL)_getSelectedObject:(id *)arg1 plane:(id *)arg2;
- (void)modelDidRefresh;
- (void)setModel:(id)arg1;
- (long long)compareStrategyName:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRInspectorViewController : NSViewController
{
    PFTDataView *_dataView;
    id <XRInspectorSource> _dataSource;
    PFTDataElementList *_model;
}

@property(retain) PFTDataElementList *model; // @synthesize model=_model;
@property __weak id <XRInspectorSource> dataSource; // @synthesize dataSource=_dataSource;
@property __weak PFTDataView *dataView; // @synthesize dataView=_dataView;
- (void).cxx_destruct;
- (void)_updateModel;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)reload;
- (void)awakeFromNib;
- (id)initWithDataSource:(id)arg1;
- (id)init;

@end

@interface XRTimelineGraph : DTTimelineGraph <NSDraggingDestination>
{
    id <NSDraggingDestination> _draggingDestinationDelegate;
}

@property(nonatomic) __weak id <NSDraggingDestination> draggingDestinationDelegate; // @synthesize draggingDestinationDelegate=_draggingDestinationDelegate;
- (void).cxx_destruct;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)viewDidMoveToWindow;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRGeneralPreferencesModule : XRPreferencesModule <NSOpenSavePanelDelegate, NSTextFieldDelegate>
{
}

- (void)resetDontAskMeWarnings:(id)arg1;
- (BOOL)isResizable;
- (id)imageForPreferenceNamed:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRInstrumentsStrategyUIController : XRStrategyUIController
{
    NSMutableDictionary *_topLevelItemsByUUID;
    XRInstrumentStrategyTopLevelItem *_selectedInstrumentTopLevelItem;
    long long _lastRunNumberSelected;
    BOOL _instrumentListMutated;
    BOOL _instrumentSelectionMutated;
    BOOL _fullTrackRefresh;
    XRLazyKVOAdapter *_kvoAdapter;
    XRInstrumentsTimelineAccessibilityElement *_timelineAccessibilityElement;
    id _selectionObject;
}

+ (id)_defaultState;
+ (id)_requiredStrategyControllerIdentifier;
+ (id)_createDetailViewController;
@property(retain, nonatomic) id selectionObject; // @synthesize selectionObject=_selectionObject;
- (void).cxx_destruct;
- (void)handleLazyKVOUpdate:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)_performDragOperation:(id)arg1;
- (BOOL)_prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)_draggingEntered:(id)arg1;
- (void)_setDeckUnits:(long long)arg1 forRepresentedObject:(id)arg2;
- (void)_collapseRepresentedObject:(id)arg1;
- (void)_expandRepresentedObject:(id)arg1;
- (void)_replaceOldState:(id)arg1 withState:(id)arg2;
- (void)_resolutionDidChange;
- (void)_populateExtendedDetailModel;
- (void)_eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
- (void)_inspectionTimeIs:(unsigned long long)arg1;
- (void)_documentUpdateFilterForRunNumber:(long long)arg1;
- (void)_setModelSelection:(id)arg1;
- (id)_topLevelItemForInstrument:(id)arg1;
- (BOOL)_resolution:(unsigned long long)arg1 differsFrom:(unsigned long long)arg2;
- (void)_resetPlanesInTimeline;
- (id)planesForOverlayToMonitor;
- (id)_currentSelectionFilteredDataSource;
- (id)_currentSelectionContext:(id)arg1 container:(id)arg2;
- (id)_currentSelectionIcon;
- (void)_finalShutdownHandler;
- (void)_takeControlOfDetailView;
- (void)_forceInstrumentSelection;
- (void)_updateSelectedPlanes;
- (void)_handleConsolidatedModelRefresh;
- (void)_setTimelineGraph:(id)arg1;
- (void)setModel:(id)arg1;
- (void)selectInstrument:(id)arg1;
- (id)dataElementsForModalEditor;
- (id)planeForSelection:(id)arg1 embeddableInTimeline:(id)arg2;
- (id)displayName;
- (id)_state;
- (id)init;

@end

@interface XRInstrumentStrategyTopLevelItem : NSObject
{
    XRTrack *_blankTrack;
    DTTimelineGroupPlane *_plane;
    DTTimelineGroupPlane *_containerPlane;
    XRIntKeyedDictionary *_tracksByRunNumber;
    long long _maxKnownIndex;
}

@property(readonly, nonatomic) long long maxKnownIndex; // @synthesize maxKnownIndex=_maxKnownIndex;
@property(readonly, nonatomic) XRIntKeyedDictionary *tracksByRunNumber; // @synthesize tracksByRunNumber=_tracksByRunNumber;
@property(readonly, nonatomic) DTTimelineGroupPlane *containerPlane; // @synthesize containerPlane=_containerPlane;
@property(readonly, nonatomic) DTTimelineGroupPlane *plane; // @synthesize plane=_plane;
- (void).cxx_destruct;
- (void)updateStatus:(id)arg1;
- (void)handleBrushChange:(id)arg1;
- (id)representativePlaneForManager:(id)arg1 instrument:(id)arg2;
- (void)syncPlanesWithManager:(id)arg1 trace:(id)arg2 resolution:(unsigned long long)arg3 instrument:(id)arg4;
- (void)syncPlanesWithManager:(id)arg1 trace:(id)arg2 resolution:(unsigned long long)arg3 instrument:(id)arg4 forEmbedding:(BOOL)arg5;
- (void)syncPlanesWithManager:(id)arg1 trace:(id)arg2 resolution:(unsigned long long)arg3 instrument:(id)arg4 forEmbedding:(BOOL)arg5 inToolbar:(BOOL)arg6;
- (id)init;

@end

@interface XRInstrumentsStrategyUIControllerState : XRStrategyUIControllerState
{
    NSMutableSet *_instrumentUUIDsWithDisclosedRuns;
}

+ (id)archivableKeys;
@property(readonly, nonatomic) NSMutableSet *instrumentUUIDsWithDisclosedRuns; // @synthesize instrumentUUIDsWithDisclosedRuns=_instrumentUUIDsWithDisclosedRuns;
- (void).cxx_destruct;
- (id)init;

@end

@interface XRActivityToolbarItem : XRToolbarItem
{
    unsigned long long _hours;
    unsigned long long _minutes;
    unsigned long long _seconds;
}

@property(readonly) XRActivityView *activityView;
- (long long)visibilityPriority;
- (struct CGSize)minSize;
- (struct CGSize)maxSize;
- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (void)_runWasSelected:(id)arg1;
- (void)_updateRuns:(unsigned long long)arg1 selectedRunIndex:(unsigned long long)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_inspectionHeadChanged:(id)arg1;
- (void)_updateTime;

@end

@interface XRThreadsStrategyUIController : XRDefaultHostingStrategyUIController <NSPopoverDelegate, XRUIModelChangeObserver, XRLazyKVOResponder>
{
    XRStrategiesToolbarButton *_processes;
    NSButton *_clearFilterButton;
    NSPopover *_popOver;
    XRThreadFilterViewController *_threadFilterController;
    XRProcessAndThreadListModel *_knownProcessesAndThreads;
    XRProcessAndThreadListModel *_restrictedProcessesAndThreads;
    XRThreadListLimiter *_limiter;
    XRIntKeyedDictionary *_includedThreadsByRun;
    XRElementSetModel *_includedThreads;
    long long _mySelectedRunNumber;
    NSOperation *_updateStrategyControllerOp;
    NSPopUpButton *_displayStyle;
    XRThreadStrategyController *_observedTSC;
    XRLazyKVOAdapter *_kvoAdapter;
    XRIntKeyedDictionary *_trackByThreadID;
    XRAnalysisCoreTrackConfigurator *_trackConfigurator;
    XRThreadsTimelineAccessibilityElement *_timelineAccessibilityElement;
}

+ (id)_defaultState;
+ (id)_requiredStrategyControllerIdentifier;
@property(readonly, nonatomic) XRThreadStrategyController *observedTSC; // @synthesize observedTSC=_observedTSC;
- (void).cxx_destruct;
- (BOOL)_supportsSelection;
- (void)_finalShutdownHandler;
- (void)_addFilterToNavigator:(id)arg1 planes:(id)arg2;
- (id)_currentSelectionIcon;
- (void)_setModelSelection:(id)arg1;
- (void)_setTimelineGraph:(id)arg1;
- (void)setModel:(id)arg1;
- (BOOL)_resolution:(unsigned long long)arg1 differsFrom:(unsigned long long)arg2;
- (void)_resolutionDidChange;
- (void)_resetPlanesInTimeline;
- (void)_replaceOldState:(id)arg1 withState:(id)arg2;
- (void)_handleConsolidatedModelRefresh;
- (void)modelDidChange:(id)arg1;
- (void)_styleSelected:(id)arg1;
- (void)setStyle:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)handleLazyKVOUpdate:(id)arg1;
- (void)updateSelectedRun;
- (void)updateDisplayOptions;
- (void)updateThreadsAndProcesses;
- (void)excludeThreads:(id)arg1;
- (void)includeThreads:(id)arg1;
- (void)_backupIncludedThreads;
- (void)_updateStrategyControllerThreads;
- (void)restrictThreadToContainString:(id)arg1;
- (void)restrictThreadList:(id)arg1;
- (void)_clearFilterAction:(id)arg1;
- (void)_threadFilterButtonClicked:(id)arg1;
@property(readonly, nonatomic) XRIntKeyedDictionary *trackByThreadID;
- (id)styleViews;
- (id)filterViews;
- (id)displayName;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRThreadsStrategyUIControllerState : XRStrategyUIControllerState
{
}

@end

@interface XRProgressIndicator : NSProgressIndicator
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)_drawBar:(BOOL)arg1;
- (id)init;

@end

@interface XRAnalysisCoreCallTreeViewController : NSViewController <XRCallTreeDataSource, XRFilteredDataSource>
{
    XRSlidingCapableScrollView *_callTreeScrollView;
    XRCallTreeDetailView *_callTreeView;
    XRMultiProcessBacktraceRepository *_backtraceRepository;
    XRIntKeyedDictionary *_wrappers;
    NSMutableDictionary *_aggregatorByCategory;
    unsigned int _backtraceAggIdx;
    unsigned char _backtraceDim;
    unsigned char _threadDim;
    unsigned char _categoryDim;
    NSString *_categoryDimName;
    XREngineeringTypeFormatter *_myEngFormatter;
    XRAnalysisCoreProjector *_projector;
    NSTimer *_deferredSelectionUpdateTimer;
    NSDictionary *_activeFocusInfo;
    id <XRAnalysisCoreCallTreeViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <XRAnalysisCoreCallTreeViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (id)searchContexts;
- (id)selectedSearchContext;
- (void)refineQueryBasedOnUIState:(id)arg1;
- (id)contextRepresentation;
- (id)currentCallTreeFilter;
- (void)_stackFrameSelected:(id)arg1;
- (void)_focusOnCallTreeNode:(id)arg1;
- (id)dataElementForHeaviestStack;
- (id)dataMiningElementsWithState;
- (id)processCategoriesForPid:(int)arg1;
- (id)provideCategories;
- (id)backtracesForCategory:(id)arg1 timeRange:(struct XRTimeRange)arg2 savedIndex:(unsigned long long *)arg3;
- (void)resetAggregatesForRepository:(id)arg1;
- (void)_deferredSelectionTimeout:(id)arg1;
- (void)restoreUIState:(id)arg1;
- (void)saveUIState:(id)arg1;
- (void)refresh;
- (void)instrumentWillBecomeInvalid;
- (void)_mainThreadAdaptCallTree;
- (void)_mainThreadFillAggregator;
- (void)_mainThreadRepoDidReset;
- (void)viewWillLayout;
- (void)viewWillAppear;
- (void)loadView;
- (void)setRepresentedObject:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRInteractiveContentController : NSViewController
{
}

@end

@interface XRCPUsPreferencesModule : XRPreferencesModule <XRCPUmanagerDelegateProtocol>
{
    XRCPUmanager *_processorMgr;
    NSSlider *_activeProcessorsSlider;
    NSTextField *_activeProcessorsText;
    NSTextField *_maxProcessorsText;
    NSButton *_activeProcessorsHTCheck;
}

@property __weak NSButton *activeProcessorsHTCheck; // @synthesize activeProcessorsHTCheck=_activeProcessorsHTCheck;
@property __weak NSTextField *maxProcessorsText; // @synthesize maxProcessorsText=_maxProcessorsText;
@property __weak NSTextField *activeProcessorsText; // @synthesize activeProcessorsText=_activeProcessorsText;
@property __weak NSSlider *activeProcessorsSlider; // @synthesize activeProcessorsSlider=_activeProcessorsSlider;
- (void).cxx_destruct;
- (void)updateActiveProcessorCoreCount;
- (void)_updateActiveProcessorCoreCount;
- (void)toggleHyperThreading:(id)arg1;
- (void)changeActiveProcessorCores:(id)arg1;
- (BOOL)isResizable;
- (id)imageForPreferenceNamed:(id)arg1;
- (void)initializeFromDefaults;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRInspectionHeadDecorator : DTTimelineDecorator
{
    unsigned long long _inspectionTime;
}

@property(nonatomic) unsigned long long inspectionTime; // @synthesize inspectionTime=_inspectionTime;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)init;

@end

@interface XRMainWindowUIState : NSObject <NSSecureCoding>
{
    int _currentLayout;
    NSString *_selectedStrategyIdentifier;
    double _splitterValue;
    unsigned long long _inspectionTime;
    unsigned long long _nanosecondsPerPoint;
    unsigned long long _trackTimeOffset;
    double _trackYOffset;
    id <NSCoding><NSObject> _displayedDetailContextValue;
    XRContext *_displayedContext;
    NSString *_mode;
    struct XRTimeRange _selectedTimeRange;
}

+ (BOOL)supportsSecureCoding;
+ (id)keyPathsForValuesAffectingInspectionTimeInSeconds;
+ (id)keyPathsForValuesAffectingLowerDisplayHidden;
+ (id)keyPathsForValuesAffectingEventInspectorHidden;
+ (id)keyPathsForValuesAffectingSelectedStrategy;
+ (long long)version;
@property(retain, nonatomic) NSString *mode; // @synthesize mode=_mode;
@property(retain, nonatomic) XRContext *displayedContext; // @synthesize displayedContext=_displayedContext;
@property(retain, nonatomic) id <NSCoding><NSObject> displayedDetailContextValue; // @synthesize displayedDetailContextValue=_displayedDetailContextValue;
@property(nonatomic) double trackYOffset; // @synthesize trackYOffset=_trackYOffset;
@property(nonatomic) unsigned long long trackTimeOffset; // @synthesize trackTimeOffset=_trackTimeOffset;
@property(nonatomic) unsigned long long nanosecondsPerPoint; // @synthesize nanosecondsPerPoint=_nanosecondsPerPoint;
@property(nonatomic) struct XRTimeRange selectedTimeRange; // @synthesize selectedTimeRange=_selectedTimeRange;
@property(nonatomic) unsigned long long inspectionTime; // @synthesize inspectionTime=_inspectionTime;
@property(nonatomic) double splitterValue; // @synthesize splitterValue=_splitterValue;
@property(retain, nonatomic) NSString *selectedStrategyIdentifier; // @synthesize selectedStrategyIdentifier=_selectedStrategyIdentifier;
@property(nonatomic) int currentLayout; // @synthesize currentLayout=_currentLayout;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, nonatomic, getter=isLowerDisplayHidden) BOOL lowerDisplayHidden;
@property(readonly, nonatomic, getter=isEventInspectorHidden) BOOL eventInspectorHidden;
@property(readonly, nonatomic) double inspectionTimeInSeconds;
@property(readonly, nonatomic) XRStrategyInfo *selectedStrategy;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface XRPreferencesModule : NSPreferencesModule <XRUIModelChangeObserver>
{
    NSView *preferencesView;
}

- (void).cxx_destruct;
- (void)modelDidChange:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRGenericFillView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface XRRecordingPreferencesModule : XRPreferencesModule
{
    NSPopUpButton *_documentLocationPopup;
    DVTFilePathField *_defaultDocumentLocationTextField;
    DVTFilePathField *_defaultDocumentLocationDisplay;
    NSButton *_enableSpinProfilingButton;
    NSTextField *_sampleDurationTextField;
    NSNumberFormatter *_samplingDurationFormatter;
}

@property __weak NSNumberFormatter *samplingDurationFormatter; // @synthesize samplingDurationFormatter=_samplingDurationFormatter;
@property __weak NSTextField *sampleDurationTextField; // @synthesize sampleDurationTextField=_sampleDurationTextField;
@property __weak NSButton *enableSpinProfilingButton; // @synthesize enableSpinProfilingButton=_enableSpinProfilingButton;
@property __weak DVTFilePathField *defaultDocumentLocationDisplay; // @synthesize defaultDocumentLocationDisplay=_defaultDocumentLocationDisplay;
@property __weak DVTFilePathField *defaultDocumentLocationTextField; // @synthesize defaultDocumentLocationTextField=_defaultDocumentLocationTextField;
@property __weak NSPopUpButton *documentLocationPopup; // @synthesize documentLocationPopup=_documentLocationPopup;
- (void).cxx_destruct;
- (void)saveChanges;
- (void)modelDidChange:(id)arg1;
- (void)_updateFields;
- (void)samplingDurationChange:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)_chooseDefaultDocumentLocation:(id)arg1;
- (void)_updateDefaultDocumentPopupView:(BOOL)arg1;
- (void)spinProfilingPreferenceChanged:(id)arg1;
- (void)openKeyboardShortcuts:(id)arg1;
- (BOOL)isResizable;
- (id)imageForPreferenceNamed:(id)arg1;
- (void)initializeFromDefaults;

@end

@interface XRClearBackgroundButtonCell : NSButtonCell
{
}

@end

@interface XRClearBackgroundButton : NSButton
{
}

+ (void)initialize;
- (void)awakeFromNib;
- (id)init;

@end

@interface XRCPUmanager : NSObject
{
    id _delegate;
    int _maxPhysicalCPUCount;
    int _maxLogicalCPUCount;
    int _curPhysicalCPUCount;
    int _curLogicalCPUCount;
    int _curActiveCPUCount;
    BOOL _supportsLogicalCPUs;
    BOOL _hwThreadsEnabled;
    int _desiredActiveCoreCount;
}

- (void).cxx_destruct;
- (void)_activeCPUCountChanged:(id)arg1;
- (void)setActiveCoreCount:(int)arg1;
- (void)enableSMT:(BOOL)arg1;
- (void)_updateActiveCores;
- (BOOL)SMTisEnabled;
- (int)activeCoreCount;
- (int)physicalCoreCount;
- (int)logicalCoreCount;
- (BOOL)coresSupportSMT;
- (int)maxPhysicalCoreCount;
- (int)maxLogicalCoreCount;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)init;

@end

@interface XRHelpManager : NSObject
{
}

+ (id)defaultHelpManager;
- (void)displayUUID:(id)arg1;
- (BOOL)displayAppleRef:(id)arg1;
- (id)init;

@end

@interface XRAnalysisCoreTableViewNarrativePersonality : XRAnalysisCoreTableViewPersonality
{
}

- (BOOL)adjustRowHeightToFitNarratives;
- (BOOL)shouldAddFocusActionToColumn:(id)arg1 abstractContent:(id)arg2;
- (void)personalizeView:(id)arg1 forColumn:(id)arg2;
- (void)personalizeColumnItem:(id)arg1;
- (void)personalizeTableView:(id)arg1;
- (void)personalizeValueFormatter:(id)arg1;

@end

@interface XRCSLoggerHelper : NSObject
{
}

+ (void)logDocumentName:(id)arg1 runIndex:(long long)arg2 processName:(id)arg3 pid:(int)arg4 threadName:(id)arg5 tid:(unsigned long long)arg6 instructionAddress:(unsigned long long)arg7 symbolAddress:(unsigned long long)arg8 symbolName:(id)arg9 libraryName:(id)arg10 kernel:(BOOL)arg11 machTime:(unsigned long long)arg12 symbolicator:(struct _CSTypeRef)arg13 kernelSymbolicator:(struct _CSTypeRef)arg14;
+ (void)logDocumentName:(id)arg1 runIndex:(long long)arg2 processRepository:(id)arg3 commonRawStack:(id)arg4 tid:(unsigned long long)arg5 machTime:(unsigned long long)arg6;
+ (id)menuItemForDetailViewObject:(id)arg1 withSelector:(SEL)arg2 andTarget:(id)arg3;

@end

@interface XRTopicBrowserOutlineView : DVTOutlineView
{
    NSTextFieldCell *_dataCellForGroupRow;
}

- (void).cxx_destruct;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (id)_dataCellForGroupRow;
- (id)_groupRowFont;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;

@end

@interface XRDetailViewBusyModeController : XRNonInteractiveModeViewController
{
    NSProgressIndicator *_progressView;
    NSTextField *_progressText;
}

@property(nonatomic) __weak NSTextField *progressText; // @synthesize progressText=_progressText;
@property(nonatomic) __weak NSProgressIndicator *progressView; // @synthesize progressView=_progressView;
- (void).cxx_destruct;
- (void)_setProgressMessage:(id)arg1 additionalMessage:(id)arg2;
- (void)_setProgressCompletion:(double)arg1;
- (void)viewDidLoad;
- (id)init;

@end

@interface XRAnalysisCoreTableViewRow : NSTableRowView <XRAnalysisCoreTableViewRow>
{
    long long _signature;
    unsigned long long _edgeDecoration;
}

+ (void)copySelectionToPasteboardFromAnalysisCoreTableView:(id)arg1;
@property(nonatomic) unsigned long long edgeDecoration; // @synthesize edgeDecoration=_edgeDecoration;
@property(nonatomic) long long signature; // @synthesize signature=_signature;
- (id)attributedStringValue;
- (void)setSelected:(BOOL)arg1;
- (void)setEmphasized:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)didAddSubview:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRScopeButtonCell : DVTScopeBarButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface XRScopeButton : DVTScopeBarButton
{
}

+ (Class)cellClass;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRScopeBarView : DVTBorderedView
{
    NSView *_lastElement;
    BOOL _lastIsSeparator;
    NSMutableDictionary *_buttonHandlers;
    CDUnknownBlockType _compositionDestructor;
}

+ (id)scopeBarFont;
- (void).cxx_destruct;
- (void)_scopeButtonClicked:(id)arg1;
- (void)removeAllSections;
- (void)addControlsSection:(id)arg1;
- (void)addScopingSection:(id)arg1 options:(int)arg2 configuration:(CDUnknownBlockType)arg3;
- (void)_addSectionSeparator;
- (void)_addControl:(id)arg1;
- (void)_appendDestructorBlock:(CDUnknownBlockType)arg1;
- (void)_registerButton:(id)arg1 inGroup:(id)arg2 options:(int)arg3 withHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface NSWindow (XrayPrivateAPI)
- (void)centerOnScreen;
@end

@interface NSView (PrivateXraySortMethods)
- (void)xray_unbindEnabledToObject:(id)arg1 withKeyPath:(id)arg2 options:(id)arg3;
- (void)xray_bindEnabledToObject:(id)arg1 withKeyPath:(id)arg2 options:(id)arg3;
- (long long)xray_horizontalCompare:(id)arg1;
@end

@interface XRAnalysisCoreHistogramTreatment (Decorators)
- (void)setupPlane:(id)arg1;
- (id)decoratorFromCore:(id)arg1 tableID:(unsigned int)arg2 trace:(id)arg3 runNumber:(long long)arg4 context:(id)arg5;
@end

@interface XRAnalysisCoreValueTreatment (Decorators)
- (void)setupPlane:(id)arg1;
- (id)decoratorFromCore:(id)arg1 tableID:(unsigned int)arg2 trace:(id)arg3 runNumber:(long long)arg4 context:(id)arg5;
@end

@interface NSTextView (SimpleEditing)
- (void)pft_applySimpleEditorSettings;
@end

@interface NSPathCell (xray_Accessibility)
- (id)xray_accessibilityPopUpMenuParent:(id)arg1;
- (id)xray_accessibilityChildMenuForChild:(id)arg1;
- (void)xray_accessibilityPerformPressForChild:(id)arg1;
- (id)xray_accessibilitySizeOfChild:(id)arg1;
- (id)xray_accessibilityPositionOfChild:(id)arg1;
- (struct CGRect)xray_accessibilityScreenRectForPathComponent:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)xray_accessibilityObjectForComponentCell:(id)arg1 atIndex:(unsigned long long)arg2;
@end

@interface XRAnalysisCoreTableQuery (UIPlanFilters)
+ (id)filterWithCore:(id)arg1 schema:(id)arg2 strategyContext:(id)arg3 selectionCriteria:(id)arg4;
@end

@interface NSImage (PrivateAPI)
+ (id)menuImageForApplication:(id)arg1;
+ (id)imageForApplication:(id)arg1;
+ (id)imageForFile:(id)arg1;
+ (id)menuImageForPid:(int)arg1;
+ (id)imageNamed:(id)arg1 forClass:(Class)arg2;
+ (id)imageNamed:(id)arg1 forBundle:(id)arg2;
+ (id)searchBundlesForImageNamed:(id)arg1;
@end

@interface NSError (InstrumentsKit)
+ (id)instrumentsKitEmptyBrushError:(id)arg1;
+ (id)instrumentsKitErrorWithCode:(unsigned long long)arg1;
@end

@interface XRAbstractFileSystem (NSBrowserDelegate)
- (id)browser:(id)arg1 previewViewControllerForLeafItem:(id)arg2;
- (BOOL)browser:(id)arg1 writeRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 toPasteboard:(id)arg4;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@interface NSButton (XRExtensionsForDFR)
+ (id)xr_dfr_buttonWithTitle:(id)arg1 image:(id)arg2 target:(id)arg3 action:(SEL)arg4;
@end


#endif /* InstrumentsKit_framework_h */
