//
//  DTracePlugin.xrplugin.h
//  MacDemo
//
//  Created by szzc on 2016/11/25.
//  Copyright © 2016年 szzc. All rights reserved.
//

#ifndef DTracePlugin_xrplugin_h
#define DTracePlugin_xrplugin_h
//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct BlockStats {
    unsigned long long totalExecTime;
    int usageCount;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct PFTEvent {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct QueueStats {
    unsigned long long latency;
    unsigned long long totalWorktime;
    unsigned int itemCount;
    unsigned int itemsProcessed;
    float cpuUsage;
};

struct XRGraphPoint {
    unsigned long long _field1;
    float _field2;
    void *_field3;
};

struct XRPathAttribute {
    id _field1;
    id _field2;
    double _field3;
    double *_field4;
    double _field5;
    double _field6;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _XRDeviceTimeInfo {
    unsigned long long bootEpoch;
    unsigned long long mach_absolute_start;
    struct mach_timebase_info mach_time_base;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct mach_timebase_info {
    unsigned int numer;
    unsigned int denom;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/PlugIns/DTracePlugin.xrplugin/Contents/MacOS/DTracePlugin
// UUID: 45F939D9-2555-3768-B7F0-409995BB3B08
//
//                           Arch: x86_64
//                 Source version: 61529.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.12.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../../../Frameworks
//                               = /Applications/Xcode.app/Contents/Applications/Instruments.app/Frameworks
//                       Run path: @loader_path/../../../../../../../../SharedFrameworks
//                               = /Applications/Xcode.app/SharedFrameworks
//

@protocol CommonRawStack <NSCoding, NSObject>
- (BOOL)bottomIsTruncated;
- (void)setBottomIsTruncated:(BOOL)arg1;
- (BOOL)topIsTruncated;
- (void)setTopIsTruncated:(BOOL)arg1;
- (int)pid;
- (long long)count;
- (void)enumerateFramesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 block:(void (^)(struct XRCommonFrameInfo *, char *))arg3;

@optional
- (long long)kernelFrameCount;
- (unsigned long long *)frames;
@end

@protocol DVTCompletingTextViewDelegate <NSTextViewDelegate>

@optional
- (NSColor *)textView:(DVTCompletingTextView *)arg1 tokenTintColor:(NSColor *)arg2 forInlineTokenAttachmentCell:(NSTextAttachmentCell *)arg3;
- (long long)textView:(DVTCompletingTextView *)arg1 interiorBackgroundStyle:(long long)arg2 forInlineTokenAttachmentCell:(NSTextAttachmentCell *)arg3;
- (void)setupTextViewContextMenuWithMenu:(NSMenu *)arg1;
- (NSDictionary *)syntaxColoringContextForTextView:(DVTCompletingTextView *)arg1;
- (BOOL)completingTextViewHandleCancel:(DVTCompletingTextView *)arg1;
- (unsigned long long)textView:(DVTCompletingTextView *)arg1 lineEndingForWritingSelectionToPasteboard:(NSPasteboard *)arg2 type:(NSString *)arg3;
- (unsigned long long)textView:(DVTCompletingTextView *)arg1 lineEndingForReadingSelectionFromPasteboard:(NSPasteboard *)arg2 type:(NSString *)arg3;
- (void)textView:(DVTCompletingTextView *)arg1 layoutManager:(NSLayoutManager *)arg2 didLayoutGlyphsUpToCharacterIndex:(unsigned long long)arg3;
- (DVTTextDocumentLocation *)completingTextView:(DVTCompletingTextView *)arg1 documentLocationForWordStartLocation:(unsigned long long)arg2;
- (void)completingTextView:(DVTCompletingTextView *)arg1 willPassContextToStrategies:(NSMutableDictionary *)arg2 atWordStartLocation:(unsigned long long)arg3;
@end

@protocol DVTSourceTextViewDelegate <DVTCompletingTextViewDelegate>

@optional
- (double)textView:(DVTSourceTextView *)arg1 constrainAccessoryAnnotationWidth:(double)arg2;
- (double)textView:(DVTSourceTextView *)arg1 constrainMaxAccessoryAnnotationWidth:(double)arg2;
- (double)textView:(DVTSourceTextView *)arg1 constrainMinAccessoryAnnotationWidth:(double)arg2;
- (id <DVTMediaResourceProvider>)mediaResourceProviderInTextView:(DVTSourceTextView *)arg1;
- (NSArray *)directoriesForLiteralsInTextView:(DVTSourceTextView *)arg1;
- (BOOL)textView:(DVTSourceTextView *)arg1 shouldReadObjectLiteralFromPasteboard:(NSPasteboard *)arg2 type:(NSString *)arg3;
- (void)textView:(DVTSourceTextView *)arg1 objectLiteralStringsForObjects:(NSArray *)arg2 completionBlock:(void (^)(NSArray *, NSError *))arg3;
- (NSString *)textViewWillReturnPrintJobTitle:(DVTSourceTextView *)arg1;
- (void)textViewDidScroll:(DVTSourceTextView *)arg1;
- (void)setupGutterContextMenuWithMenu:(NSMenu *)arg1;
- (void)didEndTokenizedEditingWithRanges:(DVTMutableRangeArray *)arg1;
- (void)willStartTokenizedEditingWithRanges:(DVTMutableRangeArray *)arg1;
- (void)tokenizableRangesWithRange:(struct _NSRange)arg1 completionBlock:(void (^)(NSArray *))arg2;
- (void)textViewDidFinishAnimatingScroll:(DVTSourceTextView *)arg1;
- (void)textViewDidLoadAnnotationProviders:(DVTSourceTextView *)arg1;
- (void)textView:(DVTSourceTextView *)arg1 didRemoveAnnotations:(NSArray *)arg2;
- (void)textView:(DVTSourceTextView *)arg1 didAddAnnotations:(NSArray *)arg2;
- (DVTAnnotationContext *)annotationContextForTextView:(DVTSourceTextView *)arg1;
- (void)textViewDidChangeFolding:(NSNotification *)arg1;
- (void)textViewWillChangeFolding:(NSNotification *)arg1;
- (void)textView:(DVTSourceTextView *)arg1 didClickOnTemporaryLinkAtCharacterIndex:(unsigned long long)arg2 event:(NSEvent *)arg3 isAltEvent:(BOOL)arg4;
- (BOOL)textView:(DVTSourceTextView *)arg1 shouldShowTemporaryLinkForCharacterAtIndex:(unsigned long long)arg2 proposedRange:(struct _NSRange)arg3 effectiveRanges:(id *)arg4;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDidExitSidebar:(NSEvent *)arg2;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDidMoveOverSidebar:(NSEvent *)arg2 atLineNumber:(unsigned long long)arg3;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDownInSidebar:(NSEvent *)arg2 atLineNumber:(unsigned long long)arg3;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldSelectCandidateAtIndex:(unsigned long long)arg2;
- (NSArray *)textView:(NSTextView *)arg1 candidates:(NSArray *)arg2 forSelectedRange:(struct _NSRange)arg3;
- (NSArray *)textView:(NSTextView *)arg1 candidatesForSelectedRange:(struct _NSRange)arg2;
- (NSArray *)textView:(NSTextView *)arg1 shouldUpdateTouchBarItemIdentifiers:(NSArray *)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol XRAnnotationSource
- (void)addAnnotationObserver:(XRAnnotationProvider *)arg1;
@end

@protocol XRBrushDataSource <NSObject>
- (unsigned long long)numberOfGraphsForRun:(XRRun *)arg1;
- (NSString *)graphStyleForRun:(XRRun *)arg1;

@optional
- (BOOL)hasBaselineForRun:(XRRun *)arg1;
- (NSString *)run:(XRRun *)arg1 provideBackgroundTextForInspectionTimeStamp:(unsigned long long)arg2;
- (unsigned long long)supportedGraphTypesForRun:(XRRun *)arg1;
- (BOOL)stackGraphsForRun:(XRRun *)arg1;
- (BOOL)run:(XRRun *)arg1 hasImagesForGraphAtIndex:(long long)arg2;
- (void)run:(XRRun *)arg1 userFocusedOnPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3;
- (long long)run:(XRRun *)arg1 numberOfLabelsForPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3 graphAtIndex:(long long)arg4;
- (void)run:(XRRun *)arg1 provideLabel:(id *)arg2 andLabelPosition:(struct XRGraphPoint *)arg3 forLabelIndex:(long long)arg4 forInspectionTimeStamp:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (BOOL)run:(XRRun *)arg1 graphToCurrentTimeForGraphAtIndex:(long long)arg2;
- (NSString *)graphSummaryForRun:(XRRun *)arg1;
- (NSString *)run:(XRRun *)arg1 pathTypeForState:(unsigned long long)arg2 graphAtIndex:(long long)arg3;
- (struct XRPathAttribute)run:(XRRun *)arg1 attributeForState:(unsigned long long)arg2 graphAtIndex:(long long)arg3;
- (unsigned long long)run:(XRRun *)arg1 stateForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (id)run:(XRRun *)arg1 graphedDataKeypath:(id *)arg2;
- (NSString *)run:(XRRun *)arg1 labelForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSString *)run:(XRRun *)arg1 labelForGraphAtIndex:(long long)arg2;
- (NSImage *)run:(XRRun *)arg1 imageForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSColor *)run:(XRRun *)arg1 colorForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSColor *)run:(XRRun *)arg1 colorForGraphAtIndex:(long long)arg2;
- (void)run:(XRRun *)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 forTimeRange:(struct XRTimeRange)arg4 minimumInterval:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (void)run:(XRRun *)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(XRGraphSequence *)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
@end

@protocol XRDispatchData <NSObject>
+ (int)dataType;
@property BOOL modified;
@property BOOL selected;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)transferEventAtTimestamp:(unsigned long long)arg1;
@end

@protocol XRDispatchEvent
@property int eventIndex;
@property unsigned long long timestamp;
@end

@protocol XRModalEditorViewController <NSObject>
+ (NSViewController<XRModalEditorViewController> *)viewControllerWithExtension:(DVTExtension *)arg1 dataElement:(PFTDataElement *)arg2 instrument:(XRInstrument *)arg3;
- (void)cleanup;
@end

@protocol XRUIStackFrame <NSCoding, NSObject>
- (long long)lineNumberForDisplay;
- (NSString *)pathForDisplay;
- (NSString *)symbolNameForUse;
- (NSString *)symbolNameForDisplay;
- (NSString *)libraryForDisplay;

@optional
- (BOOL)getWeight:(double *)arg1 at:(unsigned long long)arg2;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface XRDTraceTapPlugInToken : NSObject
{
    struct _XRDeviceTimeInfo _deviceTimeInfo;
    NSMutableIndexSet *_dataAndConsoleTableIDs;
    XRAnalysisCoreValue *_reusableThreadVal;
    XRAnalysisCoreValue *_reusableProcessVal;
    XRAnalysisCoreValue *_kernelProcessVal;
    unsigned int _consoleTableID;
    DTTap *_tap;
    DTDTraceTapConfig *_config;
    XRTrace *_trace;
    long long _runNumber;
    NSIndexSet *_tableIDs;
    unsigned long long _lastRecordedTimestamp;
}

@property(nonatomic) unsigned long long lastRecordedTimestamp; // @synthesize lastRecordedTimestamp=_lastRecordedTimestamp;
@property(readonly, nonatomic) unsigned int consoleTableID; // @synthesize consoleTableID=_consoleTableID;
@property(readonly, retain, nonatomic) NSIndexSet *tableIDs; // @synthesize tableIDs=_tableIDs;
@property(readonly, nonatomic) long long runNumber; // @synthesize runNumber=_runNumber;
@property(readonly, retain, nonatomic) XRTrace *trace; // @synthesize trace=_trace;
@property(retain, nonatomic) DTDTraceTapConfig *config; // @synthesize config=_config;
@property(retain, nonatomic) DTTap *tap; // @synthesize tap=_tap;
- (void).cxx_destruct;
- (id)initWithTrace:(id)arg1 withRunNumber:(long long)arg2 withTableIDs:(id)arg3 withConsoleTableID:(unsigned int)arg4 withDeviceTimeInfo:(struct _XRDeviceTimeInfo)arg5;
- (void)_dtraceFatalStatusMessage:(id)arg1;
- (void)_dtraceStatusMessage:(id)arg1;
- (void)handleDTraceStatus:(unsigned int)arg1 timestamp:(unsigned long long)arg2 info:(id)arg3;
- (void)handleDTraceSimpleStackRecord:(id)arg1 core:(id)arg2 bindings:(const struct XRAnalysisCoreTableBindings *)arg3;
- (void)handleDTraceConsoleRecord:(id)arg1 core:(id)arg2 bindings:(const struct XRAnalysisCoreTableBindings *)arg3;
- (void)_dtraceConsoleAddMessage:(id)arg1 timestamp:(unsigned long long)arg2 core:(id)arg3 bindings:(const struct XRAnalysisCoreTableBindings *)arg4;
- (void)handleDTraceEventRecord:(id)arg1 core:(id)arg2 bindings:(const struct XRAnalysisCoreTableBindings *)arg3;
- (void)handleRecordEnumerator:(id)arg1;

@end

@interface XRDispatchBrushSource : NSObject <XRBrushDataSource>
{
    NSString *_brushType;
}

+ (id)validBrushNames;
- (void).cxx_destruct;
- (id)run:(id)arg1 graphedDataKeypath:(id *)arg2;
- (id)graphStyleForRun:(id)arg1;
- (unsigned long long)numberOfGraphsForRun:(id)arg1;
- (void)run:(id)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(id)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
- (id)initWithBrushType:(id)arg1 name:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDispatchQueueEventSource : XRDispatchBrushSource
{
    int _statType;
}

+ (id)validBrushNames;
- (void)run:(id)arg1 userFocusedOnPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3;
- (BOOL)stackGraphsForRun:(id)arg1;
- (id)run:(id)arg1 labelForGraphAtIndex:(long long)arg2;
- (void)run:(id)arg1 provideLabel:(id *)arg2 andLabelPosition:(struct XRGraphPoint *)arg3 forLabelIndex:(long long)arg4 forInspectionTimeStamp:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (BOOL)run:(id)arg1 hasImagesForGraphAtIndex:(long long)arg2;
- (void)run:(id)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(id)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
- (id)run:(id)arg1 graphedDataKeypath:(id *)arg2;
- (unsigned long long)numberOfGraphsForRun:(id)arg1;
- (id)_queueGraphLabel:(float)arg1;
- (float)_queueStatisticToGraph:(id)arg1;
- (id)initWithBrushType:(id)arg1 name:(id)arg2;

@end

@interface XRDispatchBlockEventSource : XRDispatchBrushSource
{
    int _statType;
}

+ (id)validBrushNames;
- (BOOL)stackGraphsForRun:(id)arg1;
- (id)run:(id)arg1 labelForGraphAtIndex:(long long)arg2;
- (void)run:(id)arg1 provideLabel:(id *)arg2 andLabelPosition:(struct XRGraphPoint *)arg3 forLabelIndex:(long long)arg4 forInspectionTimeStamp:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (BOOL)run:(id)arg1 hasImagesForGraphAtIndex:(long long)arg2;
- (void)run:(id)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(id)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
- (id)run:(id)arg1 graphedDataKeypath:(id *)arg2;
- (unsigned long long)numberOfGraphsForRun:(id)arg1;
- (id)_blockGraphLabel:(float)arg1;
- (float)_blockStatisticToGraph:(id)arg1;
- (id)initWithBrushType:(id)arg1 name:(id)arg2;

@end

@interface XRDispatchBlockQueueEventSource : XRDispatchBlockEventSource
{
}

- (void)run:(id)arg1 userFocusedOnPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3;
- (BOOL)stackGraphsForRun:(id)arg1;
- (id)run:(id)arg1 labelForGraphAtIndex:(long long)arg2;
- (void)run:(id)arg1 provideLabel:(id *)arg2 andLabelPosition:(struct XRGraphPoint *)arg3 forLabelIndex:(long long)arg4 forInspectionTimeStamp:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (BOOL)run:(id)arg1 hasImagesForGraphAtIndex:(long long)arg2;
- (void)run:(id)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(id)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
- (id)run:(id)arg1 graphedDataKeypath:(id *)arg2;
- (unsigned long long)numberOfGraphsForRun:(id)arg1;

@end

@interface XRDTraceTapPlugIn : XRTapPlugIn
{
}

+ (id)contentsOfScript:(id)arg1 error:(id *)arg2;
- (unsigned long long)trailingEventHorizonForToken:(id)arg1;
- (void)endRecording:(id)arg1;
- (void)voteForEpoch:(id)arg1 token:(id)arg2;
- (void)stopRecording:(id)arg1;
- (void)unpauseRecording:(id)arg1;
- (void)pauseRecording:(id)arg1;
- (id)startRecordingTableIDs:(id)arg1 runNumber:(long long)arg2 trace:(id)arg3;
- (BOOL)canRecordTableIDs:(id)arg1 runNumber:(long long)arg2 trace:(id)arg3;

@end

@interface PFTDTraceActionPlugIn : XRActionHandler
{
    NSMutableArray *_importers;
    NSMutableArray *_alerts;
}

- (BOOL)validateAction:(id)arg1 targets:(id)arg2 context:(id)arg3;
- (void)didEncounterBadData:(id)arg1;
- (void)didFinishImport:(id)arg1;
- (void)importDTraceData:(id)arg1 withContext:(id)arg2;
- (void)saveAsScriptPanelDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)exportDTraceScript:(id)arg1 withContext:(id)arg2;
- (void)createCallTraceInstrumentWithTargets:(id)arg1 withContext:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface PFTDTraceCallTraceInstrument : PFTDTraceInstrument
{
}

- (id)initWithType:(id)arg1;

@end

@interface XRDTraceThreadsInstrument : PFTDTraceInstrument
{
}

@end

@interface XRDTraceScriptEditorViewController : NSViewController <DVTSourceTextViewDelegate, XRAnnotationSource, XRModalEditorViewController>
{
    PFTDataElement *_scriptElement;
    XRInstrument *_instrument;
    XRAnnotationProvider *_annotationProvider;
    BOOL _syntaxCheckingActive;
    BOOL _syntaxCheckInProgress;
    double _timeOfLastTextModification;
    double _timeOfLastSyntaxCheck;
    DVTSourceTextScrollView *_scriptScrollView;
    DVTSourceTextView *_scriptTextView;
}

+ (id)viewControllerWithExtension:(id)arg1 dataElement:(id)arg2 instrument:(id)arg3;
@property(retain, nonatomic) DVTSourceTextView *scriptTextView; // @synthesize scriptTextView=_scriptTextView;
@property __weak DVTSourceTextScrollView *scriptScrollView; // @synthesize scriptScrollView=_scriptScrollView;
- (void).cxx_destruct;
- (id)annotationContextForTextView:(id)arg1;
- (void)addAnnotationObserver:(id)arg1;
- (void)cleanup;
- (void)setScriptText:(id)arg1;
- (id)scriptText;
- (void)_setUpScriptCheckTimer;
- (void)_performAsyncSyntaxCheckWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)textDidChange:(id)arg1;
- (void)checkScriptButtonWasPressed:(id)arg1;
- (void)doneButtonWasPressed:(id)arg1;
- (void)viewWillDisappear;
- (void)viewDidLoad;
- (void)_setUpTextView;
- (void)_showAnnotations:(struct NSDictionary *)arg1;
- (void)dealloc;
- (id)initWithScriptElement:(id)arg1 instrument:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRBlockEvent : NSObject <NSCoding, XRDispatchEvent>
{
    struct BlockStats *_stat;
    int _eventIndex;
    unsigned long long _timestamp;
}

+ (void)initialize;
@property(readonly) struct BlockStats *stat; // @synthesize stat=_stat;
@property unsigned long long timestamp; // @synthesize timestamp=_timestamp;
@property int eventIndex; // @synthesize eventIndex=_eventIndex;
@property(readonly) unsigned long long averageExecTime; // @dynamic averageExecTime;
- (void)blockExeced;
- (void)blockExecedWithTime:(unsigned long long)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRBlockInvokeEvent : NSObject <NSCoding, XRDispatchEvent>
{
    NSString *_blockName;
    NSString *_blockLibrary;
    NSString *_queueIdentifier;
    unsigned long long _pushTime;
    unsigned long long _execTime;
    unsigned long long _duration;
    id _addStack;
    id _invokeStack;
    int _eventIndex;
    BOOL _sync;
}

+ (void)initialize;
+ (int)dataType;
@property(readonly) NSString *blockLibrary; // @synthesize blockLibrary=_blockLibrary;
@property(readonly) NSString *blockName; // @synthesize blockName=_blockName;
@property(readonly) NSString *queueIdentifier; // @synthesize queueIdentifier=_queueIdentifier;
@property(readonly) BOOL sync; // @synthesize sync=_sync;
@property(readonly) id invokeStack; // @synthesize invokeStack=_invokeStack;
@property(readonly) id addStack; // @synthesize addStack=_addStack;
@property(readonly) unsigned long long pushTime; // @synthesize pushTime=_pushTime;
@property(readonly) unsigned long long execTime; // @synthesize execTime=_execTime;
@property int eventIndex; // @synthesize eventIndex=_eventIndex;
@property unsigned long long duration; // @synthesize duration=_duration;
@property(readonly) NSString *blockSignature; // @dynamic blockSignature;
@property unsigned long long timestamp; // @dynamic timestamp;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithBlockName:(id)arg1 library:(id)arg2 queue:(id)arg3 pushTime:(unsigned long long)arg4 execTime:(unsigned long long)arg5 pushStack:(id)arg6 invokeStack:(id)arg7 sync:(BOOL)arg8;

@end

@interface XRBlockRecord : NSObject <NSCoding, XRDispatchData>
{
    struct BlockStats _displayStats;
    BOOL _selected;
    BOOL _modified;
    struct BlockStats _overallStats;
    NSMutableArray *_blockInvokeEvents;
    NSMutableArray *_blockEvents;
    XRBlockEvent *_currentEvent;
    NSString *_queueIdentifier;
    struct XRTimeRange _timeRange;
    struct __CFDictionary *_invokeStackCounts;
    id _displayMaxInvokeStack;
    id _overallMaxInvokeStack;
    int _overallMaxInvokeStackCount;
    int _displayMaxInvokeStackCount;
}

+ (int)dataType;
@property BOOL modified; // @synthesize modified=_modified;
@property(readonly) NSArray *blockInvokeEvents; // @synthesize blockInvokeEvents=_blockInvokeEvents;
@property(readonly) NSArray *blockEvents; // @synthesize blockEvents=_blockEvents;
@property(readonly) NSString *queueIdentifier; // @synthesize queueIdentifier=_queueIdentifier;
@property BOOL selected; // @synthesize selected=_selected;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)transferEventAtTimestamp:(unsigned long long)arg1;
- (void)blockInvokeComplete:(id)arg1;
- (void)addBlockInvokeEvent:(id)arg1;
- (void)_updateInvokeStackCount:(id)arg1;
@property(readonly) int maxInvokeStackCount; // @dynamic maxInvokeStackCount;
@property(readonly) id maxInvokeStack; // @dynamic maxInvokeStack;
@property(readonly) unsigned long long totalExecTime; // @dynamic totalExecTime;
@property(readonly) int usageCount; // @dynamic usageCount;
@property(readonly) NSString *displayQueuePointer; // @dynamic displayQueuePointer;
@property(readonly) unsigned long long averageExecTime; // @dynamic averageExecTime;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDispatchBlock : XRDispatchObject <NSCoding, XRDispatchData>
{
    NSString *_name;
    NSString *_library;
    NSString *_signature;
    NSString *_displayableName;
    struct XRTimeRange _timeRange;
    struct BlockStats _displayStats;
    BOOL _selected;
    BOOL _modified;
    struct BlockStats _overallStats;
    NSMutableDictionary *_blockRecords;
    NSMutableArray *_blockEvents;
    NSMutableDictionary *_invokedBlocks;
    XRBlockEvent *_currentEvent;
    struct __CFDictionary *_invokeStackCounts;
    id _displayMaxInvokeStack;
    id _overallMaxInvokeStack;
    int _overallMaxInvokeStackCount;
    int _displayMaxInvokeStackCount;
}

+ (id)signatureWithName:(id)arg1 library:(id)arg2;
+ (id)displayableNameWithName:(id)arg1;
+ (int)dataType;
@property(readonly) NSString *displayableName; // @synthesize displayableName=_displayableName;
@property(readonly) NSArray *blockEvents; // @synthesize blockEvents=_blockEvents;
@property BOOL modified; // @synthesize modified=_modified;
@property BOOL selected; // @synthesize selected=_selected;
@property(readonly) NSString *library; // @synthesize library=_library;
@property(readonly) NSString *name; // @synthesize name=_name;
- (id)invokeCompleteOnQueue:(id)arg1 forThread:(id)arg2 duration:(unsigned long long)arg3 cpuUsage:(float)arg4 timestamp:(unsigned long long)arg5;
- (BOOL)invokeBeginOnQueue:(id)arg1 withItem:(id)arg2 forThread:(id)arg3 timestamp:(unsigned long long)arg4;
- (BOOL)pushOnQueue:(id)arg1 stackTrace:(id)arg2 timestamp:(unsigned long long)arg3 iterations:(unsigned long long)arg4 sync:(BOOL)arg5 pending:(BOOL)arg6;
- (BOOL)itemMatch:(id)arg1;
- (id)identifier;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)transferEventAtTimestamp:(unsigned long long)arg1;
- (void)processingComplete;
- (void)drainPendingBlocksWithThread:(id)arg1;
- (id)addBlockInvokeCompleteToQueue:(id)arg1 thread:(id)arg2 duration:(unsigned long long)arg3;
- (void)addBlockInvokeBegin:(id)arg1 thread:(id)arg2;
- (void)_updateInvokeStackCount:(id)arg1 atTimestamp:(unsigned long long)arg2;
- (id)recordForQueue:(id)arg1;
- (id)blockRecords;
@property(readonly) int maxInvokeStackCount; // @dynamic maxInvokeStackCount;
@property(readonly) id maxInvokeStack; // @dynamic maxInvokeStack;
@property(readonly) unsigned long long totalExecTime; // @dynamic totalExecTime;
@property(readonly) int usageCount; // @dynamic usageCount;
@property(readonly) unsigned long long averageExecTime; // @dynamic averageExecTime;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 library:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QueueItem : NSObject
{
    XRDispatchObject *object;
    unsigned long long pushTime;
    unsigned long long invokeTime;
    id addBlockStack;
    BOOL isSync;
    int state;
}

- (void)dealloc;
- (id)initWithObject:(id)arg1 timestamp:(unsigned long long)arg2 stack:(id)arg3 sync:(BOOL)arg4;

@end

@interface XRQueueEvent : NSObject <NSCoding, XRDispatchEvent>
{
    unsigned long long _timestamp;
    struct QueueStats *_stat;
    int _eventIndex;
}

+ (void)initialize;
@property struct QueueStats *stat; // @synthesize stat=_stat;
@property unsigned long long timestamp; // @synthesize timestamp=_timestamp;
@property int eventIndex; // @synthesize eventIndex=_eventIndex;
@property(readonly) unsigned long long latency; // @dynamic latency;
@property(readonly) float throughput; // @dynamic throughput;
- (void)itemProcessedWithLatency:(unsigned long long)arg1;
- (void)itemProcessedWithDuration:(unsigned long long)arg1 cpuUsage:(float)arg2;
- (void)itemAddedToQueue;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithItemCount:(int)arg1;

@end

@interface XRDispatchQueue : XRDispatchObject <NSCoding, XRDispatchData>
{
    NSString *_label;
    NSString *_pointer;
    unsigned long long _creationTime;
    unsigned long long _deletionTime;
    id _createTrace;
    id _deleteTrace;
    struct QueueStats _displayStats;
    unsigned int _width;
    struct QueueStats _overallStats;
    unsigned int _serial;
    NSMutableArray *_queueEvents;
    NSMutableArray *_blockInvokeEvents;
    XRQueueEvent *_currentEvent;
    NSMutableArray *_items;
    NSMutableArray *_pendingItems;
    struct __CFDictionary *_pushStackCounts;
    id _displayMaxPushStack;
    NSString *_displayMaxPushBlock;
    id _overallMaxPushStack;
    NSString *_overallMaxPushBlock;
    int _overallMaxPushCount;
    int _displayMaxPushCount;
    BOOL _selected;
    BOOL _modified;
    BOOL _eventModified;
    unsigned long long _displaySync;
    unsigned long long _overallSync;
    struct XRTimeRange _selectedTimeRange;
    NSString *_identifier;
}

+ (int)serialNumberFromIdentifier:(id)arg1;
+ (id)queuePointerFromIdentifier:(id)arg1;
+ (void)initialize;
+ (int)dataType;
@property unsigned int width; // @synthesize width=_width;
@property(readonly) NSArray *queueEvents; // @synthesize queueEvents=_queueEvents;
@property BOOL selected; // @synthesize selected=_selected;
@property unsigned long long deletionTime; // @synthesize deletionTime=_deletionTime;
@property BOOL modified; // @synthesize modified=_modified;
@property unsigned int serial; // @synthesize serial=_serial;
@property(readonly) unsigned long long creationTime; // @synthesize creationTime=_creationTime;
@property(retain) id deleteTrace; // @synthesize deleteTrace=_deleteTrace;
@property(readonly) NSArray *blockInvokeEvents; // @synthesize blockInvokeEvents=_blockInvokeEvents;
@property(retain) id createTrace; // @synthesize createTrace=_createTrace;
@property(retain) NSString *pointer; // @synthesize pointer=_pointer;
@property(retain) NSString *label; // @synthesize label=_label;
- (void)setCurrentEventModified;
- (id)currentEvent;
- (void)setOverallStats:(struct QueueStats)arg1 atTimestamp:(unsigned long long)arg2;
- (struct QueueStats)overallStats;
- (id)identifier;
- (void)addBlockInvokeEvent:(id)arg1;
- (void)popItemComplete:(id)arg1 forThread:(id)arg2 duration:(unsigned long long)arg3 cpuUsage:(float)arg4 atTimestamp:(unsigned long long)arg5;
- (id)popItemBegin:(id)arg1 forThread:(id)arg2 atTimestamp:(unsigned long long)arg3;
- (BOOL)validatePendingObject:(id)arg1 remove:(BOOL)arg2;
- (void)pushItem:(id)arg1 atTimestamp:(unsigned long long)arg2 stack:(id)arg3 sync:(BOOL)arg4 pending:(BOOL)arg5;
- (void)updatePushStackCount:(id)arg1 forBlock:(id)arg2 atTimestamp:(unsigned long long)arg3;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)transferEventAtTimestampFinal:(unsigned long long)arg1;
- (void)transferEventAtTimestamp:(unsigned long long)arg1;
@property(readonly) int maxPushCount; // @dynamic maxPushCount;
@property(readonly) NSString *maxPushBlock; // @dynamic maxPushBlock;
@property(readonly) id maxPushStack; // @dynamic maxPushStack;
- (void)setSync:(unsigned long long)arg1 atTimestamp:(unsigned long long)arg2;
@property(readonly) unsigned long long sync; // @dynamic sync;
@property(readonly) unsigned long long latency; // @dynamic latency;
@property(readonly) unsigned long long totalWorktime; // @dynamic totalWorktime;
@property(readonly) unsigned int itemsProcessed; // @dynamic itemsProcessed;
@property(readonly) unsigned int itemCount; // @dynamic itemCount;
@property(readonly) NSString *displayPointer; // @dynamic displayPointer;
- (BOOL)isAlive;
@property(readonly) float throughput; // @dynamic throughput;
- (BOOL)isEmpty;
- (void)deleteAtTime:(unsigned long long)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithLabel:(id)arg1 pointer:(id)arg2 timestamp:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDTraceSchema : NSObject
{
    BOOL _collectUserStacks;
    BOOL _collectKernelStacks;
    XRAnalysisCoreTableSchema *_schema;
    NSString *_tableDisplayTitle;
    NSArray *_graphedColumns;
}

@property(nonatomic) BOOL collectKernelStacks; // @synthesize collectKernelStacks=_collectKernelStacks;
@property(nonatomic) BOOL collectUserStacks; // @synthesize collectUserStacks=_collectUserStacks;
@property(copy, nonatomic) NSArray *graphedColumns; // @synthesize graphedColumns=_graphedColumns;
@property(copy, nonatomic) NSString *tableDisplayTitle; // @synthesize tableDisplayTitle=_tableDisplayTitle;
@property(retain, nonatomic) XRAnalysisCoreTableSchema *schema; // @synthesize schema=_schema;
- (void).cxx_destruct;

@end

@interface XRDTraceScriptRewriter : NSObject
{
    NSString *_scriptText;
    NSString *_prefix;
}

- (void).cxx_destruct;
- (id)rewriteEventsWithSchemas:(id)arg1 tableIDs:(id)arg2 maxStackSize:(unsigned long long)arg3 syntaxErrors:(struct NSMutableDictionary *)arg4;
- (id)replacementStringForSchema:(id)arg1 tableID:(id)arg2 maxStackSize:(unsigned long long)arg3;
- (id)readSchemasGettingSyntaxErrors:(struct NSMutableDictionary *)arg1;
- (id)initWithScript:(id)arg1 prefix:(id)arg2;

@end

@interface XRDTraceScriptRewriterForAnalysisCore : XRDTraceScriptRewriter
{
}

- (id)replacementStringForSchema:(id)arg1 tableID:(id)arg2 maxStackSize:(unsigned long long)arg3;
- (id)formatStringForSchema:(id)arg1;

@end

@interface XRDTraceScriptRewriterForConsoleOutput : XRDTraceScriptRewriter
{
}

- (id)replacementStringForSchema:(id)arg1 tableID:(id)arg2 maxStackSize:(unsigned long long)arg3;
- (id)formatStringForSchema:(id)arg1;

@end

@interface XRScriptedDTraceInstrument : XRInstrument
{
    NSArray *_tableSpecs;
    NSDictionary *_addedSchemas;
    struct NSMutableDictionary *_scriptStatusMessages;
    NSString *_schemaPrefix;
}

@property(readonly, copy, nonatomic) NSDictionary *scriptStatusMessages; // @synthesize scriptStatusMessages=_scriptStatusMessages;
@property(readonly, nonatomic) NSString *schemaPrefix; // @synthesize schemaPrefix=_schemaPrefix;
- (void).cxx_destruct;
- (struct NSDictionary *)checkScriptForErrors:(id)arg1;
- (id)userInterfacePlan;
- (void)overrideDynamicTableRequirementsForNextRun:(id)arg1 withAdditionalSchemas:(id)arg2;
- (void)startRecording;
- (void)clearScriptStatusMessages;
- (void)addScriptStatusMessage:(id)arg1;
- (id)initWithType:(id)arg1;

@end

@interface XRDispatchInstrumentDecoratorBars : DTTimelineDecorator
{
    XRDispatchRun *_run;
    unsigned long long _graphIndex;
    int _type;
    unsigned long long _barWidth;
}

- (void).cxx_destruct;
- (id)decorateInspectionRanges:(id)arg1;
- (long long)_blockStatisticToGraph:(id)arg1;
- (long long)_queueStatisticToGraph:(id)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)initWithRun:(id)arg1 graphIndex:(unsigned long long)arg2 type:(int)arg3 barWidth:(unsigned long long)arg4;
- (id)init;

@end

@interface XRDispatchInstrumentDecoratorQueueEvent : XRDispatchInstrumentDecoratorBars
{
}

- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;

@end

@interface XRDispatchInstrumentDecoratorBlockEvent : XRDispatchInstrumentDecoratorBars
{
}

- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;

@end

@interface XRDispatchInstrumentDecoratorBlockQueueEvent : XRDispatchInstrumentDecoratorBars
{
}

- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;

@end

@interface XRDispatchDataController : NSArrayController
{
    id _observableObject;
    NSString *_keyPath;
    NSMutableArray *_selectedObjects;
}

- (BOOL)setSelectedObjects:(id)arg1;
- (BOOL)removeSelectedObjects:(id)arg1;
- (BOOL)addSelectedObjects:(id)arg1;
- (id)selectedData;
- (id)selectedObjects;
- (void)setFilterPredicate:(id)arg1;
- (void)addObject:(id)arg1;
- (void)setContent:(id)arg1;
- (void)_reloadSelectedObjectsWithContent:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unbind:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (void)dealloc;
- (id)init;

@end

@interface XRDispatchRun : PFTDTraceRun
{
    NSMutableDictionary *_allQueues;
    NSDictionary *_globalNoDisplayQueues;
    XRDispatchQueue *_placeholderQueue;
    NSMutableDictionary *_allBlocks;
    NSMutableDictionary *_allSources;
    struct _opaque_pthread_mutex_t _dataLock;
    struct _opaque_pthread_mutex_t _eventsLock;
    NSString *_focusBlock;
    NSString *_focusQueue;
    NSArrayController *_dataController;
    int _currentDataType;
    NSArray *_sortDescriptors;
    NSObject<OS_dispatch_queue> *_eventQueue;
    struct __CFArray *_modifiedData;
    unsigned long long _lastProcessedTimestamp;
}

+ (unsigned long long)lastEventIndexInArray:(id)arg1 relativeToTime:(unsigned long long)arg2;
+ (id)globalDispatchQueues;
+ (void)initialize;
@property unsigned long long lastProcessedTimestamp; // @synthesize lastProcessedTimestamp=_lastProcessedTimestamp;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (id)operation:(id)arg1 commentsForSymbol:(id)arg2 inSourceManager:(id)arg3 callTreeInformation:(id)arg4;
- (id)valueForKey:(id)arg1;
- (void)_setSelectedTimeRange:(struct XRTimeRange)arg1 lock:(BOOL)arg2;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (int)currentDataType;
- (void)setCurrentDataType:(int)arg1 lock:(BOOL)arg2;
- (void)_resetControllerContentWithLock:(BOOL)arg1;
- (id)dispatchEventWithType:(int)arg1 name:(id)arg2 atIndex:(unsigned long long)arg3 lock:(BOOL)arg4;
- (id)dispatchEventsWithType:(int)arg1 name:(id)arg2 inRange:(struct XRTimeRange)arg3 lock:(BOOL)arg4;
- (id)symbolicatedStack:(id)arg1;
- (void)setFocusQueue:(id)arg1;
- (void)setFocusBlock:(id)arg1;
- (id)blockWithSignature:(id)arg1;
- (id)queueWithIdentifier:(id)arg1;
- (void)filterWithPredicate:(id)arg1 columns:(unsigned long long)arg2;
- (void)filterEventsWithStackTokens:(id)arg1 requireAny:(BOOL)arg2;
- (id)symbolNamesForBacktrace:(id)arg1;
- (void)rearrangeDataWithLock:(BOOL)arg1;
- (void)setSortDescriptors:(id)arg1;
- (id)selectedData;
- (void)selectDataAtIndex:(unsigned long long)arg1;
- (void)deselectDataAtIndex:(unsigned long long)arg1;
- (id)filteredDataAtIndex:(unsigned long long)arg1 lock:(BOOL)arg2;
- (unsigned long long)filteredDataCountWithLock:(BOOL)arg1;
- (void)unlockEvents;
- (void)lockEvents;
- (void)unlockData;
- (void)lockData;
- (void)sourceInvokeComplete:(id)arg1 stackTrace:(id)arg2;
- (void)sourceInvokeBegin:(id)arg1 stackTrace:(id)arg2;
- (void)dispatchWakeupComplete:(id)arg1 stackTrace:(id)arg2;
- (void)dispatchWakeupBegin:(id)arg1 stackTrace:(id)arg2;
- (void)setTargetQueue:(id)arg1 stackTrace:(id)arg2;
- (void)sourceCancel:(id)arg1 stackTrace:(id)arg2;
- (void)sourceSetCancelHandler:(id)arg1 stackTrace:(id)arg2;
- (void)sourceLegacySetHandler:(id)arg1 stackTrace:(id)arg2;
- (void)sourceSetHandler:(id)arg1 stackTrace:(id)arg2;
- (void)sourceCreate:(id)arg1 stackTrace:(id)arg2;
- (void)blockInvokeComplete:(id)arg1 stackTrace:(id)arg2;
- (void)blockInvokeBegin:(id)arg1 stackTrace:(id)arg2;
- (void)blockPushSync:(id)arg1 stackTrace:(id)arg2;
- (void)blockPush:(id)arg1 stackTrace:(id)arg2;
- (void)objectPush:(id)arg1 stackTrace:(id)arg2 objectType:(int)arg3 sync:(BOOL)arg4 pending:(BOOL)arg5;
- (void)queueDelete:(id)arg1 stackTrace:(id)arg2;
- (void)globalQueue:(id)arg1 stackTrace:(id)arg2;
- (void)queueCreate:(id)arg1 stackTrace:(id)arg2;
- (void)queueDrain:(id)arg1 stackTrace:(id)arg2;
- (void)tickComplete:(id)arg1 stackTrace:(id)arg2;
- (void)dataProcessingComplete;
- (void)addStackTrace:(id)arg1 forRawEvent:(struct PFTEvent)arg2 dtraceEvent:(id)arg3 symbolicateStack:(BOOL)arg4;
- (void)addRawEvent:(struct PFTEvent)arg1 dtraceEvent:(id)arg2 stackTrace:(id)arg3;
- (void)processEvent:(id)arg1 stackTrace:(id)arg2;
- (void)stopCommand;
- (void)startCommand;
- (void)addStackTrace:(id)arg1 withCategory:(id)arg2 forThread:(unsigned int)arg3 symbolicate:(BOOL)arg4 timestamp:(unsigned long long)arg5;
- (id)lastDispatchObjectWithPointer:(id)arg1;
- (id)dispatchObjectWithIdentifier:(id)arg1;
- (id)lastSourceWithPointer:(id)arg1;
- (id)sourceWithIdentifier:(id)arg1;
- (id)lastQueueWithPointer:(id)arg1;
- (id)_dispatchBlockWithInvokeAddress:(unsigned long long)arg1 lock:(BOOL)arg2;
- (void)_createGlobalQueues;
- (void)_transferEventsToConsumerFinalAtTimestamp:(unsigned long long)arg1;
- (void)_transferEventsToConsumerAtTimestamp:(unsigned long long)arg1;
- (id)_blockWithName:(id)arg1 library:(id)arg2 lock:(BOOL)arg3;
- (id)_createSourceWithPointer:(id)arg1 targetQueue:(id)arg2;
- (id)_createQueueWithName:(id)arg1 queuePointer:(id)arg2 timestamp:(unsigned long long)arg3 lock:(BOOL)arg4;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setInstrument:(id)arg1;
- (void)dealloc;

@end

@interface XRDispatchInstrument : PFTDTraceInstrument
{
    unsigned long long _activeDetailView;
    PFTTableDetailView *_queueView;
    PFTTableDetailView *_blocksView;
    PFTTableDetailView *_blockQueuesView;
    PFTTableDetailView *_blockFocusView;
    NSScrollView *_enclosingScrollView;
    NSMutableArray *_detailViewStack;
    NSString *_focusBlockName;
    NSString *_focusQueueName;
    NSString *_sortedColumnIdentifier;
    unsigned long long _aggregatePeriod;
    unsigned long long _lastDisplayedTimestamp;
}

+ (void)initialize;
@property(readonly) NSString *focusQueue; // @synthesize focusQueue=_focusQueueName;
@property(readonly) NSString *focusBlock; // @synthesize focusBlock=_focusBlockName;
- (void)halfTick:(id)arg1;
- (BOOL)requiresHalfTickNotification;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)addColumnsToDetailView:(id)arg1;
- (void)addColumnsToCallTreeDetailView:(id)arg1;
- (void)addColumnsToBlockFocusView;
- (void)addColumnsToBlockQueuesView;
- (void)addColumnsToBlockView;
- (void)addColumnsToQueueView;
- (void)_pushNextView:(id)arg1;
- (void)selectRowInDetailView:(long long)arg1;
- (void)_selectionDidChange:(id)arg1;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)sortTable:(id)arg1 withColumnIdentifier:(id)arg2 sortDescriptors:(id)arg3;
- (id)sortDescriptorsForBlockFocusView:(id)arg1 ascending:(BOOL)arg2;
- (id)sortDescriptorsForBlockQueuesView:(id)arg1 ascending:(BOOL)arg2;
- (id)sortDescriptorsForBlocksView:(id)arg1 ascending:(BOOL)arg2;
- (id)sortDescriptorsForQueuesView:(id)arg1 ascending:(BOOL)arg2;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (id)searchContexts;
- (void)configureTrack:(id)arg1;
- (id)dataSourceForBrushWithName:(id)arg1;
- (id)brushNames;
- (BOOL)willProvideConfigurationDataElementsForInspector:(id)arg1;
- (id)dataElementsForContext:(id)arg1;
- (void)dataElementsForDetailViewContext:(id)arg1;
- (void)defaultViewSymbolAction:(id)arg1;
- (void)_initializeDetailViews;
- (void)dataElementsForSetupViewContext:(id)arg1;
- (void)dataElementsForNavigationContext:(id)arg1;
- (void)dataElementsForTrackViewSetupContext:(id)arg1;
- (void)dataElementsForConfigurationViewContext:(id)arg1;
- (void)dataElementsForExtendedEventViewContext:(id)arg1;
- (void)_dataElementsForExtendedCallViewContext:(id)arg1;
- (void)_dataElementsForExtendedBlockFocusViewContext:(id)arg1;
- (void)_dataElementsForExtendedBlockQueuesViewContext:(id)arg1;
- (void)_dataElementsForExtendedBlocksViewContext:(id)arg1;
- (void)_dataElementsForExtendedQueuesViewContext:(id)arg1;
- (BOOL)setSelectedRunIndex:(unsigned long long)arg1;
- (unsigned long long)defaultDetailViewType;
- (void)setViewAsCallTree:(BOOL)arg1;
- (BOOL)detailViewRequiresScrollView:(id)arg1;
- (void)setDetailViewStack:(id)arg1;
- (void)setDetailViewType:(unsigned long long)arg1;
- (void)_updateDetailElements;
- (id)detailViewLabelForType:(unsigned long long)arg1;
- (unsigned long long)detailViewType;
- (unsigned long long)detailViewTypeMask;
- (void)updateCurrentDetailView:(BOOL)arg1;
- (id)defaultSortColumnIdentifierForView:(id)arg1;
- (int)currentDataType;
- (id)_currentDetailView;
- (void)stopRecording;
- (void)_startCommand:(id)arg1 instrumentNumber:(int)arg2;
- (void)restoreFromTraceTemplateData:(id)arg1;
- (id)traceTemplateData;
- (void)computeEventDescriptorsWithOutput;
- (id)eventDescriptorsToStringUsingNumberPrefix:(long long)arg1 includeSwitch:(BOOL)arg2 externalTarget:(int)arg3;
- (void)setAggregatePeriod:(unsigned long long)arg1;
- (unsigned long long)aggregatePeriod;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)unobserveStatistics;
- (void)dealloc;
- (id)initWithType:(id)arg1;

@end

@interface XRDispatchSource : XRDispatchObject <NSCoding>
{
    NSString *_pointer;
    NSString *_handler;
    NSString *_cancelHandler;
    NSString *_identifier;
    BOOL _isCancelled;
    NSMutableDictionary *_pendingItems;
    int _serial;
}

@property BOOL isCancelled; // @synthesize isCancelled=_isCancelled;
@property int serial; // @synthesize serial=_serial;
@property(retain) NSString *cancelHandler; // @synthesize cancelHandler=_cancelHandler;
@property(retain) NSString *handler; // @synthesize handler=_handler;
@property(readonly) NSString *pointer; // @synthesize pointer=_pointer;
- (BOOL)itemMatch:(id)arg1;
- (id)identifier;
- (id)invokeCompleteOnQueue:(id)arg1 forThread:(id)arg2 duration:(unsigned long long)arg3 cpuUsage:(float)arg4 timestamp:(unsigned long long)arg5;
- (BOOL)invokeBeginOnQueue:(id)arg1 withItem:(id)arg2 forThread:(id)arg3 timestamp:(unsigned long long)arg4;
- (BOOL)pushOnQueue:(id)arg1 stackTrace:(id)arg2 timestamp:(unsigned long long)arg3 iterations:(unsigned long long)arg4 sync:(BOOL)arg5 pending:(BOOL)arg6;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithPointer:(id)arg1 queueIdentifier:(id)arg2;

@end

@interface XRDispatchObject : NSObject
{
    NSString *_targetQueue;
}

@property(retain) NSString *targetQueue; // @synthesize targetQueue=_targetQueue;
- (id)invokeCompleteOnQueue:(id)arg1 forThread:(id)arg2 duration:(unsigned long long)arg3 cpuUsage:(float)arg4 timestamp:(unsigned long long)arg5;
- (BOOL)invokeBeginOnQueue:(id)arg1 withItem:(id)arg2 forThread:(id)arg3 timestamp:(unsigned long long)arg4;
- (BOOL)itemMatch:(id)arg1;
- (id)identifier;
- (BOOL)pushOnQueue:(id)arg1 stackTrace:(id)arg2 timestamp:(unsigned long long)arg3 iterations:(unsigned long long)arg4 sync:(BOOL)arg5 pending:(BOOL)arg6;
- (void)dealloc;

@end

@interface NSMutableArray (DispatchExtensions)
- (void)addObjectIfUnmodified:(id)arg1;
@end

#endif /* DTracePlugin_xrplugin_h */
