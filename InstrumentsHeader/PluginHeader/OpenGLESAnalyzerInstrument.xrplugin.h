//
//  OpenGLESAnalyzerInstrument.xrplugin.h
//  MacDemo
//
//  Created by szzc on 2016/11/25.
//  Copyright © 2016年 szzc. All rights reserved.
//

#ifndef OpenGLESAnalyzerInstrument_xrplugin_h
#define OpenGLESAnalyzerInstrument_xrplugin_h
//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Argument {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned short _field5;
    unsigned short _field6;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct CoreFunction {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    union {
        unsigned long long _field1;
        unsigned long long _field2;
    } _field5;
    struct Argument _field6;
    struct Argument _field7[16];
    unsigned int _field8;
    unsigned int _field9;
    void *_field10;
    void *_field11;
};

struct Function {
    struct CoreFunction _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
    unsigned short _field5;
    unsigned short _field6;
    int _field7;
    void *_field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    struct Function *_field13;
    void *_field14;
};

struct TraceContainer {
    struct vector<GPUTools::TraceElement, std::__1::allocator<GPUTools::TraceElement>> v;
    unsigned int count;
};

struct TraceElement;

struct XRGraphPoint {
    unsigned long long _field1;
    float _field2;
    void *_field3;
};

struct XRPathAttribute {
    id _field1;
    id _field2;
    double _field3;
    double *_field4;
    double _field5;
    double _field6;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>;

struct dy_timebase {
    struct mach_timebase_info mach_timebase;
    unsigned long long nanoseconds_since_epoch_timestamp;
    unsigned long long mach_timestamp;
};

struct mach_timebase_info {
    unsigned int numer;
    unsigned int denom;
};

struct override_descriptor;

struct platform_overrides {
    struct override_descriptor *_field1;
    unsigned long long _field2;
    id _field3;
};

struct shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>> {
    struct vector<unsigned long long, std::__1::allocator<unsigned long long>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<GPUTools::TraceElement, std::__1::allocator<GPUTools::TraceElement>> {
    struct TraceElement *__begin_;
    struct TraceElement *__end_;
    struct __compressed_pair<GPUTools::TraceElement *, std::__1::allocator<GPUTools::TraceElement>> {
        struct TraceElement *__first_;
    } __end_cap_;
};

struct vector<unsigned long long, std::__1::allocator<unsigned long long>>;

#pragma mark Typedef'd Structures

// Template types
typedef struct shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>> {
    struct vector<unsigned long long, std::__1::allocator<unsigned long long>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_97dceaa7;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/PlugIns/OpenGLESAnalyzerInstrument.xrplugin/Contents/MacOS/OpenGLESAnalyzerInstrument
// UUID: 472D27C5-2957-365F-8A2B-0B8B8FDB6337
//
//                           Arch: x86_64
//                 Source version: 21501.0.0.0.0
//       Minimum Mac OS X version: 10.11.0
//                    SDK version: 10.12.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../../../../../Developer/Platforms/iPhoneOS.platform/Developer/Library/PrivateFrameworks
//                               = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Library/PrivateFrameworks
//

@protocol DYFunctionTracerDelegate <NSObject>

@optional
- (NSString *)generateArrayVariable:(NSString *)arg1 ForArgument:(const struct Argument *)arg2;
- (NSString *)unloadStringForURL:(NSString *)arg1;
- (NSString *)loadStringForURL:(NSString *)arg1 variableName:(NSString *)arg2 bufferType:(NSString *)arg3;
- (NSMutableArray *)constructTraceLinesWithFunction:(const struct Function *)arg1 arguments:(NSArray *)arg2;
- (NSMutableString *)constructTraceLineWithFunction:(const struct Function *)arg1 arguments:(NSArray *)arg2;
- (NSString *)typeStringForArgumentType:(unsigned int)arg1;
- (NSString *)rewriteVariable:(const char *)arg1 receiver:(unsigned long long)arg2;
- (NSString *)rewriteArgument:(const struct Argument *)arg1;
- (NSString *)getCastForArgument:(const struct Argument *)arg1 inFunction:(const struct Function *)arg2;
- (NSString *)createArgument:(const struct Argument *)arg1 forFunction:(const struct Function *)arg2 withValue:(NSString *)arg3;
- (NSString *)rewriteReceiver:(unsigned long long)arg1;
- (NSString *)rewriteURL:(const char *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldSelectCandidateAtIndex:(unsigned long long)arg2;
- (NSArray *)textView:(NSTextView *)arg1 candidates:(NSArray *)arg2 forSelectedRange:(struct _NSRange)arg3;
- (NSArray *)textView:(NSTextView *)arg1 candidatesForSelectedRange:(struct _NSRange)arg2;
- (NSArray *)textView:(NSTextView *)arg1 shouldUpdateTouchBarItemIdentifiers:(NSArray *)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol SymbolAwareRun <NSObject>
- (XRBacktraceRepository *)backtraceRepository;
@end

@protocol XRBrushDataSource <NSObject>
- (unsigned long long)numberOfGraphsForRun:(XRRun *)arg1;
- (NSString *)graphStyleForRun:(XRRun *)arg1;

@optional
- (BOOL)hasBaselineForRun:(XRRun *)arg1;
- (NSString *)run:(XRRun *)arg1 provideBackgroundTextForInspectionTimeStamp:(unsigned long long)arg2;
- (unsigned long long)supportedGraphTypesForRun:(XRRun *)arg1;
- (BOOL)stackGraphsForRun:(XRRun *)arg1;
- (BOOL)run:(XRRun *)arg1 hasImagesForGraphAtIndex:(long long)arg2;
- (void)run:(XRRun *)arg1 userFocusedOnPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3;
- (long long)run:(XRRun *)arg1 numberOfLabelsForPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3 graphAtIndex:(long long)arg4;
- (void)run:(XRRun *)arg1 provideLabel:(id *)arg2 andLabelPosition:(struct XRGraphPoint *)arg3 forLabelIndex:(long long)arg4 forInspectionTimeStamp:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (BOOL)run:(XRRun *)arg1 graphToCurrentTimeForGraphAtIndex:(long long)arg2;
- (NSString *)graphSummaryForRun:(XRRun *)arg1;
- (NSString *)run:(XRRun *)arg1 pathTypeForState:(unsigned long long)arg2 graphAtIndex:(long long)arg3;
- (struct XRPathAttribute)run:(XRRun *)arg1 attributeForState:(unsigned long long)arg2 graphAtIndex:(long long)arg3;
- (unsigned long long)run:(XRRun *)arg1 stateForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (id)run:(XRRun *)arg1 graphedDataKeypath:(id *)arg2;
- (NSString *)run:(XRRun *)arg1 labelForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSString *)run:(XRRun *)arg1 labelForGraphAtIndex:(long long)arg2;
- (NSImage *)run:(XRRun *)arg1 imageForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSColor *)run:(XRRun *)arg1 colorForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSColor *)run:(XRRun *)arg1 colorForGraphAtIndex:(long long)arg2;
- (void)run:(XRRun *)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 forTimeRange:(struct XRTimeRange)arg4 minimumInterval:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (void)run:(XRRun *)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(XRGraphSequence *)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
@end

@protocol XRFilteredDataSource <NSObject>

@optional
- (NSString *)selectedSearchContext;
- (NSArray *)searchContexts;
- (void)filterDetailWithTokens:(NSArray *)arg1 context:(NSString *)arg2 matchesAny:(BOOL)arg3;
@end

@protocol XRSourceQuery
- (NSArray *)operation:(NSOperation *)arg1 commentsForSymbol:(id <CommonSymbol>)arg2 inSourceManager:(XRCodeManager *)arg3 callTreeInformation:(XRCallTreeInformation *)arg4;

@optional
- (NSArray *)operation:(NSOperation *)arg1 commentsForSymbol:(id <CommonSymbol>)arg2 forProcess:(int)arg3 inSourceManager:(XRCodeManager *)arg4 callTreeInformation:(XRCallTreeInformation *)arg5;
- (NSNumber *)sourceQueriesMustRunOnMainThread;
@end

@interface OGLASample : NSObject <NSCoding>
{
    unsigned long long _coderVersion;
    unsigned long long _timestamp;
    unsigned long long _duration;
    unsigned long long _contextID;
}

@property(nonatomic) unsigned long long contextID; // @synthesize contextID=_contextID;
@property(nonatomic) unsigned long long duration; // @synthesize duration=_duration;
@property(nonatomic) unsigned long long timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) unsigned long long coderVersion; // @synthesize coderVersion=_coderVersion;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface OGLATraceSample : OGLASample
{
    unsigned int _fenum;
    unsigned int _functionFlags;
    unsigned int _index;
    id <CommonRawStack> _backtrace;
    NSString *_traceline;
    unsigned long long _threadID;
    unsigned long long _gcdQueueID;
}

@property(nonatomic) unsigned long long gcdQueueID; // @synthesize gcdQueueID=_gcdQueueID;
@property(nonatomic) unsigned long long threadID; // @synthesize threadID=_threadID;
@property(nonatomic) unsigned int index; // @synthesize index=_index;
@property(nonatomic) unsigned int functionFlags; // @synthesize functionFlags=_functionFlags;
@property(nonatomic) unsigned int fenum; // @synthesize fenum=_fenum;
@property(retain, nonatomic) NSString *traceline; // @synthesize traceline=_traceline;
@property(retain, nonatomic) id <CommonRawStack> backtrace; // @synthesize backtrace=_backtrace;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface OGLAFindingBaseSample : OGLASample
{
    unsigned int _occurrences;
    DYAnalyzerFinding *_finding;
}

@property(nonatomic) unsigned int occurrences; // @synthesize occurrences=_occurrences;
@property(retain, nonatomic) DYAnalyzerFinding *finding; // @synthesize finding=_finding;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *details;
@property(readonly, nonatomic) NSString *synopsis;
@property(readonly, nonatomic) NSString *category;
@property(readonly, nonatomic) int warningLevel;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface OGLAFindingSample : OGLAFindingBaseSample
{
    OGLAFlag *_flag;
    OGLATraceSample *_responsibleCommand;
}

@property(retain, nonatomic) OGLATraceSample *responsibleCommand; // @synthesize responsibleCommand=_responsibleCommand;
@property(nonatomic) __weak OGLAFlag *flag; // @synthesize flag=_flag;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long traceLineCount;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface OGLAFindingCategory : OGLAFindingBaseSample
{
    unsigned int _uniqueOccurrences;
    unsigned int _representativeOccurances;
}

@property(nonatomic) unsigned int representativeOccurances; // @synthesize representativeOccurances=_representativeOccurances;
@property(nonatomic) unsigned int uniqueOccurrences; // @synthesize uniqueOccurrences=_uniqueOccurrences;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface OGLAFrameStatsSample : OGLASample
{
    unsigned int _frameNum;
    unsigned int _drawCallNum;
    unsigned int _granularity;
    unsigned int _numPointsRendered;
    unsigned int _numLinesRendered;
    unsigned int _numTrianglesRendered;
    unsigned int _numDrawCalls;
    unsigned int _numEnables;
    unsigned int _numDisables;
    unsigned int _numGLCalls;
    unsigned int _numPlatformCalls;
    unsigned int _numTexUploaded;
    unsigned int _texMemUploaded;
    unsigned int _redundantStateFuncCount;
    unsigned int _numGLAndPlatformCalls;
    unsigned int _numRenderPasses;
    unsigned int _numTexLoads;
    unsigned int _numFlushes;
}

@property(nonatomic) unsigned int numFlushes; // @synthesize numFlushes=_numFlushes;
@property(nonatomic) unsigned int numTexLoads; // @synthesize numTexLoads=_numTexLoads;
@property(nonatomic) unsigned int numRenderPasses; // @synthesize numRenderPasses=_numRenderPasses;
@property(nonatomic) unsigned int numGLAndPlatformCalls; // @synthesize numGLAndPlatformCalls=_numGLAndPlatformCalls;
@property(nonatomic) unsigned int redundantStateFuncCount; // @synthesize redundantStateFuncCount=_redundantStateFuncCount;
@property(nonatomic) unsigned int texMemUploaded; // @synthesize texMemUploaded=_texMemUploaded;
@property(nonatomic) unsigned int numTexUploaded; // @synthesize numTexUploaded=_numTexUploaded;
@property(nonatomic) unsigned int numPlatformCalls; // @synthesize numPlatformCalls=_numPlatformCalls;
@property(nonatomic) unsigned int numGLCalls; // @synthesize numGLCalls=_numGLCalls;
@property(nonatomic) unsigned int numDisables; // @synthesize numDisables=_numDisables;
@property(nonatomic) unsigned int numEnables; // @synthesize numEnables=_numEnables;
@property(nonatomic) unsigned int numDrawCalls; // @synthesize numDrawCalls=_numDrawCalls;
@property(nonatomic) unsigned int numTrianglesRendered; // @synthesize numTrianglesRendered=_numTrianglesRendered;
@property(nonatomic) unsigned int numLinesRendered; // @synthesize numLinesRendered=_numLinesRendered;
@property(nonatomic) unsigned int numPointsRendered; // @synthesize numPointsRendered=_numPointsRendered;
@property(nonatomic) unsigned int granularity; // @synthesize granularity=_granularity;
@property(nonatomic) unsigned int drawCallNum; // @synthesize drawCallNum=_drawCallNum;
@property(nonatomic) unsigned int frameNum; // @synthesize frameNum=_frameNum;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface OGLAAPIStatsSample : NSObject <NSCoding>
{
    unsigned long long _count;
    unsigned long long _totalTime;
    double _averageCPUTime;
    NSString *_traceline;
}

@property(retain, nonatomic) NSString *traceline; // @synthesize traceline=_traceline;
@property(nonatomic) double averageCPUTime; // @synthesize averageCPUTime=_averageCPUTime;
@property(nonatomic) unsigned long long totalTime; // @synthesize totalTime=_totalTime;
@property(nonatomic) unsigned long long count; // @synthesize count=_count;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface OGLAUniqueFindingPredicate : NSObject
{
    shared_ptr_97dceaa7 addresses;
    NSString *kind;
    OGLAFindingSample *findingSample;
    unsigned long long _hash;
}

@property(retain, nonatomic) OGLAFindingSample *findingSample; // @synthesize findingSample;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithKind:(id)arg1 addresses:(shared_ptr_97dceaa7)arg2;

@end

@interface OGLAFlag : XRTimeFlag <NSCoding>
{
    OGLAInstrument *_instrument;
    NSString *_instrumentUUID;
    OGLAFindingSample *_sample;
}

- (void).cxx_destruct;
- (void)_showFinding:(id)arg1;
- (id)_instrument;
- (id)dataElementsForContext:(id)arg1;
- (id)detailedSummary;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 finding:(id)arg2 instrument:(id)arg3;

@end

@interface DYNoContextMenuTableDetailView : PFTTableDetailView
{
}

- (void)setupContextMenuForColumns;

@end

@interface OGLAInstrument : XRLegacyInstrument <XRFilteredDataSource, NSTableViewDataSource, NSTableViewDelegate>
{
    DYGLGuestAppSession *_newRecordingSession;
    NSScrollView *_enclosingScrollView;
    PFTTableDetailView *_traceListView;
    PFTTableDetailView *_findingsCategoriesListView;
    PFTTableDetailView *_findingsFocusListView;
    PFTTableDetailView *_statsListView;
    PFTTableDetailView *_apiStatsTableView;
    XRCallTreeDetailView *_callTreeView;
    NSView *_findingsNotAvailableView;
    NSImage *_greenImage;
    NSImage *_redImage;
    NSImage *_orangeImage;
    NSMutableArray *_topLevelContexts;
    XRContext *_traceContext;
    XRContext *_expertContext;
    XRContext *_findingsCategoriesContext;
    NSMutableDictionary *_findingsFocusContextsMap;
    XRContext *_statsContext;
    XRContext *_apiStatsContext;
    XRContext *_callTreesContext;
    XRContext *_highlightedTraceContext;
    NSIndexSet *_highlightedTraceRows;
    NSIndexSet *_displayedTraceRows;
    BOOL _traceViewInverted;
    NSString *_findingsCategory;
    NSArrayController *_findingsFocusedCategoryArrayController;
    NSMutableDictionary *graphSettings;
    NSMutableArray *enabledGraphs;
    NSTimer *_refreshTimer;
    unsigned long long _refreshTimestamp;
    unsigned long long _refreshFrameStatsIndex;
    unsigned long long _latestTraceBufferTimestamp;
    int _overrideIndex;
    BOOL _hasDisplayedOverrideUsageWarning;
    long long frameNavigatorCurrentFrame;
    long long frameNavigatorMaxFrame;
    BOOL frameNavigatorEnabled;
    NSString *_filterContext;
    NSArray *_filterTokens;
    BOOL _filterImplicitOr;
    BOOL hasSelectedTimeRangeSubset;
    int _disableInspectionTimeSynchronization;
}

+ (id)localizedStringForKey:(id)arg1;
+ (void)initialize;
@property(nonatomic) BOOL frameNavigatorEnabled; // @synthesize frameNavigatorEnabled;
@property(nonatomic) long long frameNavigatorMaxFrame; // @synthesize frameNavigatorMaxFrame;
@property(nonatomic) long long frameNavigatorCurrentFrame; // @synthesize frameNavigatorCurrentFrame;
@property(readonly, nonatomic) NSMutableArray *enabledGraphs; // @synthesize enabledGraphs;
@property(readonly, nonatomic) NSMutableDictionary *graphSettings; // @synthesize graphSettings;
- (void).cxx_destruct;
- (void)stopRecording;
- (void)willEndCommand:(id)arg1;
- (void)startRecording;
- (void)_refreshDetailViewAndGraphsTimer:(id)arg1;
- (void)_refreshDetailViewAndGraphs:(id)arg1;
- (void)prepareToRecord;
- (BOOL)verifyEnvironment:(id)arg1 arguments:(id)arg2 instruments:(id)arg3 error:(id *)arg4;
- (BOOL)configureEnvironment:(id)arg1 arguments:(id)arg2 instruments:(id)arg3 error:(id *)arg4;
- (void)_invalidateNewRecordingSession;
- (id)selectedSearchContext;
- (id)searchContexts;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)_actuallySetSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)trackFocusedOnEventAtTime:(unsigned long long)arg1;
- (void)configureTrack:(id)arg1;
- (id)dataSourceForBrushWithName:(id)arg1;
- (void)_handleGraphSettingChange:(id)arg1 object:(id)arg2 change:(id)arg3;
- (void)_loadGraphingSettings;
- (void)_unobserveGraphSettings;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)_reloadTraceTableInvertingSelection:(BOOL)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)imageForSeverityLevel:(int)arg1;
- (id)dataMiningMenu;
- (BOOL)supportsDataMining;
- (struct XRTimeRange)_frameNavigatorTimeRange;
- (void)setEnabledOverrideIndex:(int)arg1;
- (int)enabledOverrideIndex;
- (struct platform_overrides *)_platformOverridesForCurrentDevice;
- (id)dataElementsForContext:(id)arg1;
- (id)detailElementsForExtendedDetailViewContext;
- (id)detailElementsForConfigurationViewContext;
- (id)configurationDataElementsForInspector:(id)arg1;
- (BOOL)willProvideConfigurationDataElementsForInspector:(id)arg1;
- (id)detailElementsForSetupViewContext;
- (id)_findingsNotAvailableView;
- (id)_callTreeView;
- (void)_updateExtendedDetailViewContext:(id)arg1;
- (id)_apiStatsTableView;
- (id)_findingsFocusListView;
- (id)_findingsCategoriesListView;
- (id)_traceListView;
- (id)_statsListView;
- (void)addColumnsToCallTreeDetailView:(id)arg1;
- (void)addColumnsToDetailView:(id)arg1;
- (void)displayFindingSample:(id)arg1;
- (void)_pushFindingResponsibleCommandAction:(id)arg1;
- (void)_pushFindingTracelinesAction:(id)arg1;
- (BOOL)_pushFindingTracelines:(id)arg1 outFindingSample:(id *)arg2;
- (void)_pushFindingCategoryAction:(id)arg1;
- (void)_pushFindingCategory:(id)arg1 label:(id)arg2;
- (void)updateCurrentDetailView;
- (id)iconForContext:(id)arg1;
- (id)siblingsForContext:(id)arg1;
- (void)displayContext:(id)arg1;
- (id)viewForContext:(id)arg1;
- (id)contextRepresentation;
- (void)_initializeXRContexts;
- (id)_targetGDTMobileDevice;
- (BOOL)hasCustomStateDisplayDescription;
- (void)setTargetDevice:(id)arg1;
- (void)resetTargetDeviceProperties;
- (void)setTargetType:(int)arg1;
- (void)_refreshAllDeviceDependentElements;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithExtension:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OGLARunAnalyzer : NSObject <DYFunctionTracerDelegate>
{
    struct dy_timebase app_timebase;
    struct dispatch_queue_s *_queue;
    OGLARun *run;
    DYAnalyzerEngine *analyzer_engine;
    DYGLFunctionTracer *tracer;
    XRBacktraceRepository *br;
    UniquingTable *uniquing_table;
    CDUnknownFunctionPointerType convert_timestamp;
    long long device_time_drift;
    unsigned long long run_start_timestamp;
    unsigned int trace_index;
    int target_pid;
}

- (void).cxx_destruct;
- (id)rewriteVariable:(const char *)arg1 receiver:(unsigned long long)arg2;
- (void)processFunctionStream:(id)arg1;
- (void)_handleAnalyzerFinding:(id)arg1;
- (id)_traceSampleFromFunction:(const struct Function *)arg1;
- (void)setup:(id)arg1;
- (void)dealloc;
- (id)initWithSession:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OGLARun : XRRun <SymbolAwareRun, XRSourceQuery>
{
    struct dispatch_queue_s *_queue;
    DYGLGuestAppSession *_session;
    struct TraceContainer _trace_container;
    struct unordered_map<int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::objc_wrapper<OGLAAPIStatsSample *>>>> _api_stats;
    NSMutableDictionary *findingsCategoryControllersMap;
    NSMutableDictionary *findingCategories;
    NSMutableSet *uniqueFindings;
    NSMutableArray *statsArray;
    NSMutableArray *filteredAPIStatsArray;
    NSArrayController *findingsCategoryController;
    NSArrayController *statsController;
    NSArrayController *apiStatsController;
    NSMutableArray *filteredTraceSamples;
    struct XRTimeRange traceFilterTimeRange;
    NSIndexSet *traceFilterIndices;
    NSMutableArray *traceFilterTokens;
    BOOL traceFilterTokensAny;
    XRBacktraceRepository *backtraceRepository;
    NSMutableDictionary *_contextInfoDict;
    int _traceLock;
    int _otherDataLock;
    OGLASample *_cmpSample;
    BOOL _analyzerProcessingCanceled;
    long long _amortizedAnalyzerProcessingTracelinesProcessed;
    long long _amortizedAnalyzerProcessingEstimatedTotalTracelines;
    long long _analyzerProcessingTracelinesProcessed;
    long long _analyzerProcessingEstimatedTotalTracelines;
    NSString *_deviceOSVersionString;
    int _runCoderVersionNumber;
    BOOL finalized;
}

+ (unsigned long long)timeOfSample:(id)arg1;
+ (id)_newArrayControllerWithArray:(id)arg1;
+ (id)colorForSeverityLevel:(int)arg1;
@property(readonly, nonatomic) int runCoderVersionNumber; // @synthesize runCoderVersionNumber=_runCoderVersionNumber;
@property(readonly, nonatomic) NSString *deviceOSVersionString; // @synthesize deviceOSVersionString=_deviceOSVersionString;
@property(readonly, nonatomic) BOOL finalized; // @synthesize finalized;
@property(nonatomic) long long analyzerProcessingEstimatedTotalTracelines; // @synthesize analyzerProcessingEstimatedTotalTracelines=_analyzerProcessingEstimatedTotalTracelines;
@property(nonatomic) long long analyzerProcessingTracelinesProcessed; // @synthesize analyzerProcessingTracelinesProcessed=_analyzerProcessingTracelinesProcessed;
@property(nonatomic) long long amortizedAnalyzerProcessingEstimatedTotalTracelines; // @synthesize amortizedAnalyzerProcessingEstimatedTotalTracelines=_amortizedAnalyzerProcessingEstimatedTotalTracelines;
@property(nonatomic) long long amortizedAnalyzerProcessingTracelinesProcessed; // @synthesize amortizedAnalyzerProcessingTracelinesProcessed=_amortizedAnalyzerProcessingTracelinesProcessed;
@property(nonatomic) BOOL analyzerProcessingCanceled; // @synthesize analyzerProcessingCanceled=_analyzerProcessingCanceled;
@property(retain, nonatomic) XRBacktraceRepository *backtraceRepository; // @synthesize backtraceRepository;
@property(retain, nonatomic) NSMutableSet *uniqueFindings; // @synthesize uniqueFindings;
@property(retain, nonatomic) NSArrayController *apiStatsController; // @synthesize apiStatsController;
@property(retain, nonatomic) NSArrayController *statsController; // @synthesize statsController;
@property(retain, nonatomic) NSArrayController *findingsCategoryController; // @synthesize findingsCategoryController;
@property(retain, nonatomic) DYGLGuestAppSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) struct dispatch_queue_s *queue; // @synthesize queue=_queue;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)operation:(id)arg1 commentsForSymbol:(id)arg2 inSourceManager:(id)arg3 callTreeInformation:(id)arg4;
- (void)filterTraceWithTokens:(id)arg1 any:(BOOL)arg2;
- (void)filterTraceWithIndexSet:(id)arg1;
- (void)filterWithTimeRange:(struct XRTimeRange)arg1;
- (void)_applyTraceFilters;
- (void)applySortDescriptors:(id)arg1 controller:(id)arg2;
- (id)mostRecentSamplefromController:(id)arg1;
- (id)valueForSampleKey:(id)arg1 atIndex:(unsigned long long)arg2 filtered:(BOOL)arg3 controller:(id)arg4;
- (unsigned long long)indexOfSample:(id)arg1 filtered:(BOOL)arg2 controller:(id)arg3;
- (unsigned long long)_indexOfSamplePrelocked:(id)arg1 filtered:(BOOL)arg2 controller:(id)arg3;
- (unsigned long long)indexOfTraceSample:(id)arg1 filtered:(BOOL)arg2;
- (id)samplesInclusiveOfTimeRange:(struct XRTimeRange)arg1 controller:(id)arg2;
- (id)samplesInTimeRange:(struct XRTimeRange)arg1 controller:(id)arg2;
- (id)samplesInTimeRange:(struct XRTimeRange)arg1 controller:(id)arg2 inclusiveOfRange:(BOOL)arg3;
- (id)traceItemsInTimeRange:(struct XRTimeRange)arg1;
- (unsigned long long)indexOfSampleAtTime:(unsigned long long)arg1 filtered:(BOOL)arg2 controller:(id)arg3;
- (unsigned long long)indexOfTraceItemAtTime:(unsigned long long)arg1 filtered:(BOOL)arg2;
- (id)sampleAtIndex:(unsigned long long)arg1 filtered:(BOOL)arg2 controller:(id)arg3;
- (id)_sampleAtIndexPrelocked:(unsigned long long)arg1 filtered:(BOOL)arg2 controller:(id)arg3;
- (id)traceItemAtIndex:(unsigned long long)arg1 filtered:(BOOL)arg2;
- (unsigned long long)sampleCount:(BOOL)arg1 controller:(id)arg2;
- (void)addStatisticsFromArray:(id)arg1;
- (void)addStatistic:(id)arg1;
- (void)updateFindingCategoryAndFlagWithFindingSample:(id)arg1;
- (void)addFinding:(id)arg1;
- (unsigned long long)traceItemCount:(BOOL)arg1;
- (void)addTraceItems:(id)arg1;
- (void)_computeAPIStatistics;
- (id)controllerForFindingCategory:(id)arg1;
- (void)runBlockWhileLocked:(CDUnknownBlockType)arg1;
- (void)finalizeRun;
- (void)updateAmortizedAnalysisStats;
- (void)updateContextsInfo:(id)arg1;
- (id)contextInfoForContextID:(unsigned long long)arg1;
- (id)repositoryForCallTrees;
- (void)setTargetDevice:(id)arg1 pid:(int)arg2;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)_commonInitPost;
- (void)_commonInitPre;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OGLAInstrumentBlockDecorator : DTTimelineDecorator
{
    OGLARun *_run;
    unsigned long long _graphIndex;
    BOOL _trackVerbose;
}

- (void).cxx_destruct;
- (id)decorateInspectionRanges:(id)arg1;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (id)_graphSettingsForRun:(id)arg1 index:(unsigned long long)arg2 outGraphIdentifier:(id *)arg3;
- (void)setDefaultsForPlane:(id)arg1;
- (void)dealloc;
- (id)initWithRun:(id)arg1 graphIndex:(unsigned long long)arg2;

@end

@interface OGLATableDescriptor : NSObject
{
}

- (unsigned long long)alignmentForColumn:(id)arg1;
@property(readonly, nonatomic) NSArray *columnTitles;
@property(readonly, nonatomic) NSArray *columnIdentifiers;

@end

@interface OGLAFindingCategoriesTableDescriptor : OGLATableDescriptor
{
}

- (id)description;
- (unsigned long long)alignmentForColumn:(id)arg1;
- (id)columnTitles;
- (id)columnIdentifiers;

@end

@interface OGLAFindingFocusTableDescriptor : OGLATableDescriptor
{
}

- (id)description;
- (unsigned long long)alignmentForColumn:(id)arg1;
- (id)columnTitles;
- (id)columnIdentifiers;

@end

@interface OGLAAPIStatisticsTableDescriptor : OGLATableDescriptor
{
}

- (id)description;
- (unsigned long long)alignmentForColumn:(id)arg1;
- (id)columnTitles;
- (id)columnIdentifiers;

@end

@interface OGLAFrameStatisticsTableDescriptor : OGLATableDescriptor
{
}

- (id)description;
- (id)columnTitles;
- (id)columnIdentifiers;

@end

@interface OGLASmallSetHexNumberFormatter : NSNumberFormatter
{
    NSMutableDictionary *_stringDict;
}

- (void).cxx_destruct;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (id)init;

@end

@interface OGLATrackDataSource : NSObject <XRBrushDataSource>
{
    NSString *_brushType;
}

- (void).cxx_destruct;
- (void)run:(id)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(id)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
- (void)run:(id)arg1 provideLabel:(id *)arg2 andLabelPosition:(struct XRGraphPoint *)arg3 forLabelIndex:(long long)arg4 forInspectionTimeStamp:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (id)run:(id)arg1 provideBackgroundTextForInspectionTimeStamp:(unsigned long long)arg2;
- (id)run:(id)arg1 imageForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (BOOL)run:(id)arg1 hasImagesForGraphAtIndex:(long long)arg2;
- (void)run:(id)arg1 userFocusedOnPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3;
- (id)run:(id)arg1 labelForGraphAtIndex:(long long)arg2;
- (BOOL)stackGraphsForRun:(id)arg1;
- (id)run:(id)arg1 colorForGraphAtIndex:(long long)arg2;
- (unsigned long long)numberOfGraphsForRun:(id)arg1;
- (id)run:(id)arg1 graphedDataKeypath:(id *)arg2;
- (id)graphStyleForRun:(id)arg1;
- (id)_graphSettingsForRun:(id)arg1 index:(unsigned long long)arg2 outGraphIdentifier:(id *)arg3;
- (id)initWithBrushType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OGLAFrameNavigatorElement : PFTDataElement
{
    NSSegmentedControl *_navigationSegmentedControl;
    NSTextField *_frameIndexField;
    long long _maxFrame;
}

- (void).cxx_destruct;
- (void)_arrowClicked:(id)arg1;
- (id)createView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_updateNavigationSegmentedControl;
- (void)_setFrameIndex:(long long)arg1;
- (long long)_currentFrameIndex;
- (void)unbindTarget;

@end

@interface OGLAAutoLayoutResizingView : NSView <NSTextViewDelegate>
{
    NSTextField *_textField;
}

@property(retain, nonatomic) NSTextField *textField; // @synthesize textField=_textField;
- (void).cxx_destruct;
- (void)layout;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OGLAAttributedStringElement : PFTDataElement
{
}

- (id)createView;
- (void)unbindTarget;

@end

@interface OGLAAnalyzerProcessingElement : PFTDataElement
{
    NSTextView *_progressText;
    NSButton *_button;
    long long _tracelinesProcessed;
    long long _estimatedTotalTracelines;
    BOOL _isRecording;
    BOOL _analysisWasCanceled;
}

- (void).cxx_destruct;
- (id)createView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unbindTarget;
- (void)_buttonClicked:(id)arg1;

@end

@interface OGLAOverrideSelectElement : PFTDataElement
{
    NSView *_viewer;
    NSMutableArray *_menuItems;
    long long _buttonIndex;
    long long _numChoices;
}

+ (void)initialize;
- (void).cxx_destruct;
- (BOOL)acceptsFirstResponderInContent;
- (void)_popupOverrideUsageWarning:(id)arg1;
- (void)_updateChoice:(id)arg1;
- (void)setButtonIndex:(long long)arg1;
- (long long)buttonIndex;
- (id)menuItemGroup;
- (id)view;
- (void)unbindTarget;

@end

#endif /* OpenGLESAnalyzerInstrument_xrplugin_h */
