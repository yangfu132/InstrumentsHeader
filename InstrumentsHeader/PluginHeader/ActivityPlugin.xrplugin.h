//
//  ActivityPlugin.xrplugin.h
//  MacDemo
//
//  Created by szzc on 2016/11/25.
//  Copyright © 2016年 szzc. All rights reserved.
//

#ifndef ActivityPlugin_xrplugin_h
#define ActivityPlugin_xrplugin_h
//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct CPSProcessSerNum {
    unsigned int _field1;
    unsigned int _field2;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/PlugIns/ActivityPlugin.xrplugin/Contents/MacOS/ActivityPlugin
// UUID: 5D0BE227-1B3C-3493-9053-B7BD2A517724
//
//                           Arch: x86_64
//                 Source version: 61529.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.12.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../../Frameworks
//                               = /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks
//                       Run path: @loader_path/../../../../../../../../SharedFrameworks
//                               = /Applications/Xcode.app/SharedFrameworks
//

@protocol CommonRawStack <NSCoding, NSObject>
- (BOOL)bottomIsTruncated;
- (void)setBottomIsTruncated:(BOOL)arg1;
- (BOOL)topIsTruncated;
- (void)setTopIsTruncated:(BOOL)arg1;
- (int)pid;
- (long long)count;
- (void)enumerateFramesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 block:(void (^)(struct XRCommonFrameInfo *, char *))arg3;

@optional
- (long long)kernelFrameCount;
- (unsigned long long *)frames;
@end

@protocol DTXAllowedRPC <NSObject>
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol SymbolAwareRun <NSObject>
- (XRBacktraceRepository *)backtraceRepository;
@end

@protocol XRActivityMonitorAuthorizedAPI <DTXAllowedRPC>
- (NSMutableDictionary *)initialSwitches;
@end

@protocol XRActivityMonitorDelegate <NSObject>

@optional
- (void)activityMonitor:(XRActivityMonitor *)arg1 dataAvailable:(NSMutableDictionary *)arg2;
@end

@protocol XRExportDataProtocol
- (void)exportSelectedRunInFormat:(int)arg1 toPath:(NSString *)arg2;
@end

@protocol XRFilteredDataSource <NSObject>

@optional
- (NSString *)selectedSearchContext;
- (NSArray *)searchContexts;
- (void)filterDetailWithTokens:(NSArray *)arg1 context:(NSString *)arg2 matchesAny:(BOOL)arg3;
@end

@protocol XRImportDataProtocol
- (BOOL)importRun:(XRRun *)arg1 fromPaths:(NSArray *)arg2 error:(id *)arg3;
@end

@protocol XRSourceQuery
- (NSArray *)operation:(NSOperation *)arg1 commentsForSymbol:(id <CommonSymbol>)arg2 inSourceManager:(XRCodeManager *)arg3 callTreeInformation:(XRCallTreeInformation *)arg4;

@optional
- (NSArray *)operation:(NSOperation *)arg1 commentsForSymbol:(id <CommonSymbol>)arg2 forProcess:(int)arg3 inSourceManager:(XRCodeManager *)arg4 callTreeInformation:(XRCallTreeInformation *)arg5;
- (NSNumber *)sourceQueriesMustRunOnMainThread;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface XRMemoryUsageEvent : NSObject <NSCoding>
{
    unsigned long long _timestamp;
    unsigned int _pageFaults;
    unsigned int _pageIns;
    unsigned int _copyOnWriteFaults;
    unsigned long long _virtualSize;
    unsigned long long _residentSize;
}

- (id)time;
- (id)residentSize;
- (id)virtualSize;
- (unsigned int)cowFaults;
- (unsigned int)pageIns;
- (unsigned int)pageFaults;
- (unsigned long long)rsize;
- (unsigned long long)vsize;
- (unsigned long long)timestamp;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithRunTime:(unsigned long long)arg1 pageFaults:(unsigned int)arg2 pageIns:(unsigned int)arg3 cowFaults:(unsigned int)arg4 vsize:(unsigned long long)arg5 rsize:(unsigned long long)arg6;

@end

@interface XRMemoryUsageRun : XRRun
{
    BOOL _workerThreadIsRunning;
    BOOL _workerThreadShouldRun;
    unsigned long long _sampleRateMicroseconds;
    unsigned long long _referenceTime;
    unsigned int _targetProcessMachPort;
    unsigned int _selfMachPort;
    NSMutableArray *_allEventData;
    NSMutableArray *_producerArray;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _producerLock;
}

- (void).cxx_destruct;
- (void)updateEvents;
- (long long)lastIndexBeforeTime:(unsigned long long)arg1;
- (id)events;
- (void)stopWorkerThread;
- (void)workerThreadRun:(id)arg1;
- (BOOL)startWorkerThread:(unsigned int)arg1 sampleEvery:(unsigned long long)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRActivityInstrument : XRLegacyInstrument <XRImportDataProtocol, XRExportDataProtocol, XRFilteredDataSource, XRActivityMonitorDelegate, NSMenuDelegate, NSTableViewDelegate, NSOutlineViewDelegate>
{
    XRActivityClient *_connection;
    unsigned long long _detailViewType;
    NSMutableArray *_detailViewStack;
    NSMutableArray *_availableStatistics;
    NSMutableArray *_displayStatistics;
    NSMutableArray *_initialEnabledStatistics;
    PFTTableDetailView *_flatView;
    NSArrayController *_flatViewController;
    XROutlineDetailView *_parentChildView;
    NSTreeController *_parentChildViewTreeController;
    NSMutableArray *_selectedSample;
    NSMutableArray *_selectedSampleHierarchy;
    BOOL _useDeltaProcListUpdate;
    BOOL _displayLatestProcessDetail;
    BOOL _displayAllProcessDetail;
    BOOL _displayAllExpandedProcessDetail;
    PFTTableDetailView *_sampleEventsView;
    NSArrayController *_sampleEventsViewArrayController;
    XRCallTreeDetailView *_callTreeDetailView;
    BOOL _viewAsCallTree;
    NSArray *_filterDataElements;
    NSMutableDictionary *_searchContexts;
    NSString *_selectedTableName;
    NSString *_selectedSearchContext;
    NSArray *_filterProperties;
    BOOL _matchesAny;
    unsigned long long _sampleIndexToDisplay;
    BOOL _requiresRunFiltering;
    BOOL _requiresSelectedSample;
    BOOL _filterImplicitOr;
    NSString *_filterContext;
    NSArray *_filterTokens;
    NSMutableDictionary *_sortTableDescriptors;
    NSMutableDictionary *_statisticsToDisplay;
    NSMutableArray *_existingEnabledDefaults;
    unsigned long long _lastRefresh;
    unsigned long long _lastUpdateTime;
    NSDictionary *_tableDescriptorsByTableName;
    long long _samplingRate;
}

+ (id)stopIcon;
@property long long samplingRate; // @synthesize samplingRate=_samplingRate;
- (void).cxx_destruct;
- (BOOL)supportsSource;
- (BOOL)initialValueForSwitch:(id)arg1;
- (void)freeSwitchAttributes;
- (void)initializeSwitchAttributes;
- (void)trackFocusedOnEventAtUnfilteredIndex:(unsigned long long)arg1;
- (void)documentSetInspectionTime:(unsigned long long)arg1;
- (void)trackFocusedOnEventAtTime:(unsigned long long)arg1;
- (id)translateSystemValue:(id)arg1 forStatistic:(id)arg2;
- (void)configureTrack:(id)arg1;
- (id)_fixupLoadedBrushName:(id)arg1;
- (void)setTargetPaused:(BOOL)arg1;
- (BOOL)configureEnvironment:(id)arg1 arguments:(id)arg2 instruments:(id)arg3 error:(id *)arg4;
- (void)stopRecording;
- (void)startRecording;
- (void)setDisplayAllProcessDetail:(BOOL)arg1;
- (BOOL)displayAllProcessDetail;
- (void)setDisplayLatestProcessDetail:(BOOL)arg1;
- (BOOL)displayLatestProcessDetail;
- (void)forceUpdateSampleViews;
- (void)setTargetDevice:(id)arg1;
- (BOOL)displayAllExpandedProcessDetail;
- (void)setDisplayAllExpandedProcessDetail:(BOOL)arg1;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (id)selectedSearchContext;
- (id)searchContexts;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (void)_filterCallTreeWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (void)_filterProcessDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (void)_filterRunDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (id)tableToGraph;
- (id)tableBindingThree;
- (id)tableBindingTwo;
- (id)tableBindingOne;
- (id)selectedTableName;
- (void)setSelectedTableName:(id)arg1;
- (id)tableNameThree;
- (id)tableNameTwo;
- (id)tableNameOne;
- (void)_selectionDidChange:(id)arg1;
- (void)startBlank:(BOOL)arg1;
- (id)tableThreeView;
- (id)tableTwoView;
- (id)tableOneView;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)_setupView:(id)arg1 forTable:(id)arg2 withController:(id)arg3;
- (void)_overrideColumnVisibilityForTableName:(id)arg1 withView:(id)arg2;
- (void)exportSelectedRunInFormat:(int)arg1 toPath:(id)arg2;
- (BOOL)importRun:(id)arg1 fromPaths:(id)arg2 error:(id *)arg3;
- (void)_quitProcess:(id)arg1;
- (void)_forceQuitProcess:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)_addInstrument:(id)arg1;
- (void)activityMonitor:(id)arg1 dataAvailable:(id)arg2;
- (void)activityMonitor:(id)arg1 exceptionRaised:(id)arg2;
- (void)halfTick:(id)arg1;
- (BOOL)requiresHalfTickNotification;
- (void)dataUpdatedAt:(unsigned long long)arg1;
- (void)collectDataNotification:(id)arg1;
- (void)_addDataRecord:(id)arg1;
- (void)_fixInstantOffStatus:(id)arg1;
- (id)selectedSampleHierarchy;
- (id)selectedSample;
- (void)_refreshSelectedSampleHierarchy;
- (void)_refreshSelectedSample;
- (void)_refreshWithSample:(id)arg1;
- (id)createRun;
- (id)existingEnabledDefaults;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)dataElementsForContext:(id)arg1;
- (id)configurationDataElementsForInspector:(id)arg1;
- (BOOL)willProvideConfigurationDataElementsForInspector:(id)arg1;
- (id)detailElementsForSetupViewContext;
- (id)detailElementsForConfigurationViewContext;
- (id)detailElementsForExtendedDetailViewContext;
- (id)detailElementsForDetailViewContext;
- (BOOL)viewAsCallTree;
- (void)setViewAsCallTree:(BOOL)arg1;
- (BOOL)supportsCallTree;
- (id)initialEnabledStatistics;
- (id)displayStatistics;
- (id)availableStatistics;
- (void)_fetchSystemWideStatistics;
- (id)tableColumnDescriptorsForTable:(id)arg1;
- (id)detailViewLabelForType:(unsigned long long)arg1;
- (void)setDetailViewType:(unsigned long long)arg1;
- (unsigned long long)detailViewType;
- (unsigned long long)detailViewTypeMask;
- (id)_connectionForDevice:(id)arg1;
- (void)restoreFromTraceTemplateData:(id)arg1;
- (id)traceTemplateData;
- (void)dealloc;
- (void)invalidate;
- (void)gatherCollectableStatistics;
- (void)unobserveStatistics;
- (void)cleanUpTableThreeView;
- (void)cleanUpTableTwoView;
- (void)cleanUpTableOneView;
- (void)restoreSortDescriptorsToController:(id)arg1 forTable:(id)arg2;
- (void)saveSortDescriptors:(id)arg1 forTable:(id)arg2;
- (id)initWithExtension:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRActivityTableDescriptor : NSObject
{
    NSMutableArray *_columnDescriptors;
    NSDictionary *_columnIndexByPropertyName;
}

@property(retain, nonatomic) NSDictionary *columnIndexByPropertyName; // @synthesize columnIndexByPropertyName=_columnIndexByPropertyName;
@property(retain, nonatomic) NSMutableArray *columnDescriptors; // @synthesize columnDescriptors=_columnDescriptors;
- (void).cxx_destruct;
- (id)init;

@end

@interface XRActivityMachAbsoluteDurationFormatter : NSFormatter
{
    XRActivityInstrument *_instrument;
}

- (void).cxx_destruct;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (id)initWithActivityInstrument:(id)arg1;

@end

@interface XRActivityClient : NSObject
{
    unsigned long long _sampleNumber;
    BOOL _doCollectData;
    long long _samplingRate;
    NSMutableDictionary *_switches;
}

+ (id)sharedActivityClient;
- (void).cxx_destruct;
- (void)setInitialSwitches:(id)arg1;
- (id)initialSwitches;
- (BOOL)initialValueForSwitch:(id)arg1;
- (void)setValue:(id)arg1 forSwitchName:(id)arg2;
- (void)collectData;
- (id)configureLaunchEnvironment:(id)arg1;
- (void)setSamplingRate:(long long)arg1;
- (long long)samplingRate;
- (id)collectGenericInfo:(int)arg1 andInspectorInfoForPIDs:(id)arg2;
- (void)disconnect;
- (void)connectWithPid:(int)arg1;
- (void)dealloc;
- (id)init;
- (void)_stop;
- (void)_start;
- (int)killPid:(int)arg1 withSignal:(int)arg2;

@end

@interface XRProcessInfo : NSObject
{
    XRDevice *_device;
    NSNumber *_architecture;
    NSNumber *_cpuUsage;
    NSNumber *_ctxSwitches;
    NSNumber *_faults;
    NSNumber *_machCalls;
    NSNumber *_msgsRcvd;
    NSNumber *_msgsSent;
    NSNumber *_pageIns;
    NSNumber *_ports;
    NSNumber *_privateMemory;
    NSNumber *_residentSize;
    NSNumber *_sharedMemory;
    NSNumber *_threads;
    NSNumber *_unixSyscalls;
    NSNumber *_uid;
    NSString *_user;
    NSNumber *_suid;
    NSNumber *_virtualSize;
    NSNumber *_virtualPrivate;
    NSNumber *_ppid;
    NSNumber *_graphicalParentPid;
    NSNumber *_pgid;
    NSString *_command;
    NSString *_processName;
    NSNumber *_pid;
    BOOL _exited;
    NSString *_path;
    NSNumber *_transactionCount;
    NSNumber *_cpuUsageDelta;
    NSNumber *_virtualSizeDelta;
    NSNumber *_residentSizeDelta;
    NSNumber *_threadsDelta;
    NSNumber *_ctxSwitchesDelta;
    NSNumber *_faultsDelta;
    NSNumber *_machCallsDelta;
    NSNumber *_msgsRcvdDelta;
    NSNumber *_msgsSentDelta;
    NSNumber *_pageInsDelta;
    NSNumber *_portsDelta;
    NSNumber *_privateMemoryDelta;
    NSNumber *_sharedMemoryDelta;
    NSNumber *_unixSyscallsDelta;
    NSNumber *_virtualPrivateDelta;
    NSNumber *_totalSeconds;
    NSNumber *_totalMicroSeconds;
    NSArray *_openFiles;
    BOOL _isNew;
    BOOL _isUpdated;
    struct __LSASN *_asn;
    BOOL _isForegroundApp;
    NSImage *_icon;
    BOOL _needsRedisplay;
    BOOL _marked;
    BOOL _hung;
    int _hangs;
    NSMutableArray *_children;
}

- (void).cxx_destruct;
- (BOOL)exited;
- (void)setExited:(BOOL)arg1;
- (BOOL)__leaf_node;
- (id)children;
- (void)setProcessName:(id)arg1;
- (int)hangs;
- (BOOL)isHung;
- (void)setHung:(BOOL)arg1;
- (BOOL)isMarked;
- (void)setMarked:(BOOL)arg1;
- (void)setDisplayed;
- (BOOL)needsRedisplay;
- (id)icon;
- (id)processName;
- (BOOL)isForegroundApp;
- (struct CPSProcessSerNum)psn;
- (struct __LSASN *)asn;
- (id)openFiles;
- (id)description;
- (void)cleared;
- (BOOL)isUpdated;
- (BOOL)isNew;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)cpuTime;
- (id)totalTime;
- (id)totalMicroSeconds;
- (id)totalSeconds;
- (id)virtualPrivateDelta;
- (id)unixSyscallsDelta;
- (id)sharedMemoryDelta;
- (id)privateMemoryDelta;
- (id)portsDelta;
- (id)pageInsDelta;
- (id)msgsSentDelta;
- (id)msgsRcvdDelta;
- (id)machCallsDelta;
- (id)faultsDelta;
- (id)contextSwitchesDelta;
- (id)path;
- (id)virtualPrivate;
- (id)unixSyscalls;
- (id)sharedMemory;
- (id)privateMemory;
- (id)ports;
- (id)pageIns;
- (id)msgsSent;
- (id)msgsRcvd;
- (id)machCalls;
- (id)faults;
- (id)contextSwitches;
- (id)suid;
- (id)graphicalParentPid;
- (id)ppid;
- (id)pgid;
- (id)cpuUsageDelta;
- (id)threadsDelta;
- (id)residentSizeDelta;
- (id)virtualSizeDelta;
- (id)architecture;
- (id)instantOff;
- (id)user;
- (id)uid;
- (id)pid;
- (id)cpuUsage;
- (id)threads;
- (id)residentSize;
- (id)virtualSize;
- (id)command;
- (void)updateWithDictionary:(id)arg1 inspected:(BOOL)arg2;
- (void)_updateLaunchServicesInfo;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1 device:(id)arg2;

@end

@interface XRActivityInstrumentDecoratorInterval : DTTimelineDecorator
{
    XRActivityInstrumentRun *_run;
    unsigned long long _graphIndex;
}

- (void).cxx_destruct;
- (id)decorateInspectionRanges:(id)arg1;
- (BOOL)mustDecorateOnMainThread;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)initWithRun:(id)arg1 graphIndex:(unsigned long long)arg2;
- (id)init;

@end

@interface XRActivityInstrumentDecoratorPeak : DTTimelineDecorator
{
    XRActivityInstrumentRun *_run;
    unsigned long long _graphIndex;
}

- (void).cxx_destruct;
- (id)decorateInspectionRanges:(id)arg1;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (BOOL)mustDecorateOnMainThread;
- (void)setDefaultsForPlane:(id)arg1;
- (id)initWithRun:(id)arg1 graphIndex:(unsigned long long)arg2;
- (id)init;

@end

@interface XRActivityInstrumentRun : XRRun <SymbolAwareRun, XRSourceQuery>
{
    NSMutableArray *_data;
    XRBacktraceRepository *_primaryRepository;
    struct XRTimeRange _selectedTimeRange;
    NSPredicate *_filterPredicate;
    NSArrayController *_controller;
    NSRecursiveLock *_dataLock;
}

+ (void)decodeProcessesForStat:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
- (BOOL)loadSampleDataFromPaths:(id)arg1 error:(id *)arg2;
- (BOOL)loadDTPerformanceSessionDataFromPaths:(id)arg1 error:(id *)arg2;
- (id)operation:(id)arg1 commentsForSymbol:(id)arg2 inSourceManager:(id)arg3 callTreeInformation:(id)arg4;
- (id)sourceQueriesMustRunOnMainThread;
- (void)adjustSampleTimestamp:(id)arg1;
- (unsigned long long)traceRelativeTimestampOfSample:(id)arg1;
- (id)backtraceRepository;
- (id)repositoryForCallTrees;
- (BOOL)setSortKey:(id)arg1 ascending:(BOOL)arg2;
- (id)filterPredicate;
- (void)setFilterPredicate:(id)arg1;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)updateFilter;
- (id)predicateForTimeRange:(struct XRTimeRange)arg1;
- (id)samplesInclusiveOfRange:(struct XRTimeRange)arg1 filtered:(BOOL)arg2 expandedBeginningOut:(char *)arg3;
- (id)samplesInRange:(struct XRTimeRange)arg1 filtered:(BOOL)arg2;
- (unsigned long long)indexOfSample:(id)arg1 filtered:(BOOL)arg2;
- (id)lastSampleFiltered:(BOOL)arg1;
- (id)sampleAtIndex:(unsigned long long)arg1 filtered:(BOOL)arg2;
- (id)valueForStatistic:(id)arg1 atIndex:(unsigned long long)arg2 filtered:(BOOL)arg3;
- (unsigned long long)numberOfSamples:(BOOL)arg1;
- (void)addDataSample:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRActivityMonitor : XRActivityClient <XRActivityMonitorAuthorizedAPI>
{
    DTXChannel *_channel;
    long long _serviceVersion;
    id <XRActivityMonitorDelegate> _delegate;
    struct {
        unsigned int implementsDataAvailable:1;
        unsigned int RESERVED:31;
    } _delegateFlags;
}

- (void).cxx_destruct;
- (BOOL)initialValueForSwitch:(id)arg1;
- (void)setValue:(id)arg1 forSwitchName:(id)arg2;
- (void)_mainThreadProcessIncomingMessage:(id)arg1;
- (id)configureLaunchEnvironment:(id)arg1;
- (void)setSamplingRate:(long long)arg1;
- (long long)samplingRate;
- (void)disconnect;
- (void)connectWithPid:(int)arg1;
- (int)killPid:(int)arg1 withSignal:(int)arg2;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)initForDevice:(id)arg1 service:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

#endif /* ActivityPlugin_xrplugin_h */
