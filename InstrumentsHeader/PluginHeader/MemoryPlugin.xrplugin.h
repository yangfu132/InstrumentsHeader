//
//  MemoryPlugin.xrplugin.h
//  MacDemo
//
//  Created by szzc on 2016/11/25.
//  Copyright © 2016年 szzc. All rights reserved.
//

#ifndef MemoryPlugin_xrplugin_h
#define MemoryPlugin_xrplugin_h

//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _VMURange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _XRDeviceTimeInfo {
    unsigned long long _field1;
    unsigned long long _field2;
    struct mach_timebase_info _field3;
};

struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>;

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct mach_timebase_info {
    unsigned int _field1;
    unsigned int _field2;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, unsigned int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, OAEventPairing, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, OAEventPairing>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, OAEventPairing>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, OAEventPairing>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, OAEventPairing>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, OAEventPairing>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, OAEventPairing>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, OAEventPairing>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, unsigned int>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned int>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned int>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long, unsigned int>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned int>, std::__1::hash<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned int>, std::__1::equal_to<unsigned long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<XROAEventAggregate *, std::__1::allocator<XROAEventAggregate *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<XROAEventAggregate **, std::__1::allocator<XROAEventAggregate *>> {
        id *_field1;
    } _field3;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned long long _field4;
} CDStruct_0a4d7299;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_cbbc06c7;

typedef struct {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    long long _field7;
    unsigned long long _field8[0];
} CDStruct_6c9135d0;

typedef struct {
    long long _field1;
    long long _field2;
    int _field3;
    int _field4;
    int _field5;
    unsigned int _field6;
} CDStruct_01c56c7e;

typedef struct {
    unsigned int size;
    unsigned int count;
    struct *refs;
} CDStruct_fc8fca5f;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/PlugIns/MemoryPlugin.xrplugin/Contents/MacOS/MemoryPlugin
// UUID: 24ABFFD4-7D88-3782-AC75-E87B751E99EA
//
//                           Arch: x86_64
//                 Source version: 61529.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.12.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../../Frameworks
//                               = /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks
//                       Run path: @loader_path/../../../../../../../../SharedFrameworks
//                               = /Applications/Xcode.app/SharedFrameworks
//

@protocol DTGraphDelegate <NSObject>

@optional
- (void)userMouseExitedGraph:(DTGraph *)arg1 event:(NSEvent *)arg2;
- (void)userMousedOverInGraph:(DTGraph *)arg1 onEntry:(NSDictionary *)arg2 event:(NSEvent *)arg3;
- (void)userClickedInGraph:(DTGraph *)arg1 onEntry:(id)arg2;
- (void)graph:(DTGraph *)arg1 entry:(id)arg2 willDrawCell:(NSCell *)arg3;
- (BOOL)useMaximumYForOrderInGraph:(DTGraph *)arg1;
- (void)setPathStyleForGraph:(DTGraph *)arg1 entry:(id)arg2 path:(NSBezierPath *)arg3;
- (BOOL)lineFilledForGraph:(DTGraph *)arg1 entry:(id)arg2;
- (NSString *)translateValue:(NSNumber *)arg1 keypath:(NSString *)arg2;
- (long long)shapeForGraph:(DTGraph *)arg1 entry:(id)arg2;
- (NSString *)labelForGraph:(DTGraph *)arg1 entry:(id)arg2;
- (NSColor *)backgroundColorForGraph:(DTGraph *)arg1 entry:(id)arg2;
- (NSColor *)colorForGraph:(DTGraph *)arg1 entry:(id)arg2;
- (NSImage *)iconForGraph:(DTGraph *)arg1 entry:(id)arg2;
- (NSImage *)imageForGraph:(DTGraph *)arg1 entry:(id)arg2 inRect:(struct CGRect)arg3;
- (void)drawGraph:(DTGraph *)arg1 entry:(id)arg2 path:(NSBezierPath *)arg3 cell:(NSCell *)arg4 cellRect:(struct CGRect)arg5;
- (void)drawGraph:(DTGraph *)arg1 entrySeries:(NSDictionary *)arg2 inPath:(NSBezierPath *)arg3;
- (void)drawGraph:(DTGraph *)arg1 entry:(id)arg2 inPath:(NSBezierPath *)arg3;
- (void)drawGraph:(DTGraph *)arg1 entry:(id)arg2 inRect:(struct CGRect)arg3;
@end

@protocol DTNetworkGraphLayout <NSObject>
- (void)layoutGraph:(DTNetworkGraph *)arg1;
@end

@protocol DataRepresentation <NSObject>
- (id)initWithDataStream:(char *)arg1 position:(unsigned long long *)arg2 max:(unsigned long long)arg3 version:(long long)arg4 substitutions:(struct DataRepresentationSubstitutions *)arg5;
- (void)addToDataStream:(char *)arg1 position:(unsigned long long *)arg2 max:(unsigned long long)arg3 substitutions:(struct DataRepresentationSubstitutions *)arg4;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol SymbolAwareRun <NSObject>
- (XRBacktraceRepository *)backtraceRepository;
@end

@protocol XRCallTreeDataSource <NSObject>
- (XRBacktraceAggregator *)backtracesForCategory:(NSString *)arg1 timeRange:(struct XRTimeRange)arg2 savedIndex:(unsigned long long *)arg3;

@optional
- (void)resetAggregatesForRepository:(XRBacktraceRepository *)arg1;
- (NSArray *)processCategoriesForPid:(int)arg1;
- (NSArray *)provideCategories;
@end

@protocol XRContextContainer <NSObject>
- (NSView *)viewForContext:(XRContext *)arg1;
- (NSArray *)siblingsForContext:(XRContext *)arg1;
- (void)displayContext:(XRContext *)arg1;
- (XRContext *)contextRepresentation;

@optional
- (void)clearCurrentDataContext;
- (XRContext *)currentDataContext;
- (id <XRContextContainer>)contextContainerForUUID:(NSString *)arg1;
- (NSString *)uuid;
- (NSImage *)iconForContext:(XRContext *)arg1;
@end

@protocol XRExportDataProtocol
- (void)exportSelectedRunInFormat:(int)arg1 toPath:(NSString *)arg2;
@end

@protocol XRFilteredDataSource <NSObject>

@optional
- (NSString *)selectedSearchContext;
- (NSArray *)searchContexts;
- (void)filterDetailWithTokens:(NSArray *)arg1 context:(NSString *)arg2 matchesAny:(BOOL)arg3;
@end

@protocol XRImportDataProtocol
- (BOOL)importRun:(XRRun *)arg1 fromPaths:(NSArray *)arg2 error:(id *)arg3;
@end

@protocol XRSearchTargetHelper
- (NSArray *)backtraceForVisibleRow:(unsigned long long)arg1;
@end

@protocol XRSourceQuery
- (NSArray *)operation:(NSOperation *)arg1 commentsForSymbol:(id <CommonSymbol>)arg2 inSourceManager:(XRCodeManager *)arg3 callTreeInformation:(XRCallTreeInformation *)arg4;

@optional
- (NSArray *)operation:(NSOperation *)arg1 commentsForSymbol:(id <CommonSymbol>)arg2 forProcess:(int)arg3 inSourceManager:(XRCodeManager *)arg4 callTreeInformation:(XRCallTreeInformation *)arg5;
- (NSNumber *)sourceQueriesMustRunOnMainThread;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface XRObjectAllocRun : XRRun <SymbolAwareRun, XRSourceQuery, XRCallTreeDataSource>
{
    XRObjectAllocRunSharedData *_sharedData;
    NSMutableArray *_allStats;
    NSMutableDictionary *_statsForCategory;
    NSMutableDictionary *_categoryIDForName;
    XROAEventSummary *_scaleStats;
    NSMutableArray *_generations;
    NSArray *_graphedCategories;
    struct XRTimeRange _filterTimeRange;
    unsigned int _filterMinEventID;
    unsigned int _filterMaxEventID;
    unsigned long long _nextGenNumber;
    NSMutableDictionary *_samplesByCategoryNumber;
    unsigned long long _catNumIndex;
    struct XRTimeRange _currentStatsFilterRange;
    int _lifecycleFilter;
    int _allocationTypeFilter;
    unsigned int *_quickEventCacheIds;
    id *_quickEventCache;
    XRHeapGeneration *_activeGeneration;
}

+ (void)initialize;
- (id)operation:(id)arg1 commentsForSymbol:(id)arg2 inSourceManager:(id)arg3 callTreeInformation:(id)arg4;
- (id)provideCategories;
- (id)backtracesForCategory:(id)arg1 timeRange:(struct XRTimeRange)arg2 savedIndex:(unsigned long long *)arg3;
- (void)_configureCallTreeForAllocationType:(int)arg1;
- (id)symbolsForEvent:(id)arg1 reverseOrder:(BOOL)arg2;
- (id)backtraceRepository;
- (BOOL)eventIsLiveInCurrentTimeRange:(id)arg1;
- (unsigned int)uncategorizedCount;
- (unsigned int)countOfObjectEventsForCategory:(unsigned int)arg1;
- (void)enumerateObjectEventsForCategory:(unsigned int)arg1 skipToIndex:(unsigned int)arg2 withBlock:(CDUnknownBlockType)arg3;
- (BOOL)_applyLifecycleFilterToEvent:(id)arg1;
- (id)zombieEvent;
- (id)eventForIdentifier:(unsigned int)arg1;
- (BOOL)loadDTPerformanceSessionDataFromPaths:(id)arg1 error:(id *)arg2;
- (void)updateGenerations;
- (void)deleteGeneration:(id)arg1;
- (void)moveGeneration:(id)arg1 toTime:(unsigned long long)arg2;
- (void)setActiveGeneration:(id)arg1;
- (id)generationAtTime:(unsigned long long)arg1;
- (id)generations;
- (id)nextGenerationIdentifier;
- (void)createGenerationAtTime:(unsigned long long)arg1;
- (void)removeFlag:(id)arg1;
- (struct XRTimeRange)_displayTimeFilter;
- (BOOL)_isTimeScoped;
- (BOOL)useTypeFilteringRules:(id)arg1;
- (void)setAllocationTypeFilter:(int)arg1;
- (void)setLifecycleFilter:(int)arg1;
- (struct XRTimeRange)selectedTimeRange;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (id)categoryNameForIdentifier:(unsigned int)arg1;
- (id)globalStats;
- (id)scalingStats;
- (void)_clearStats;
- (void)allowEventReuse;
- (void)refreshStatsForActiveTimeFilter;
- (void)_updateStatsWithEventIdentifier:(unsigned int)arg1 category:(unsigned int)arg2 type:(unsigned int)arg3 size:(int)arg4 pastEvent:(unsigned int)arg5 summaryMap:(id *)arg6 maxCat:(unsigned int)arg7;
- (id)_statsObjectForCategoryID:(unsigned int)arg1;
- (void)_changeStatsByTimestampRange:(struct XRTimeRange)arg1 overallRange:(struct XRTimeRange)arg2 startID:(unsigned int)arg3 endID:(unsigned int)arg4;
- (id *)_createCategorySummaryMapWithMaximum:(unsigned int)arg1;
- (void)_validateGlobalStatsForTimeRange:(struct XRTimeRange)arg1;
- (void)_recomputeGlobalStats;
- (void)setNeedsForceReloadData;
- (id)graphedCategories;
- (void)setGraphedCategories:(id)arg1;
- (BOOL)discardsLifeCycleComplete;
- (unsigned long long)lastTimestamp;
- (id)sharedData;
- (void)setRecordingMode:(unsigned long long)arg1;
- (void)setDiscardsLifeCycleComplete:(BOOL)arg1;
- (void)setTargetDevice:(id)arg1 pid:(int)arg2 repository:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRObjectAllocReceiver : NSObject
{
    int _pid;
    UniquingTable *_uniquingTable;
    DTAllocationsRecorder *_recorder;
    CDUnknownBlockType _timeAdjuster;
    XRObjectAllocRun *_targetRun;
    DTXChannel *_allocationsChannel;
    long long _remoteVersion;
    NSObject<OS_dispatch_semaphore> *_collectionFinishedSem;
}

+ (void)initialize;
- (void)doneWithProcessForcingStop:(BOOL)arg1;
- (BOOL)attachToLaunchedProcess:(int)arg1 storeInRun:(id)arg2 error:(id *)arg3;
- (BOOL)attachToRunningProcess:(int)arg1 keepEventsMask:(unsigned int)arg2 storeInRun:(id)arg3 error:(id *)arg4;
- (void)prepareForPid:(int)arg1 inRun:(id)arg2;
- (BOOL)configureLocalLaunchEnvironment:(id)arg1 recordedEventsMask:(unsigned int)arg2;
- (void)dealloc;
- (id)initWithDevice:(id)arg1;

@end

@interface XRLeakSnapshotInfo : NSObject <NSCoding>
{
    unsigned int _newLeakCount;
    unsigned long long _traceRelativeTime;
}

@property(readonly, nonatomic) unsigned int newLeakCount; // @synthesize newLeakCount=_newLeakCount;
@property(readonly, nonatomic) unsigned long long traceRelativeTime; // @synthesize traceRelativeTime=_traceRelativeTime;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithTime:(unsigned long long)arg1 newLeakCount:(unsigned int)arg2;

@end

@interface XRLeaksRun : XRRun <SymbolAwareRun, XRSourceQuery, XRCallTreeDataSource>
{
    XRBacktraceRepository *_repository;
    NSMutableArray *_allLeaks;
    NSMutableArray *_cyclicLeaks;
    CDStruct_fc8fca5f _allReferences;
    DVT_VMUClassInfoMap *_knownLayouts;
    NSMutableArray *_leakSnapshotInfo;
    unsigned long long _firstLeakTime;
    XRObjectAllocRunSharedData *_oaData;
    BOOL _backtracesAvailable;
    BOOL _referencesAvailable;
    NSMapTable *_btAggregatedLeaks;
    NSString *_status;
    struct __CFDictionary *_addressToLeak;
    unsigned long long _latestTimestamp;
    NSArray *_filterTokens;
    BOOL _filterOr;
    struct XRTimeRange _activeTimeRange;
    NSMutableArray *_failedLookups;
    XRLeaksReceiver *_dataReceiver;
    int _pid;
    unsigned int _options;
    BOOL _autoLeaksEnabled;
    unsigned long long _autoLeaksInterval;
    unsigned long long _autoLeaksTriggerTime;
    NSObject<OS_dispatch_source> *_timerSource;
    NSObject<OS_dispatch_queue> *_workerQueue;
    unsigned long long _legacyStartTime;
}

+ (void)initialize;
@property(readonly) unsigned long long firstLeakTime; // @synthesize firstLeakTime=_firstLeakTime;
@property(readonly) NSArray *leakSnapshotInfo; // @synthesize leakSnapshotInfo=_leakSnapshotInfo;
@property(readonly) BOOL backtracesAvailable; // @synthesize backtracesAvailable=_backtracesAvailable;
@property(readonly) BOOL referencesAvailable; // @synthesize referencesAvailable=_referencesAvailable;
@property(readonly) NSArray *allLeaks; // @synthesize allLeaks=_allLeaks;
@property(readonly) unsigned long long latestTimestamp; // @synthesize latestTimestamp=_latestTimestamp;
@property(nonatomic) unsigned long long autoLeaksInterval; // @synthesize autoLeaksInterval=_autoLeaksInterval;
@property(nonatomic) BOOL autoLeaksEnabled; // @synthesize autoLeaksEnabled=_autoLeaksEnabled;
@property(readonly, copy) NSString *statusString; // @synthesize statusString=_status;
- (BOOL)loadDTPerformanceSessionDataFromPaths:(id)arg1 error:(id *)arg2;
- (id)operation:(id)arg1 commentsForSymbol:(id)arg2 inSourceManager:(id)arg3 callTreeInformation:(id)arg4;
- (void)filterWithTokens:(id)arg1 matchesAny:(BOOL)arg2;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (CDUnknownBlockType)_activeFilter;
- (id)backtracesForCategory:(id)arg1 timeRange:(struct XRTimeRange)arg2 savedIndex:(unsigned long long *)arg3;
- (id)backtraceRepository;
- (void)stopWithReceiverError:(id)arg1;
- (id)eventHistoryForPointer:(unsigned long long)arg1;
- (id)inverseReferencesForLeak:(id)arg1;
- (id)referencesForLeak:(id)arg1;
- (id)infoForIsa:(unsigned long long)arg1;
- (void)_enumerateLeakReferences:(id)arg1 inverse:(BOOL)arg2 withBlock:(CDUnknownBlockType)arg3;
- (id)leakReferenceFromInfo:(CDStruct_0a4d7299)arg1;
- (id)leakWithAddress:(unsigned long long)arg1;
@property(readonly) NSArray *cyclicLeaks;
@property(readonly) NSArray *rootLeaks;
@property(readonly) NSArray *aggregatedLeaks;
@property(readonly) XRMetadataTagTable *pairingTable;
@property(readonly) BOOL historiesAvailable;
- (void)_updateStatusString;
- (void)_handleNewLeaks:(CDStruct_cbbc06c7 *)arg1 ofCount:(unsigned int)arg2 withContents:(id *)arg3 references:(CDStruct_fc8fca5f)arg4 layouts:(id)arg5 timestamp:(unsigned long long)arg6;
- (void)_aggregateLeakByBacktrace:(id)arg1;
- (void)_assignBacktracesToLeaks:(id)arg1;
- (void)stopRecording;
- (void)requestLeaksCheck;
- (BOOL)recordWithDevice:(id)arg1 pid:(int)arg2 objectAllocInstrument:(id)arg3;
- (void)_armTimer;
@property(nonatomic) BOOL recordLeakContents;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)_commonLeaksRunSetup;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRLeaksInstrument : XRLegacyInstrument <NSSplitViewDelegate, XRContextContainer, XRImportDataProtocol, NSOutlineViewDataSource, NSOutlineViewDelegate, DTGraphDelegate>
{
    NSMutableArray *_topLevelContexts;
    XRContext *_superContext;
    NSScrollView *_enclosingScrollView;
    XROutlineDetailView *_btLeaksView;
    XROutlineDetailView *_rootedLeaksView;
    XROutlineDetailView *_cyclicLeaksView;
    XRCallTreeDetailView *_callTreeView;
    NSSplitView *_splitCyclesView;
    DTNetworkGraph *_componentGraphView;
    DTNetworkGraph *_inspectorGraphView;
    XRCyclicLeak *_graphedNetwork;
    XRObjectAllocInstrument *_objectAllocPartner;
    NSMapTable *_itemCache;
    XRObjectAllocEventViewController *_addressHistoryController;
    unsigned long long _historyAddress;
    unsigned long long _sampleInterval;
    BOOL _autoLeaks;
    BOOL _recordBlockContents;
    BOOL _warnZombies;
    int _groupingMode;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
- (BOOL)importRun:(id)arg1 fromPaths:(id)arg2 error:(id *)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)shouldDisplayActionInOutlineView:(id)arg1 forItem:(id)arg2;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)_cachedSubitemsForItem:(id)arg1 view:(id)arg2;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (id)selectedSearchContext;
- (id)searchContexts;
- (id)contextContainerForUUID:(id)arg1;
- (id)iconForContext:(id)arg1;
- (id)viewForContext:(id)arg1;
- (id)siblingsForContext:(id)arg1;
- (void)displayContext:(id)arg1;
- (void)_setViewForContext:(id)arg1;
- (id)contextRepresentation;
- (void)updateCurrentDetailView;
- (id)dataMiningMenu;
- (BOOL)supportsDataMining;
- (id)_topLevelContexts;
- (void)_displaySCC:(id)arg1;
- (void)_showOAEvents:(id)arg1;
- (void)_checkLeaksNow:(id)arg1;
- (void)_refreshExtendedEventViewContext:(id)arg1;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)_updateExtendedDetailViewContext:(id)arg1;
- (void)_refreshCycleInspector;
- (id)objectAllocPartner;
- (void)setRecordBlockContents:(BOOL)arg1;
- (BOOL)recordBlockContents;
- (id)statusString;
- (void)setAutoLeaks:(BOOL)arg1;
- (BOOL)autoLeaks;
- (void)setSampleRate:(id)arg1;
- (id)sampleRate;
- (void)_setGroupingMode:(int)arg1;
- (void)stopRecording;
- (void)startRecording;
- (void)prepareToRecord;
- (BOOL)verifyEnvironment:(id)arg1 arguments:(id)arg2 instruments:(id)arg3 error:(id *)arg4;
- (BOOL)configureEnvironment:(id)arg1 arguments:(id)arg2 instruments:(id)arg3 error:(id *)arg4;
- (void)downloadDSYM:(id)arg1;
- (void)symbolicateAddress:(id)arg1;
- (void)locateAndSymbolicateAddress:(id)arg1;
- (id)menuForDetailViewRow:(id)arg1 andColumn:(id)arg2;
- (void)addColumnsToCallTreeDetailView:(id)arg1;
- (void)addColumnsToDetailView:(id)arg1;
- (void)_applyGenericSortDescriptorWithKey:(id)arg1 forOutlineViewColumn:(id)arg2;
- (id)_currentView;
- (void)userClickedInGraph:(id)arg1 onEntry:(id)arg2;
- (void)graph:(id)arg1 entry:(id)arg2 willDrawCell:(id)arg3;
- (void)setPathStyleForGraph:(id)arg1 entry:(id)arg2 path:(id)arg3;
- (id)backgroundColorForGraph:(id)arg1 entry:(id)arg2;
- (id)leakGraphColor;
- (id)colorForGraph:(id)arg1 entry:(id)arg2;
- (long long)shapeForGraph:(id)arg1 entry:(id)arg2;
- (id)_componentGraphView;
- (id)_addressHistoryView;
- (id)_callTreeView;
- (id)_splitCyclesView;
- (id)_rootedLeaksView;
- (id)_btLeaksView;
- (id)_createLeaksGraphWithLayoutClass:(Class)arg1;
- (id)_newLeaksOutlineWithName:(id)arg1;
- (id)dataElementsForContext:(id)arg1;
- (id)dataElementsForLeak:(id)arg1;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)configureTrack:(id)arg1;
- (void)setRecordingEnabled:(BOOL)arg1;
- (void)resetTargetDeviceProperties;
- (void)dealloc;
- (void)invalidate;
- (void)restoreFromTraceTemplateData:(id)arg1;
- (id)traceTemplateData;
- (id)initWithExtension:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRLeftToRightFanLayout : NSObject <DTNetworkGraphLayout>
{
}

- (void)layoutGraph:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRLeaksReceiver : NSObject
{
    XRLeaksRun *_run;
    XRDevice *_device;
    int _targetPid;
    NSObject<OS_dispatch_queue> *_processingQueue;
    NSObject<OS_dispatch_queue> *_sourceQueue;
    BOOL _pendingRequest;
    NSObject<OS_dispatch_queue> *_userQueue;
    CDUnknownBlockType _userCallback;
    long long _serviceVersion;
    DTXChannel *_deviceChannel;
}

- (void).cxx_destruct;
- (void)cancelRequests;
- (BOOL)pendingRequests;
- (void)requestLeaksWithOptions:(unsigned int)arg1;
- (void)processLeaksData:(id)arg1;
- (BOOL)_dispatchServiceRequestWithOptions:(unsigned int)arg1;
- (void)dealloc;
- (id)initWithDevice:(id)arg1 pid:(int)arg2 run:(id)arg3 queue:(id)arg4 callback:(CDUnknownBlockType)arg5;

@end

@interface XROAArrayController : NSArrayController
{
    XRInstrument *_instrument;
}

@property XRInstrument *instrument; // @synthesize instrument=_instrument;
- (id)arrangeObjects:(id)arg1;
- (id)initWithOAInstrument:(id)arg1;

@end

@interface XRObjectAllocInstrument : XRLegacyInstrument <XRImportDataProtocol, XRExportDataProtocol, XRFilteredDataSource, XRSearchTargetHelper, NSTableViewDelegate, NSTableViewDataSource, NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    XRObjectAllocReceiver *_dataReceiver;
    NSMutableDictionary *_configurationOptions;
    NSScrollView *_enclosingScrollView;
    PFTTableDetailView *_summaryView;
    XRCallTreeDetailView *_callTreeView;
    XRObjectAllocEventViewController *_eventListController;
    XRObjectAllocEventViewController *_objectListController;
    XROutlineDetailView *_heapshotView;
    unsigned long long _activeDetailViewType;
    XRContext *_superContext;
    NSMutableSet *_recentCategoryContexts;
    NSMutableArray *_topLevelContexts;
    XROAArrayController *_summaryController;
    NSArray *_filterTokens;
    NSString *_filterContext;
    unsigned int *_rawIDSource;
    unsigned int _rawIDCount;
    unsigned int _unfilteredIDCount;
    XRObjectAllocEvent *_examinedAllocation;
    NSString *_category;
    XRHeapGeneration *_focusedGeneration;
    XRHeapCategory *_focusedHeapCategory;
    unsigned int _categoryID;
    NSMutableArray *_displayDataSource;
    BOOL _filterImplicitOr;
    BOOL _targetDied;
    BOOL _ignoreInspectionChanges;
    int _updateCounter;
    unsigned long long _updateTimestamp;
    double _referenceTimeAdjustment;
    NSString *_barGraphColumnTitle;
    BOOL _liveUpdatingDisabled;
    BOOL _sortAscending;
    NSString *_sortID;
    NSMutableArray *_graphedCategories;
    unsigned int _mainSummaryCategoryID;
    BOOL _currentRunSupportsHeapAllocationTracking;
    BOOL _currentRunSupportsVMallocationTracking;
    NSView *_currentView;
    XRObjectAllocStringRuleViewController *_ruleViewController;
    NSArray *_orderedTypeTokensDictionaries;
    NSMutableDictionary *_deviceToVersionNumberMap;
}

+ (void)initialize;
@property(retain, nonatomic) NSMutableDictionary *deviceToVersionNumberMap; // @synthesize deviceToVersionNumberMap=_deviceToVersionNumberMap;
@property(copy, nonatomic) NSArray *orderedTypeTokensDictionaries; // @synthesize orderedTypeTokensDictionaries=_orderedTypeTokensDictionaries;
- (void).cxx_destruct;
- (void)pushHeapCategory:(id)arg1;
- (void)pushGeneration:(id)arg1;
- (void)_pushGeneration:(id)arg1;
- (void)_markGeneration:(id)arg1;
- (id)_heapshotView;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (BOOL)shouldDisplayActionInOutlineView:(id)arg1 forItem:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)tick:(id)arg1;
- (BOOL)requiresTickNotification;
- (void)defaultViewSymbolAction:(id)arg1;
- (void)setDetailViewScaleValue:(double)arg1;
- (void)globalAllocationDouble:(id)arg1;
- (void)analyzeViewClicked:(id)arg1;
- (id)selectedSearchContext;
- (id)searchContexts;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (void)pushAllocationIdentifier:(unsigned int)arg1;
- (void)pushCategory:(unsigned int)arg1;
- (void)_pushCategory:(id)arg1;
- (void)_pushAddress:(id)arg1;
- (id)contextContainerForUUID:(id)arg1;
- (id)iconForContext:(id)arg1;
- (id)siblingsForContext:(id)arg1;
- (void)displayContext:(id)arg1;
- (void)_setFocusedGeneration:(id)arg1;
- (id)viewForContext:(id)arg1;
- (id)contextRepresentation;
- (id)_topLevelContexts;
- (BOOL)refreshDataSources;
- (void)updateCurrentDetailView:(BOOL)arg1;
- (void)setInspectionTime:(unsigned long long)arg1;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)tableView:(id)arg1 drawBackgroundInClipRect:(struct CGRect)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)dataMiningMenu;
- (BOOL)supportsDataMining;
- (id)_objectListView;
- (id)_eventListView;
- (id)_callTreeView;
- (id)_summaryView;
- (void)addColumnsToCallTreeDetailView:(id)arg1;
- (void)addColumnsToDetailView:(id)arg1;
- (void)resetTargetDeviceProperties;
@property(nonatomic) BOOL identifyCpp;
@property(nonatomic) BOOL zombiesEnabled;
@property(nonatomic) BOOL onlyTrackVMAllocations;
@property(nonatomic) BOOL discardLifecycleComplete;
@property(nonatomic) BOOL killChildImmediately;
@property(nonatomic) BOOL referenceCounting;
- (id)examinedEvent;
- (id)tooltipForAllocationTypePerspective:(int)arg1;
- (void)setAllocationTypePerspective:(int)arg1;
- (void)_addCategoryToGraph:(unsigned int)arg1 atIndex:(unsigned long long)arg2;
- (void)_removeCategoriesFromGraphAtIndexes:(id)arg1;
- (id)tooltipForViewLifetimePerspective:(int)arg1;
- (void)setViewLifetimePerspective:(int)arg1;
- (void)_setViewLifetimePerspective:(int)arg1;
- (void)_refreshFilterPredicate;
- (int)allocationTypePerspective;
- (int)viewLifetimePerspective;
- (void)setViewFromObjectPerspective:(BOOL)arg1;
- (BOOL)viewFromObjectPerspective;
- (void)_libColorChanged:(id)arg1;
- (void)_updateExtendedDetailViewContext:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)importRun:(id)arg1 fromPaths:(id)arg2 error:(id *)arg3;
- (void)exportSelectedRunInFormat:(int)arg1 toPath:(id)arg2;
- (id)configurationDataElementsForInspector:(id)arg1;
- (BOOL)willProvideConfigurationDataElementsForInspector:(id)arg1;
- (id)backtraceForVisibleRow:(unsigned long long)arg1;
- (id)dataElementsForContext:(id)arg1;
- (BOOL)_targetDeviceSupportsVMallocationTracking;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (BOOL)setSelectedRunIndex:(unsigned long long)arg1;
- (void)targetTerminated:(id)arg1;
- (void)stopRecording;
- (void)startRecording;
- (void)prepareToRecord;
- (void)_setPerspectivesForRun:(id)arg1 enableHeap:(BOOL)arg2 enableVM:(BOOL)arg3;
- (void)setTargetDevice:(id)arg1;
- (unsigned int)_derivedEventMask;
- (BOOL)verifyEnvironment:(id)arg1 arguments:(id)arg2 instruments:(id)arg3 error:(id *)arg4;
- (BOOL)configureEnvironment:(id)arg1 arguments:(id)arg2 instruments:(id)arg3 error:(id *)arg4;
- (id)reasonForNotSupportingDevice:(id)arg1;
- (id)graphedCategories;
- (void)configureTrack:(id)arg1;
- (id)brushNames;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)invalidate;
- (void)dealloc;
- (id)initWithExtension:(id)arg1;
- (id)textColorForIndex:(unsigned long long)arg1;
- (id)colorForIndex:(unsigned long long)arg1;
- (void)_syncTypeTokensWithUserDefaults:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRObjectAllocRunSharedData : NSObject <NSCoding>
{
    struct vector<unsigned int, std::__1::allocator<unsigned int>> *_allEventIDs;
    struct unordered_map<unsigned long long, OAEventPairing, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, OAEventPairing>>> *_activeAllocations;
    BOOL _discardsLifeCycleComplete;
    XROAStorageManager *_eventCoordinator;
    struct vector<XROAEventAggregate *, std::__1::allocator<XROAEventAggregate *>> *_aggregates;
    XROAEventAggregate *_currentAggregate;
    struct XRTimeRange _caTimeRange;
    NSString *_pastTracePath;
    XRMetadataTagTable *_taggingTable;
    XRBacktraceRepository *_repository;
    NSObject<OS_dispatch_semaphore> *_allEventIDLock;
    int _allocationTypeFilter;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> *_reuseBuffer;
    unsigned long long _recordingMode;
    id *_filterStrings;
    unsigned int *_filterStringsBehavior;
    unsigned int _filterStringCount;
    struct _opaque_pthread_mutex_t _quickLockActive;
    struct _opaque_pthread_mutex_t _reuseLock;
    struct _opaque_pthread_mutex_t _aggregatesLock;
    unsigned long long _lastTimeStamp;
    unsigned int _lastCategoryIdentifier;
    unsigned int _lastEventID;
    struct unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>> *_generalAllocCategories;
    struct unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>> *_generalVMAllocCategories;
    struct unordered_map<std::__1::basic_string<char>, unsigned int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int>>> *_classNameUniquer;
    struct unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>> *_vtablePointerCategories;
    XRObjectAllocVMRegionTracker *_vmRegionTracker;
    BOOL _deviceIsLocal;
    unsigned long long _cfPasteboardAddress;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> *_allocationTypeForCategoryIdentifier;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> *_categoryIDForSummaryCategoryAllocationType;
    int _summaryCategoriesVersion;
    BOOL _hasVMevents;
    BOOL _hasHeapEvents;
}

+ (id)_currentDescriptor;
+ (void)initialize;
- (void)runEnded;
- (void)_assignEvent:(unsigned int)arg1 fromCategory:(unsigned int)arg2 toCategory:(unsigned int)arg3 eventType:(unsigned int)arg4 size:(int)arg5 delta:(int)arg6 aggregate:(id)arg7;
- (BOOL)_matchesTypeFilters:(id)arg1;
- (unsigned int)processAllocation:(CDStruct_6c9135d0 *)arg1 backtrace:(id)arg2 symbolicate:(BOOL)arg3 category:(id)arg4;
- (unsigned int)_processAllocationInternal:(CDStruct_6c9135d0 *)arg1 backtrace:(id)arg2 symbolicate:(BOOL)arg3 category:(id)arg4;
- (id)categoryNameForIsaPointer:(unsigned long long)arg1;
- (const char *)vmRegionTypeDescriptionFromUserTag:(unsigned char)arg1;
- (unsigned int)_categoryForVtablePointer:(unsigned long long)arg1;
- (unsigned int)_setCategoryName:(id)arg1 forIsaPointer:(unsigned long long)arg2;
- (id)symbolNameForAddress:(unsigned long long)arg1;
- (unsigned int)_categoryForEventType:(unsigned int)arg1 size:(int)arg2 name:(const char *)arg3 allocationType:(unsigned int)arg4;
- (unsigned int)_newCategoryWithName:(id)arg1 allocationType:(unsigned int)arg2;
- (void)_reuseEvent:(unsigned int)arg1;
- (void)allowEventReuse;
- (void)addToGlobalStatsFromCategory:(unsigned int)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (BOOL)isCategory:(unsigned int)arg1 inSameSummaryCategoriesAsCategory:(unsigned int)arg2;
- (BOOL)applyAllocationTypeFilterAndRequestedCategoryID:(unsigned int)arg1 toCategoryID:(unsigned int)arg2;
- (BOOL)applyAllocationTypeFilterToCategoryID:(unsigned int)arg1;
- (BOOL)hasVMevents;
- (BOOL)hasHeapEvents;
- (void)_setAllocationType:(unsigned int)arg1 forCategoryIdentifier:(unsigned int)arg2;
- (unsigned int)_allocationTypeForCategoryID:(unsigned int)arg1;
- (void)_initAllocationTypeTableFromCategoryNames;
- (unsigned int)mainSummaryCategoryIDForAllocationTypePerspective:(int)arg1;
- (BOOL)isSummaryCategoryID:(unsigned int)arg1;
- (unsigned int)summaryCategoryCount;
- (unsigned int)categoryIDForAllAllocationsSummaryCategory;
- (unsigned int)categoryIDForSummaryCategoryIndex:(unsigned int)arg1;
- (unsigned int)summaryCategoryIndexForCategoryID:(unsigned int)arg1;
- (unsigned int)categoryIDForSummaryCategoryAllocationType:(unsigned int)arg1;
- (void)_setCategoryID:(unsigned int)arg1 forSummaryCategoryAllocationType:(unsigned int)arg2;
- (int)summaryCategoriesVersion;
- (unsigned int)categoryIDForName:(id)arg1;
- (id)categoryNameForID:(unsigned int)arg1;
- (BOOL)useTypeFilteringRules:(id)arg1;
- (void)_initializeTypeFilteringRules:(unsigned long long)arg1;
- (void)_clearTypeFilteringRules;
- (void)setRecordingMode:(unsigned long long)arg1;
- (void)setAllocationTypeFilter:(int)arg1;
- (int)allocationTypeFilter;
- (void)setDiscardsLifeCycleComplete:(BOOL)arg1;
- (id)vmRegionTracker;
- (BOOL)onlyActiveAllocationsAvailable;
- (unsigned int)maxCategoryIdentifier;
- (unsigned int)lastEventIdentifier;
- (unsigned long long)lastTimestamp;
- (id)storageManager;
- (id)repository;
- (id)aggregates;
- (id)taggingTable;
- (id)eventsForMemoryAddress:(unsigned long long)arg1 constrainToAllocation:(id)arg2;
- (void)enumerateEventsForMemoryAddress:(unsigned long long)arg1 constrainToAllocation:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateActiveAllocationEventsForCategory:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)enumerateActiveAllocationEventPropertiesWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateObjectEventsForCategory:(unsigned int)arg1 startingIdentifier:(unsigned int)arg2 endingIdentifier:(unsigned int)arg3 withBlock:(CDUnknownBlockType)arg4;
- (void)enumerateAllEventsFromIdentifier:(unsigned int)arg1 endingIdentifier:(unsigned int)arg2 withBlock:(CDUnknownBlockType)arg3;
- (id)eventForIdentifier:(unsigned int)arg1;
- (unsigned int)eventIdentifierForActiveAllocationAddress:(unsigned long long)arg1;
- (unsigned int)latestEventIdentifierBeforeTimestamp:(unsigned long long)arg1;
- (unsigned int)earliestEventIdentifierAfterTimestamp:(unsigned long long)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithEventsArray:(id)arg1 repository:(id)arg2 intermediatesPath:(id)arg3;
- (id)initWithDevice:(id)arg1 pid:(int)arg2 file:(id)arg3 relativePath:(id)arg4 repository:(id)arg5;
- (id)initCreatingIvars:(BOOL)arg1 device:(id)arg2;
- (id)initCreatingIvars:(BOOL)arg1 device:(id)arg2 pid:(int)arg3 repository:(id)arg4;

@end

@interface XRUndeadFlag : XRTimeFlag
{
    XRObjectAllocInstrument *_oainstrument;
    NSString *_instrumentUUID;
    unsigned int _zombieAllocationID;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)_showZombieInformation:(id)arg1;
- (id)instrument;
- (id)dataElementsForContext:(id)arg1;
- (id)detailedSummary;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 zombieEvent:(id)arg2 instrument:(id)arg3;

@end

@interface XRObjectAllocStringRuleViewController : NSViewController <NSTableViewDelegate>
{
    XRObjectAllocInstrument *_instrument;
    NSTableView *_tableView;
    NSTableColumn *_stringColumn;
    NSArrayController *_ac;
}

+ (id)userDisplayStringForRule:(id)arg1;
+ (id)userDisplayStringForRules:(id)arg1;
- (void).cxx_destruct;
- (void)moveRowDown:(id)arg1;
- (void)moveRowUp:(id)arg1;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (void)remove:(id)arg1;
- (void)add:(id)arg1;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)loadView;
- (void)setInstrument:(id)arg1;
- (void)_instrumentRemoved:(id)arg1;
- (id)initWithInstrument:(id)arg1;
- (id)userDisplayString;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRVMInstrument : XRLegacyInstrument <NSTableViewDataSource, NSTableViewDelegate, NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    unsigned long long _activeDetailViewType;
    NSMutableArray *_detailViewStack;
    NSScrollView *_enclosingScrollView;
    XROutlineDetailView *_summaryView;
    PFTTableDetailView *_regionsView;
    PFTTableDetailView *_pagesView;
    XRVMRegion *_detailRegion;
    XRVMRegionAnnotation *_detailAnnotation;
    NSMutableArray *_displayArray;
    NSMutableSet *_expandedTypes;
    id _sortID;
    id _sortIDRegions;
    NSArray *_filterTokens;
    int _protectionFilter;
    unsigned long long _snapRateMicros;
    BOOL _coalesceRegions;
    BOOL _splitDyld;
    BOOL _fullPaths;
    BOOL _reuseFilteredEvents;
    BOOL _sortAscending;
    BOOL _sortAscendingRegions;
    BOOL _filterWithOr;
    BOOL _forceScrollSnap;
    BOOL _trackInspectionHead;
    BOOL _autoSnapshot;
    BOOL _warnZombies;
}

+ (id)_typeColorCell;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
- (id)_filteredDataSourceArray:(id)arg1 tokens:(id)arg2 context:(id)arg3 matchesAny:(BOOL)arg4;
- (void)_filterDisplayData;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)_setSortIdentifier:(id)arg1 inView:(id)arg2;
- (void)setInspectionTime:(unsigned long long)arg1;
- (void)_sortTables;
- (BOOL)_refreshDataSources;
- (void)updateCurrentDetailView:(BOOL)arg1;
- (void)setDetailViewType:(unsigned long long)arg1;
- (id)detailViewLabelForType:(unsigned long long)arg1;
- (unsigned long long)detailViewTypeMask;
- (void)setDetailViewStack:(id)arg1;
- (void)_focusRegion:(id)arg1;
- (void)_focusRegionClicked:(id)arg1;
- (id)_displayState;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)_snapshotNow:(id)arg1;
- (unsigned long long)_effectiveMicroInterval;
- (BOOL)autoSnapshot;
- (void)setAutoSnapshot:(BOOL)arg1;
- (BOOL)trackInspectionHead;
- (void)setTrackInspectionHead:(BOOL)arg1;
- (id)statusString;
- (long long)snapSecondRate;
- (void)setSnapSecondRate:(long long)arg1;
- (BOOL)showFullPaths;
- (void)setShowFullPaths:(BOOL)arg1;
- (BOOL)splitSharedCache;
- (void)setSplitSharedCache:(BOOL)arg1;
- (BOOL)coalesceRegions;
- (void)setCoalesceRegions:(BOOL)arg1;
- (BOOL)showExec;
- (void)setShowExec:(BOOL)arg1;
- (BOOL)showWrite;
- (void)setShowWrite:(BOOL)arg1;
- (BOOL)showRead;
- (void)setShowRead:(BOOL)arg1;
- (void)addColumnsToDetailView:(id)arg1;
- (id)_enclosingScrollView;
- (id)_pagesView;
- (id)_regionsView;
- (id)_summaryView;
- (id)dataElementsForContext:(id)arg1;
- (void)stopRecording;
- (void)prepareToRecord;
- (BOOL)verifyEnvironment:(id)arg1 arguments:(id)arg2 instruments:(id)arg3 error:(id *)arg4;
- (void)configureTrack:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)invalidate;
- (id)initWithExtension:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRVMRun : XRRun
{
    NSMutableArray *_fullVMStates;
    unsigned long long _workerInterval;
    BOOL _workerShouldRun;
    BOOL _forceSnap;
    unsigned int _targetTask;
    int _targetPid;
    NSString *_status;
    XRVMState *_currentState;
    DTXChannel *_recordingChannel;
}

- (void).cxx_destruct;
- (void)workerThreadTrack:(id)arg1;
- (void)forceSnapshot;
- (id)statusString;
- (void)_updateStatusString;
- (void)setMicroSecondInterval:(unsigned long long)arg1;
- (id)stateNearTimestamp:(unsigned long long)arg1;
- (id)lastState;
- (id)copyVMStates;
- (void)stopRecording;
- (BOOL)startRecordingPid:(int)arg1 onDevice:(id)arg2 desiredMicrosecondInterval:(unsigned long long)arg3 error:(id *)arg4;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XROAStorageManager : XRStorageManager
{
    XRDescriptorSubstitutions *_categorySubstitutions;
    struct _opaque_pthread_mutex_t _vmRegionNameLock;
    NSMutableDictionary *_vmRegionNameForEventIdentifier;
}

- (unsigned int)eventTypeForEventIdentifier:(unsigned int)arg1;
- (unsigned int)pastEventIdentifierForEventIdentifier:(unsigned int)arg1;
- (unsigned int)futureEventIdentifierForEventIdentifier:(unsigned int)arg1;
- (void)setFutureEventIdentifier:(unsigned int)arg1 forEventIdentifer:(unsigned int)arg2;
- (void)setCategoryIdentifier:(unsigned int)arg1 forEventIdentifer:(unsigned int)arg2;
- (void)setVMRegionName:(id)arg1 forEventIdentifier:(unsigned int)arg2;
- (id)vmRegionNameForEventIdentifier:(unsigned int)arg1;
- (id)categoryForIdentifier:(unsigned int)arg1;
- (unsigned int)identifierForCategory:(id)arg1;
- (id)archiveProperties;
- (void)dealloc;
- (id)initWithFilePath:(id)arg1 descriptor:(id)arg2 options:(int)arg3;

@end

@interface XRObjectAllocImportReceiver : XRObjectAllocReceiver
{
    XRDTPSImporter *_importer;
}

- (void).cxx_destruct;
- (BOOL)startRecordingWithPid:(int)arg1 storeInRun:(id)arg2 error:(id *)arg3;
- (void)prepareForPid:(int)arg1 inRun:(id)arg2;
- (id)initWithImporter:(id)arg1;

@end

@interface XRObjectAllocEvent : XRManagedEvent <NSCopying, DataRepresentation>
{
    unsigned long long _timestamp;
    unsigned long long _ptr;
    unsigned long long _data;
    int _size;
    int _delta;
    unsigned int _type;
    unsigned int _thread;
    unsigned int _categoryIdentifier;
    unsigned int _backtraceIdentifier;
    unsigned int _pastEventIdentifier;
    unsigned int _futureEventIdentifier;
}

+ (void)configureDescriptor:(id)arg1 forStorageManager:(id)arg2;
- (BOOL)isAliveThroughIdentifier:(unsigned int)arg1;
- (unsigned int)allocationEvent;
- (unsigned int)destructionEvent;
- (unsigned int)pastEvent;
- (unsigned int)futureEvent;
- (unsigned int)identifier;
- (unsigned int)backtraceIdentifier;
- (unsigned int)categoryIdentifier;
- (id)eventTypeName;
- (id)categoryNameOrDescription;
- (id)categoryName;
- (int)refCountDelta;
- (id)refCountForDisplay;
- (unsigned long long)address;
- (unsigned long long)slot;
- (unsigned long long)data;
- (int)delta;
- (int)size;
- (id)extendedData;
- (id)backtrace;
- (double)weight;
- (unsigned int)thread;
- (unsigned int)eventType;
- (unsigned long long)timestamp;
- (id)initWithDataStream:(char *)arg1 position:(unsigned long long *)arg2 max:(unsigned long long)arg3 version:(long long)arg4 substitutions:(struct DataRepresentationSubstitutions *)arg5;
- (void)addToDataStream:(char *)arg1 position:(unsigned long long *)arg2 max:(unsigned long long)arg3 substitutions:(struct DataRepresentationSubstitutions *)arg4;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XROAEventAggregate : NSObject <NSCoding>
{
    struct XRTimeRange _timeRange;
    unsigned int _firstEventIdentifier;
    unsigned int _lastEventIdentifier;
    unsigned int _modificationIdentifier;
    CDStruct_01c56c7e *_statData;
    unsigned int _statDataSize;
    unsigned int _statDataCount;
    XRObjectAllocRunSharedData *_sharedData;
}

+ (void)initialize;
@property XRObjectAllocRunSharedData *sharedData; // @synthesize sharedData=_sharedData;
- (void)validateStatData;
- (void)enumerateStatDataWithBlock:(CDUnknownBlockType)arg1;
- (struct XRTimeRange)timeRange;
- (unsigned int)modificationIdentifier;
- (unsigned int)lastEventIdentifier;
- (unsigned int)firstEventIdentifier;
- (unsigned int)categoryCount;
- (CDStruct_01c56c7e)statDataForCategoryIdentifier:(unsigned int)arg1;
- (void)aggregateEvent:(unsigned int)arg1 eventType:(unsigned int)arg2 size:(int)arg3 deltaBytes:(int)arg4 oldCategory:(unsigned int)arg5 newCategory:(unsigned int)arg6 generation:(unsigned int)arg7;
- (CDStruct_01c56c7e *)_statDataForCategory:(unsigned int)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithTimeRange:(struct XRTimeRange)arg1 sharedData:(id)arg2 categoryCapacity:(unsigned int)arg3;

@end

@interface XROAEventSummary : NSObject <NSCoding, NSCopying>
{
    long long totalBytes;
    long long activeBytes;
    int totalAllocationCount;
    int activeAllocationCount;
    int totalEvents;
    int livingCount;
    int transitoryCount;
    int categoryIdentifier;
    long long livingBytes;
    long long transitoryBytes;
    NSString *categoryName;
}

+ (void)initialize;
- (unsigned int)categoryIdentifier;
- (id)category;
- (void)add:(id)arg1;
- (void)clear;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithCategory:(id)arg1 identifier:(unsigned int)arg2;

@end

@interface XRLegacyObjectAllocEvent : XRObjectAllocEvent <NSCoding>
{
    NSString *_categoryName;
    id <CommonRawStack> _backtrace;
}

- (id)categoryName;
- (id)backtrace;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface XRGroupedObjectAllocEvent : XRObjectAllocEvent
{
    unsigned long long *_subIndexes;
    unsigned int _subIndexesCount;
    long long _primaryIndex;
    NSString *_title;
    unsigned long long _slot;
}

- (id)eventTypeName;
- (id)backtrace;
- (id)refCountForDisplay;
- (unsigned long long)slot;
- (long long)integerValue;
- (int)refCountDelta;
- (long long)primaryIndex;
- (unsigned long long)childIndex:(long long)arg1;
- (unsigned int)numberOfEvents;
- (void)dealloc;
- (id)initWithEventTitle:(id)arg1 indexes:(id)arg2 inArray:(id)arg3;

@end

@interface XRVMInstrumentDecorator : DTTimelineDecorator
{
    XRVMRun *_run;
    unsigned long long _graphType;
}

- (void).cxx_destruct;
- (id)decorateInspectionRanges:(id)arg1;
- (BOOL)mustDecorateOnMainThread;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)initWithRun:(id)arg1 graphName:(id)arg2;
- (id)init;

@end

@interface XRHeapGeneration : NSObject <NSCoding>
{
    struct XRTimeRange _timeRange;
    NSString *_name;
    NSString *_notes;
    XRObjectAllocRun *_parentRun;
    NSArrayController *_controller;
    XRHeapCategory *_mallocCategory;
    unsigned long long _size;
    unsigned int _objectCount;
}

- (void).cxx_destruct;
- (void)setFilterPredicate:(id)arg1;
- (void)sortByTimestamp:(BOOL)arg1;
- (void)sortBySize:(BOOL)arg1;
- (void)sortByCount:(BOOL)arg1;
- (void)sortByCategory:(BOOL)arg1;
- (id)categoryWithIdentifier:(unsigned int)arg1;
- (id)categories;
- (unsigned int)count;
- (unsigned long long)size;
- (void)update;
- (id)run;
- (void)setNotes:(id)arg1;
- (id)notes;
- (void)setName:(id)arg1;
- (id)name;
- (void)setTimeRange:(struct XRTimeRange)arg1;
- (struct XRTimeRange)timeRange;
- (void)setRun:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithTimeRange:(struct XRTimeRange)arg1 run:(id)arg2;

@end

@interface XRHeapCategory : NSObject
{
    unsigned int _categoryIdentifier;
    NSString *_categoryName;
    XRManagedIDArray *_identifiers;
    XRManagedEventArrayController *_ac;
    NSArray *_promotedIDs;
    unsigned long long _size;
    XRHeapGeneration *_parent;
}

@property(readonly) unsigned long long size; // @synthesize size=_size;
@property(readonly) __weak XRHeapGeneration *generation; // @synthesize generation=_parent;
@property(readonly, copy) NSString *categoryName; // @synthesize categoryName=_categoryName;
@property(readonly) unsigned int categoryIdentifier; // @synthesize categoryIdentifier=_categoryIdentifier;
- (void).cxx_destruct;
@property(readonly) unsigned int count;
- (void)clear;
- (unsigned int *)copyIdentifiers;
- (void)addEventIdentifier:(unsigned int)arg1 withWeight:(unsigned int)arg2;
- (void)sortWithDescriptor:(id)arg1;
@property(readonly) NSArray *sortedIdentifiers;
- (id)description;
- (id)initWithCategoryIdentifier:(unsigned int)arg1 storageManager:(id)arg2 categoryName:(id)arg3 generation:(id)arg4;

@end

@interface XRHeapGenerationFlag : XRTimeFlag
{
    XRHeapGeneration *_generation;
    XRObjectAllocRun *_run;
}

- (void).cxx_destruct;
- (id)_run;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setName:(id)arg1;
- (id)generation;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithGeneration:(id)arg1 run:(id)arg2;

@end

@interface XRLeak : NSObject <NSCoding>
{
    unsigned long long _discoveryTimestamp;
    NSData *_content;
    unsigned long long _remoteAddress;
    unsigned long long _remoteIsa;
    unsigned int _remoteSize;
    BOOL _isRoot;
    BOOL _inCycle;
    unsigned long long _allocationTimestamp;
    unsigned int _allocationIdentifier;
    id <CommonRawStack> _backtrace;
    unsigned int _reachableSize;
    unsigned int _reachableCount;
    DVT_VMUClassInfo *_layout;
}

+ (void)initialize;
@property(retain) DVT_VMUClassInfo *classInfo; // @synthesize classInfo=_layout;
@property(nonatomic) BOOL inCycle; // @synthesize inCycle=_inCycle;
@property(nonatomic) BOOL isRootLeak; // @synthesize isRootLeak=_isRoot;
@property(nonatomic) unsigned int reachableCount; // @synthesize reachableCount=_reachableCount;
@property(nonatomic) unsigned int reachableSize; // @synthesize reachableSize=_reachableSize;
@property(copy, nonatomic) NSData *content; // @synthesize content=_content;
@property(retain, nonatomic) id <CommonRawStack> backtrace; // @synthesize backtrace=_backtrace;
@property(nonatomic) unsigned long long allocationTimestamp; // @synthesize allocationTimestamp=_allocationTimestamp;
@property(nonatomic) unsigned int allocationIdentifier; // @synthesize allocationIdentifier=_allocationIdentifier;
@property(readonly) unsigned long long discoveryTimestamp; // @synthesize discoveryTimestamp=_discoveryTimestamp;
@property(readonly) unsigned long long remoteIsa; // @synthesize remoteIsa=_remoteIsa;
@property(readonly) unsigned int size; // @synthesize size=_remoteSize;
@property(readonly) unsigned long long address; // @synthesize address=_remoteAddress;
- (void).cxx_destruct;
@property(readonly) NSString *name;
@property(readonly) unsigned int count;
@property(readonly) NSString *displayAddress;
@property(readonly) NSString *className;
- (unsigned long long)timestamp;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithAddress:(unsigned long long)arg1 size:(unsigned int)arg2 isa:(unsigned long long)arg3 classInfo:(id)arg4 discoveryTimestamp:(unsigned long long)arg5;

@end

@interface XRBacktraceAggregatedLeak : XRLeak
{
    NSMutableArray *_leaks;
    NSString *_agreedName;
}

- (void).cxx_destruct;
- (id)className;
- (unsigned int)size;
- (unsigned int)count;
- (unsigned long long)address;
@property(readonly) NSArray *leaks;
- (void)addLeak:(id)arg1;
- (id)initWithBacktrace:(id)arg1;

@end

@interface XRCyclicLeak : NSObject <NSCoding>
{
    CDStruct_fc8fca5f _refList;
    CDStruct_cbbc06c7 *_nodeList;
    unsigned int _nodeCount;
    unsigned int _pivotIdx;
    NSMutableArray *_simpleCycles;
    XRLeaksRun *_parent;
}

+ (void)initialize;
- (void).cxx_destruct;
@property(readonly) NSString *name;
@property(readonly) NSArray *simpleCycles;
@property(retain) XRLeak *pivot;
@property(readonly) NSArray *edgeChain;
@property(readonly) BOOL isSimple;
@property(readonly) NSArray *edges;
@property(readonly) NSArray *nodes;
@property(readonly) unsigned long long discoveryTimestamp;
- (void)_enumerateEdgesWithBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateNodesWithBlock:(CDUnknownBlockType)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithReferences:(CDStruct_0a4d7299 *)arg1 refCount:(unsigned int)arg2 leaks:(CDStruct_cbbc06c7 *)arg3 leakCount:(unsigned int)arg4 run:(id)arg5;

@end

@interface XRLeakReference : NSObject
{
    XRLeak *_source;
    XRLeak *_destination;
    unsigned int _type;
    unsigned int _offset;
}

@property(readonly) XRLeak *destination; // @synthesize destination=_destination;
@property(readonly) unsigned int type; // @synthesize type=_type;
@property(readonly) unsigned int offset; // @synthesize offset=_offset;
@property(readonly) XRLeak *source; // @synthesize source=_source;
- (void).cxx_destruct;
- (id)name;
@property(readonly) NSString *ivarTypeDescription;
@property(readonly) NSString *ivarDescription;
@property(readonly) NSString *ivarName;
- (void)_doWithIvar:(CDUnknownBlockType)arg1;
@property(readonly) DVT_VMUClassInfo *sourceLayout;
- (BOOL)isEqual:(id)arg1;
- (id)initWithSource:(id)arg1 offset:(unsigned int)arg2 type:(unsigned int)arg3 destination:(id)arg4;

@end

@interface XROAEventRowView : NSTableRowView
{
    BOOL _roundedPath;
    NSColor *_highlightColor;
}

@property(retain, nonatomic) NSColor *highlightColor; // @synthesize highlightColor=_highlightColor;
@property(nonatomic) BOOL roundedPath; // @synthesize roundedPath=_roundedPath;
- (void).cxx_destruct;
- (void)drawSelectionInRect:(struct CGRect)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (void)_drawColorInSelectionPath:(id)arg1;

@end

@interface XROAEventCellView : NSTableCellView
{
    BOOL _desaturated;
}

@property(nonatomic) BOOL desaturated; // @synthesize desaturated=_desaturated;
- (void)setBackgroundStyle:(long long)arg1;

@end

@interface XRObjectAllocEventViewController : NSObject <NSTableViewDataSource, NSTableViewDelegate, NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    XRManagedEventArrayController *_ac;
    NSTableView *_view;
    NSView *_returnView;
    XROutlineDetailView *_pairingHelperView;
    NSScrollView *_sv;
    NSTableView *_mostRecentKeyView;
    NSSegmentedControl *_labelControl;
    unsigned int _style;
    XRRun<SymbolAwareRun> *_run;
    CDUnknownBlockType _addressAction;
    XRInstrument *_instrument;
    NSMutableArray *_pairingMenuItems;
    int _filter;
    int _grouping;
    double _preservedBottomFactor;
    XRMetadataTagTable *_table;
    XRMetadataTag *_backtraceTag;
    XRMetadataTag *_pairingTag;
    XRMetadataTag *_autoPairedTag;
    XRMetadataTag *_colorLabelTag;
    XRMetadataTag *_speculativelyAutoPairedTag;
    XRMetadataTag *_ignoreTag;
    NSMutableDictionary *_providers;
    NSMutableDictionary *_groupedEvents;
    NSMutableIndexSet *_litNormalizedIndexes;
    NSMutableIndexSet *_pairNormalizedIndexes;
    NSMutableIndexSet *_suggestedNormalizedIndexes;
    BOOL _ignoreSelectionChanges;
    BOOL _hasPairableContent;
    XRScopeBarView *_scopeBar;
    XRControlBar *_statusBar;
    NSSplitView *_splitView;
    NSTextField *_statusTextField;
    NSButton *_pairButton;
    NSButton *_showHideButton;
    NSView *_containerView;
    NSScrollView *_topView;
    NSScrollView *_bottomView;
    NSView *_bottomContainer;
    NSLayoutConstraint *_bottomContainerHeightConstraint;
    NSLayoutConstraint *_bottomContentHeightConstraint;
    NSIndexSet *_desaturatedIndexes;
    NSIndexSet *_excludedIndexes;
    NSIndexSet *_pairHelperIndexes;
    NSArray *_groupIndexSets;
}

+ (id)dataElementsForEvent:(id)arg1 run:(id)arg2;
+ (void)initialize;
@property(retain, nonatomic) NSArray *groupIndexSets; // @synthesize groupIndexSets=_groupIndexSets;
@property(retain, nonatomic) NSIndexSet *pairHelperIndexes; // @synthesize pairHelperIndexes=_pairHelperIndexes;
@property(retain, nonatomic) NSIndexSet *excludedIndexes; // @synthesize excludedIndexes=_excludedIndexes;
@property(retain, nonatomic) NSIndexSet *desaturatedIndexes; // @synthesize desaturatedIndexes=_desaturatedIndexes;
@property(retain, nonatomic) NSLayoutConstraint *bottomContentHeightConstraint; // @synthesize bottomContentHeightConstraint=_bottomContentHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *bottomContainerHeightConstraint; // @synthesize bottomContainerHeightConstraint=_bottomContainerHeightConstraint;
@property(retain, nonatomic) NSView *bottomContainer; // @synthesize bottomContainer=_bottomContainer;
@property(retain, nonatomic) NSScrollView *bottomView; // @synthesize bottomView=_bottomView;
@property(retain, nonatomic) NSScrollView *topView; // @synthesize topView=_topView;
@property(retain, nonatomic) NSView *containerView; // @synthesize containerView=_containerView;
@property(retain, nonatomic) NSButton *showHideButton; // @synthesize showHideButton=_showHideButton;
@property(retain, nonatomic) NSButton *pairButton; // @synthesize pairButton=_pairButton;
@property(retain, nonatomic) NSTextField *statusTextField; // @synthesize statusTextField=_statusTextField;
@property(retain, nonatomic) NSSplitView *splitView; // @synthesize splitView=_splitView;
@property(retain, nonatomic) XRControlBar *statusBar; // @synthesize statusBar=_statusBar;
@property(retain, nonatomic) XRScopeBarView *scopeBar; // @synthesize scopeBar=_scopeBar;
- (void).cxx_destruct;
- (void)filterWithTokens:(id)arg1 matchesAny:(BOOL)arg2;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)_setEventGrouping:(int)arg1;
- (void)_toggleEventFilter:(int)arg1;
- (void)_updateTableWithActions:(CDUnknownBlockType)arg1;
- (id)_indexSetsForTag:(id)arg1;
- (void)_withSelectedEvents:(BOOL)arg1 inView:(id)arg2 perform:(CDUnknownBlockType)arg3;
- (id)_eventAtDisplayRow:(long long)arg1 inView:(id)arg2;
@property(readonly) NSArray *dataElementsForSelection;
- (void)setSelectedEventIdentifier:(unsigned int)arg1;
- (void)selectEventNearestTimestamp:(unsigned long long)arg1;
- (id)_visibleRowsFromAllRows:(id)arg1;
- (id)eventAtRow:(long long)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableDetailView:(id)arg1 shouldDisplayActionInRow:(id)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)_selectionDidChangeToPrimaryTime:(unsigned long long)arg1;
- (BOOL)_isNormalizedRowDesaturated:(unsigned long long)arg1;
- (id)detailView:(id)arg1 backgroundColorForRow:(long long)arg2;
- (void)_refreshBasedOnSelectionInView:(id)arg1;
- (void)_setHighlights:(id)arg1 rounded:(BOOL)arg2 forNormalizedRows:(id)arg3 inView:(id)arg4;
- (BOOL)selectionShouldChangeInOutlineView:(id)arg1;
- (void)outlineViewSelectionIsChanging:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (BOOL)_isItemDesaturated:(id)arg1;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (void)_autoTagIds:(unsigned int *)arg1 count:(unsigned int)arg2 manager:(id)arg3;
- (void)setDisplayedEventIDs:(unsigned int *)arg1 count:(unsigned int)arg2 forRun:(id)arg3 pairings:(id)arg4 storageManager:(id)arg5;
- (void)setDisplayedEvents:(id)arg1 forRun:(id)arg2 pairings:(id)arg3;
- (void)_actionClicked:(id)arg1;
- (void)downloadDSYM:(id)arg1;
- (void)symbolicateAddress:(id)arg1;
- (void)locateAndSymbolicateAddress:(id)arg1;
- (id)menuForDetailViewRow:(id)arg1 andColumn:(id)arg2;
- (void)_dumpCSInfoToConsole:(id)arg1;
- (void)addColumnsToDetailView:(id)arg1;
- (void)_registerColumnIdentifier:(id)arg1 withProviderBlock:(CDUnknownBlockType)arg2;
- (void)_refreshGrouping:(id)arg1 filter:(id)arg2 desaturated:(id)arg3;
- (void)_repeatAutoPair:(id)arg1;
- (void)_clearTagsForSelectedEvents:(id)arg1;
- (void)_ignoreSelectedEvents:(id)arg1;
- (void)_unpairSelectedEvents:(id)arg1;
- (void)_pairSelectedEvents:(id)arg1;
- (void)_togglePairHelperView:(id)arg1;
- (void)_setPairHelperViewShown:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_unobserveWindow:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)_objectValueForDisplayRow:(unsigned long long)arg1;
- (long long)_displayRowInView:(id)arg1 forNormalizedRow:(long long)arg2;
- (long long)_normalizedRowForDisplayRow:(long long)arg1;
- (void)setAddressActionBlock:(CDUnknownBlockType)arg1;
@property(readonly) NSView *view;
- (void)dealloc;
- (id)initWithViewName:(id)arg1 label:(id)arg2 style:(int)arg3 instrument:(id)arg4;
- (void)_validateButtonState;
- (void)_reconfigureAccessory;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRObjectAllocInstrumentDecorator : DTTimelineDecorator
{
    XRObjectAllocRun *_run;
    unsigned long long _graphIndex;
    unsigned long long _drawingIntervalWidth;
    BOOL _crackAggregates;
}

- (void).cxx_destruct;
- (void)setDefaultsForPlane:(id)arg1;
- (id)initWithRun:(id)arg1 graphIndex:(unsigned long long)arg2 intervalWidth:(unsigned long long)arg3 crackAggregates:(BOOL)arg4;
- (id)init;

@end

@interface XRObjectAllocInstrumentDecoratorCurrentBytes : XRObjectAllocInstrumentDecorator
{
}

- (id)decorateInspectionRanges:(id)arg1;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (BOOL)mustDecorateOnMainThread;

@end

@interface XRObjectAllocInstrumentDecoratorAllocsPerTime : XRObjectAllocInstrumentDecorator
{
}

- (id)decorateInspectionRanges:(id)arg1;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;

@end

@interface XRObjectAllocInstrumentDecoratorMallocTimeDistribution : XRObjectAllocInstrumentDecorator
{
}

- (id)decorateInspectionRanges:(id)arg1;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;

@end

@interface XRMetadataTag : NSObject <NSCoding>
{
    XRMetadataTag *_parent;
    NSString *_derivedName;
    unsigned int _tagNumber;
    unsigned int _mark;
    NSString *_name;
    NSColor *_color;
}

+ (id)rootTagWithName:(id)arg1;
+ (id)tagWithParentTag:(id)arg1;
@property(nonatomic) unsigned int mark; // @synthesize mark=_mark;
@property(retain, nonatomic) NSColor *color; // @synthesize color=_color;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly) unsigned int tagNumber; // @synthesize tagNumber=_tagNumber;
@property(readonly) XRMetadataTag *parentTag; // @synthesize parentTag=_parent;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isDescendentOfTag:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)_initWithName:(id)arg1 parentTag:(id)arg2;

@end

@interface XRMetadataTagTable : NSObject <NSCoding>
{
    NSMutableSet *_internalTags;
    NSMutableDictionary *_registeredTags;
    struct {
        unsigned long long _field1;
        unsigned int _field2;
        unsigned int _field3;
        id _field4;
    } *_associations;
    unsigned int _mappingCount;
    unsigned int _mappingSize;
    unsigned int _mappingNext;
    unsigned int _monoTime;
    BOOL _sorted;
}

- (void).cxx_destruct;
- (id)indexSetsForTags:(id)arg1 valueProvider:(CDUnknownBlockType)arg2;
- (id)subTagsForTag:(id)arg1;
- (void)enumerateAssociationsWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateValuesForTags:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)_remarkInternalTags:(id)arg1;
- (id)tagForValue:(long long)arg1 rootTag:(id)arg2;
- (id)tagsForValue:(long long)arg1;
- (void)clearTags:(id)arg1;
- (void)dissociateValue:(long long)arg1 fromTag:(id)arg2;
- (void)_withValueMatches:(long long)arg1 performBlock:(CDUnknownBlockType)arg2;
- (void)_sortIfNecessary;
- (void)associateValue:(long long)arg1 withTag:(id)arg2;
- (id)_internalizedTag:(id)arg1;
- (id)description;
- (id)registeredRootTagWithName:(id)arg1;
- (id)registeredTagWithName:(id)arg1 parentTag:(id)arg2;
- (id)_registeredTag:(id)arg1 parentTag:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRObjectAllocVMRegionTracker : NSObject
{
    DVT_VMURangeArray *_regionInfoArray;
    DVT_VMURangeArray *_loadedDylibArray;
    XRBacktraceRepository *_repository;
}

- (void).cxx_destruct;
- (CDStruct_6c9135d0 *)processEvent:(CDStruct_6c9135d0 *)arg1 withFakeEventInsertionBlock:(CDUnknownBlockType)arg2;
- (CDStruct_6c9135d0 *)processDylibRelatedEvent:(CDStruct_6c9135d0 *)arg1;
- (void)debugValidityOfRange:(struct _VMURange)arg1 withExistingRangeAtIndex:(unsigned int)arg2 andMessage:(id)arg3;
- (id)regionInfoArray;
- (void)setRepository:(id)arg1;
- (id)initWithRepository:(id)arg1;

@end

@interface XRLeaksInstrumentDecorator : DTTimelineDecorator
{
    XRLeaksRun *_run;
    unsigned long long _drawingIntervalWidth;
    NSMutableArray *_images;
    struct CGSize _imageSize;
}

- (void).cxx_destruct;
- (id)decorateInspectionRanges:(id)arg1;
- (BOOL)mustDecorateOnMainThread;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)initWithRun:(id)arg1 intervalWidth:(unsigned long long)arg2;
- (id)init;

@end

@interface NSString (SummaryCategoryNameStringComparsion)
- (long long)summaryCategoryNameCompare:(id)arg1;
@end

@interface XRVMState (LegacyDocumentCompatibility)
- (unsigned long long)timestampRelativeToTrace:(const struct _XRDeviceTimeInfo *)arg1;
@end

@interface NSClipView (Workaround12332156)
- (void)updateConstraints;
@end

@interface NSIndexSet (XRIndexingAdditions)
- (id)complementInRange:(struct _NSRange)arg1;
@end

@interface DVT_VMURangeArray (extended)
- (unsigned long long)insertionIndexForLocation:(unsigned long long)arg1;
@end

#endif /* MemoryPlugin_xrplugin_h */
